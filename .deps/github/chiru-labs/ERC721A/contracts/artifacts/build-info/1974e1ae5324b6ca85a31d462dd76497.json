{
	"id": "1974e1ae5324b6ca85a31d462dd76497",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_9\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_54\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_56\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1030:1118   */\ntag_55:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_58\n  tag_13\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_62\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1434:1490   */\ntag_61:\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_65:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_69\n    /* \"#utility.yul\":1992:2041   */\n  tag_70\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_72\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2117:2229   */\ntag_71:\n    /* \"#utility.yul\":2238:2290   */\n  tag_73\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_76\n  tag_16\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2399:2521   */\ntag_75:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_77\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_80\n  tag_14\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2801:2920   */\ntag_79:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_82\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2996:3113   */\ntag_81:\n    /* \"#utility.yul\":3137:3211   */\n  tag_83\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_85\n  tag_15\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3298:3415   */\ntag_84:\n    /* \"#utility.yul\":3439:3513   */\n  tag_86\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_25\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_26:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_27:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_28:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_90:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_92\n  tag_27\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4057:4141   */\ntag_91:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_29:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_30:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_31:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_32:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_97\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4772:4811   */\n  tag_98\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_33:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_34:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_35:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_102\n    /* \"#utility.yul\":5161:5195   */\n  tag_103\n    /* \"#utility.yul\":5170:5194   */\n  tag_104\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5161:5195   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5143:5196   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_36:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_37:\n    /* \"#utility.yul\":5399:5438   */\n  tag_107\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5460:5551   */\n  tag_108\n    /* \"#utility.yul\":5509:5550   */\n  tag_109\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_32\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_38:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_39:\n    /* \"#utility.yul\":5720:5752   */\n  tag_112\n  tag_38\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5761:5826   */\n  tag_113\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_40:\n    /* \"#utility.yul\":5898:6018   */\ntag_115:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_118\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_39\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_41:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_121\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6249:6278   */\n  tag_122\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_30\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_123:\n    /* \"#utility.yul\":6476:6556   */\n  tag_124\n    /* \"#utility.yul\":6532:6554   */\n  tag_125\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_30\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_120:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_42:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_43:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_128\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_44:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_130\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_43\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_132\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_26\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_134\n  tag_19\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7381:7437   */\ntag_133:\n    /* \"#utility.yul\":7461:7499   */\n  tag_135\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_28\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7546:7613   */\n  tag_136\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_41\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_139:\n    /* \"#utility.yul\":8487:8554   */\n  tag_140\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_44\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_137)\n    /* \"#utility.yul\":7708:8326   */\ntag_138:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_141\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_29\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_142:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_146\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_43\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_145:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_137:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9249:9253  bool */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9582:9592  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9578  interfaceId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9658:9668  0x80ac58cd */\n      0x80ac58cd\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9643:9654  interfaceId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9734:9744  0x5b5e139f */\n      0x5b5e139f\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9719:9730  interfaceId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9548:9744  return... */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10102:10115  string memory */\n      0x60\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10134:10139  _name */\n      0x02\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10127:10139  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      tag_100\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17019:17026  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17011:17018  _exists */\n      tag_101\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_102\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17037:17078  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17029:17036  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_102:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17097:17112  _tokenApprovals */\n      0x06\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17113:17120  tokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17097:17127  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17090:17127  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      tag_106\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16736:16738  to */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16740:16747  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16749:16753  true */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16727:16735  _approve */\n      tag_107\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_109\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6179:6192  _startTokenId */\n      tag_110\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_109:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_50:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20683:20710  uint256 prevOwnershipPacked */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20732:20739  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20713:20731  _packedOwnershipOf */\n      tag_113\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20683:20740  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20881:20885  from */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20865:20887  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20865:20906  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20842:20908  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20964:20968  from */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20939:20958  prevOwnershipPacked */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_114\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20978:21013  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20970:20977  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_114:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21026:21053  uint256 approvedAddressSlot */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21055:21078  address approvedAddress */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      tag_116\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21109:21116  tokenId */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21082:21108  _getApprovedSlotAndAddress */\n      tag_117\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21025:21117  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_118\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21239:21254  approvedAddress */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21256:21260  from */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      tag_119\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21262:21279  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      jump\t// in\n    tag_119:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21214:21238  _isSenderApprovedOrOwner */\n      tag_121\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_118:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_122\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21318:21322  from */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      tag_124\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21324:21341  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      jump\t// in\n    tag_124:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21301:21317  isApprovedForAll */\n      tag_87\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_123:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_125\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21354:21396  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21346:21353  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_125:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_122:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_127\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21430:21434  from */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21436:21438  to */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21440:21447  tokenId */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21449:21450  1 */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21408:21429  _beforeTokenTransfers */\n      tag_128\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_127:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21540:21555  approvedAddress */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21678:21679  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21657:21676  approvedAddressSlot */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21650:21680  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n    tag_129:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22066:22084  _packedAddressData */\n      0x05\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22085:22089  from */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22064:22090  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22134:22152  _packedAddressData */\n      0x05\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22153:22155  to */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22132:22156  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      tag_130\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22485:22487  to */\n      dup6\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_131\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22548:22552  from */\n      dup9\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22554:22556  to */\n      dup9\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22558:22577  prevOwnershipPacked */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22533:22547  _nextExtraData */\n      tag_132\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_131:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22505:22578  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22449:22467  _packOwnershipData */\n      tag_133\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      jump\t// in\n    tag_130:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22420:22437  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22438:22445  tokenId */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22420:22592  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22760:22761  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22709:22728  prevOwnershipPacked */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22709:22756  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22709:22761  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_134\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22781:22800  uint256 nextTokenId */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22813:22814  1 */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22803:22810  tokenId */\n      dup6\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22803:22814  tokenId + 1 */\n      add\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22781:22814  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22968:22969  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22934:22951  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22952:22963  nextTokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22934:22969  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_135\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23070:23083  _currentIndex */\n      sload(0x00)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23055:23066  nextTokenId */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23055:23083  nextTokenId != _currentIndex */\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23248:23267  prevOwnershipPacked */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23215:23232  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23233:23244  nextTokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23215:23267  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_135:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22763:23322  {... */\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23431:23447  uint256 toMasked */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23466:23468  to */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23450:23470  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23450:23489  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23431:23489  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23821:23828  tokenId */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23786:23794  toMasked */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23753:23757  from */\n      dup9\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23696:23721  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23642:23643  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23586:23587  0 */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23564:23856  log4(... */\n      log4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23891:23892  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23879:23887  toMasked */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23879:23892  toMasked == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_137\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23902:23932  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23894:23901  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_137:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_139\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23965:23969  from */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23971:23973  to */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23975:23982  tokenId */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23984:23985  1 */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23944:23964  _afterTokenTransfers */\n      tag_140\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_139:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20673:23993  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_53:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24242:24246  from */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24248:24250  to */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24252:24259  tokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24225:24241  safeTransferFrom */\n      tag_77\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11481:11488  address */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      tag_144\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11542:11549  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11523:11541  _packedOwnershipOf */\n      tag_113\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11500:11552  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_146\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7169:7204  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7161:7168  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_146:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7222:7240  _packedAddressData */\n      0x05\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7241:7246  owner */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7222:7277  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7215:7277  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10273:10286  string memory */\n      0x60\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10305:10312  _symbol */\n      0x03\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10298:10312  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_94\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17607:17615  approved */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17573  _operatorApprovals */\n      0x07\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      tag_155\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17574:17591  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      jump\t// in\n    tag_155:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17595:17603  operator */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17555:17615  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17666:17674  operator */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      tag_156\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17645:17662  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      jump\t// in\n    tag_156:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17676:17684  approved */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_77:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25034:25038  from */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25040:25042  to */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25044:25051  tokenId */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25021:25033  transferFrom */\n      tag_50\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25084:25085  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25066:25068  to */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25066:25080  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25066:25085  to.code.length != 0 */\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n      tag_160\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25135:25139  from */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25141:25143  to */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25145:25152  tokenId */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25154:25159  _data */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25104:25134  _checkContractOnERC721Received */\n      tag_162\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_163\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25188:25235  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25180:25187  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_163:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n    tag_160:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10493:10506  string memory */\n      0x60\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      tag_166\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10531:10538  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10523:10530  _exists */\n      tag_101\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_167\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10549:10585  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10541:10548  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_167:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10597:10618  string memory baseURI */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10621:10631  _baseURI() */\n      tag_169\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10621:10629  _baseURI */\n      tag_170\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10621:10631  _baseURI() */\n      jump\t// in\n    tag_169:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10597:10631  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10673:10674  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10654:10661  baseURI */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10648:10669  bytes(baseURI).length */\n      mload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10648:10674  bytes(baseURI).length != 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10701:10708  baseURI */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      tag_173\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10720:10727  tokenId */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10710:10719  _toString */\n      tag_174\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10684:10729  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10641:10735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17939:17943  bool */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17962:17980  _operatorApprovals */\n      0x07\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17981:17986  owner */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17988:17996  operator */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17955:17997  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18318:18329  bool result */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18364:18371  tokenId */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      tag_179\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18345:18358  _startTokenId */\n      tag_110\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      jump\t// in\n    tag_179:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18345:18371  _startTokenId() <= tokenId */\n      gt\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n      tag_180\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18401:18414  _currentIndex */\n      sload(0x00)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18391:18398  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18391:18414  tokenId < _currentIndex */\n      lt\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18434:18448  uint256 packed */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_182:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18514:18515  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18483:18500  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18501:18508  tokenId */\n      dup6\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18474:18509  packed = _packedOwnerships[tokenId] */\n      swap2\n      pop\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18473:18515  (packed = _packedOwnerships[tokenId]) == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_183\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18517:18526  --tokenId */\n      dup3\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_182)\n    tag_183:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18581:18582  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18553:18559  packed */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18553:18577  packed & _BITMASK_BURNED */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18553:18582  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18544:18582  result = packed & _BITMASK_BURNED == 0 */\n      swap2\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18416:18597  {... */\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n    tag_181:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n    tag_180:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43371:43531  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43470:43483  errorSelector */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43464:43468  0x00 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43457:43484  mstore(0x00, errorSelector) */\n      mstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43510:43514  0x04 */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43504:43508  0x00 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43497:43515  revert(0x00, 0x04) */\n      revert\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n    tag_107:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35143:35156  address owner */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      tag_188\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35167:35174  tokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35159:35166  ownerOf */\n      tag_57\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35143:35175  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35190:35203  approvalCheck */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35230:35235  owner */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      tag_190\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35207:35224  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      jump\t// in\n    tag_190:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n    tag_189:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_191\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_192\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35271:35276  owner */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      tag_193\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35278:35295  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      jump\t// in\n    tag_193:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35254:35270  isApprovedForAll */\n      tag_87\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_192:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_194\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_195\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35326:35368  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35318:35325  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_195:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_194:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_191:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35427:35429  to */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35394:35409  _tokenApprovals */\n      0x06\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35410:35417  tokenId */\n      dup6\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35394:35424  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35394:35429  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35464:35471  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35460:35462  to */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35453:35458  owner */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35133:35479  {... */\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_110:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12917:12931  uint256 packed */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12966:12973  tokenId */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      tag_198\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12947:12960  _startTokenId */\n      tag_110\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      jump\t// in\n    tag_198:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12947:12973  _startTokenId() <= tokenId */\n      gt\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n      tag_199\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12998:13015  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13016:13023  tokenId */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12989:13024  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13132:13133  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13122:13128  packed */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13122:13133  packed == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n      tag_200\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13168:13181  _currentIndex */\n      sload(0x00)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13157:13164  tokenId */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13157:13181  tokenId >= _currentIndex */\n      lt\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_201\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13191:13229  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13183:13190  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_202:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_201:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_203:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13853:13870  _packedOwnerships */\n      0x04\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13871:13880  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13844:13881  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13939:13940  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13929:13935  packed */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13929:13940  packed == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n      iszero\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13942:13950  continue */\n      tag_205\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14004:14005  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13976:13982  packed */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13976:14000  packed & _BITMASK_BURNED */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13976:14005  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14007:14020  return packed */\n      tag_197\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_208\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14316:14354  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14308:14315  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_208:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_205:\n      jump(tag_203)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n    tag_200:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14738:14739  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14710:14716  packed */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14710:14734  packed & _BITMASK_BURNED */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14710:14739  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14741:14754  return packed */\n      tag_197\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n    tag_199:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_210\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14782:14820  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14774:14781  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_210:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_197:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_117:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19570:19597  uint256 approvedAddressSlot */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19599:19622  address approvedAddress */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19638:19676  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19679:19694  _tokenApprovals */\n      0x06\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19695:19702  tokenId */\n      dup6\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19638:19703  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19853:19871  tokenApproval.slot */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19830:19871  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19909:19928  approvedAddressSlot */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19903:19929  sload(approvedAddressSlot) */\n      sload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19884:19929  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19816:19939  {... */\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41461:41468  address */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41487:41497  msg.sender */\n      caller\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41480:41497  return msg.sender */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n    tag_121:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18862:18873  bool result */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19024:19040  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19017:19022  owner */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19013:19041  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19004:19041  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19182:19198  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19171:19180  msgSender */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19167:19199  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19154:19199  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19330:19345  approvedAddress */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19319:19328  msgSender */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19316:19346  eq(msgSender, approvedAddress) */\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19308:19313  owner */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19297:19306  msgSender */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19294:19314  eq(msgSender, owner) */\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19291:19347  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19281:19347  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":25901:26055  function _beforeTokenTransfers(... */\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n    tag_132:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40859:40866  uint256 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40878:40894  uint24 extraData */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40904:40923  prevOwnershipPacked */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40904:40945  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40878:40946  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      tag_216\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40982:40986  from */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40988:40990  to */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40992:41001  extraData */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40971:40981  _extraData */\n      tag_217\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_216:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40963:41003  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40963:41025  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40956:41025  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_133:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15441:15455  uint256 result */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15606:15622  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15599:15604  owner */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15595:15623  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15586:15623  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15781:15786  flags */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15767:15778  timestamp() */\n      timestamp\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15742:15765  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15738:15779  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15735:15787  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15728:15733  owner */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15725:15788  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15715:15788  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":26702:26855  function _afterTokenTransfers(... */\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27441:27445  bool */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27486:27488  to */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27461:27506  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      tag_221\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27507:27524  _msgSenderERC721A */\n      tag_120\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      jump\t// in\n    tag_221:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27528:27532  from */\n      dup8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27534:27541  tokenId */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27543:27548  _data */\n      dup7\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27461:27549  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x01\n    tag_224:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_227\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27756:27757  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27739:27745  reason */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27739:27752  reason.length */\n      mload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27739:27757  reason.length == 0 */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n      tag_233\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_234\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27785:27832  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27777:27784  _revert */\n      tag_104\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_234:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n    tag_233:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27918:27924  reason */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27912:27925  mload(reason) */\n      mload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27903:27909  reason */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27899:27901  32 */\n      0x20\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27895:27910  add(32, reason) */\n      add\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27888:27926  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_227:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27627:27681  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27617:27623  retval */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27610:27681  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_170:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11038:11051  string memory */\n      0x60\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11063:11072  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41666:41683  string memory str */\n      0x60\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42094:42098  0xa0 */\n      0xa0\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42087:42091  0x40 */\n      0x40\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42081:42092  mload(0x40) */\n      mload\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42077:42099  add(mload(0x40), 0xa0) */\n      add\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42184:42185  m */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42178:42182  0x40 */\n      0x40\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42171:42186  mstore(0x40, m) */\n      mstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42257:42261  0x20 */\n      0x20\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42254:42255  m */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42250:42262  sub(m, 0x20) */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42243:42262  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42337:42338  0 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42332:42335  str */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42325:42339  mstore(str, 0) */\n      mstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42438:42441  str */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42672:42677  value */\n      dup4\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n    tag_238:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42680:42681  1 */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42719:42720  1 */\n      0x01\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42714:42717  str */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42710:42721  sub(str, 1) */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42703:42721  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42887:42889  10 */\n      0x0a\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42881:42885  temp */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42877:42890  mod(temp, 10) */\n      mod\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42873:42875  48 */\n      0x30\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42869:42891  add(48, mod(temp, 10)) */\n      add\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42864:42867  str */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42856:42892  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42979:42981  10 */\n      0x0a\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42973:42977  temp */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42969:42982  div(temp, 10) */\n      div\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42961:42982  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43044:43048  temp */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      tag_238\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43034:43059  if iszero(temp) { break } */\n      jumpi\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n    tag_240:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":42658:42679  { let temp := value } */\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43110:43113  str */\n      dup3\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43105:43108  end */\n      dup2\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43101:43114  sub(end, str) */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43223:43227  0x20 */\n      0x20\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43218:43221  str */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43214:43228  sub(str, 0x20) */\n      sub\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43207:43228  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43286:43292  length */\n      dup1\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43281:43284  str */\n      dup5\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":43274:43293  mstore(str, length) */\n      mstore\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41704:43303  {... */\n      pop\n      pop\n      pop\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n    tag_217:\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40572:40578  uint24 */\n      0x00\n        /* \"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_243:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_244:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_245:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_246:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_247:\n        /* \"#utility.yul\":561:584   */\n      tag_290\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_246\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_291:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_248:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_293\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_247\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_296\n      tag_244\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":833:952   */\n    tag_295:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_297\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_248\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_249:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_250:\n        /* \"#utility.yul\":1268:1289   */\n      tag_300\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_249\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_302\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_251:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_252:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_253:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_306:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_306)\n    tag_308:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_254:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_255:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_311\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_251\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2329:2400   */\n      tag_312\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_252\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_313\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_253\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2499:2528   */\n      tag_314\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_254\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_316\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_255\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_256:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_257:\n        /* \"#utility.yul\":3016:3040   */\n      tag_319\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_256\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_320:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_258:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_322\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_257\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_34:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_325\n      tag_244\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3292:3411   */\n    tag_324:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_326\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_258\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_259:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_260:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_329\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_261:\n        /* \"#utility.yul\":3872:3896   */\n      tag_331\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_260\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_37:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_333\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_261\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_262:\n        /* \"#utility.yul\":4210:4234   */\n      tag_335\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_260\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_336:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_263:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_338\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_262\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_40:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_341\n      tag_244\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4503:4622   */\n    tag_340:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_342\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_263\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_343\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_258\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_264:\n        /* \"#utility.yul\":4977:5001   */\n      tag_345\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_256\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_46:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_347\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_264\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_49:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_350\n      tag_244\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5352:5471   */\n    tag_349:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_351\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_263\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_352\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_263\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_353\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_258\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_62:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_356\n      tag_244\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5943:6062   */\n    tag_355:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_357\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_263\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_265:\n        /* \"#utility.yul\":6272:6293   */\n      tag_359\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_249\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_360:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_266:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_362\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_265\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_72:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_365\n      tag_244\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6553:6672   */\n    tag_364:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_366\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_263\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_367\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_266\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_267:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_268:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_269:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_270:\n        /* \"#utility.yul\":7452:7479   */\n      tag_372\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_254\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_374\n      tag_269\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7525:7613   */\n    tag_373:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_271:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_376\n      tag_243\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_377\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_270\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_272:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_380\n      tag_269\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7928:7984   */\n    tag_379:\n        /* \"#utility.yul\":8002:8031   */\n      tag_381\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_254\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_273:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_274:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_384\n        /* \"#utility.yul\":8374:8422   */\n      tag_385\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_272\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8358:8423   */\n      tag_271\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_387\n      tag_268\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8498:8610   */\n    tag_386:\n        /* \"#utility.yul\":8619:8673   */\n      tag_388\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_273\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_275:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_391\n      tag_267\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8769:8891   */\n    tag_390:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_392\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_274\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_76:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_395\n      tag_244\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9178:9298   */\n    tag_394:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_396\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_263\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_397\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_263\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_398\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_258\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_400\n      tag_245\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9765:9882   */\n    tag_399:\n        /* \"#utility.yul\":9906:9968   */\n      tag_401\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_275\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_86:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_404\n      tag_244\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10084:10203   */\n    tag_403:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_405\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_263\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_406\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_263\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_276:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_94:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_409:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_411\n      tag_276\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10887:10971   */\n    tag_410:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_277:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_278:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_414\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_251\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11326:11415   */\n      tag_415\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_277\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_416\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_253\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_176:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_418\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_278\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_419\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_278\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12154   */\n    tag_279:\n        /* \"#utility.yul\":12022:12099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12100   */\n      mstore\n        /* \"#utility.yul\":12119:12123   */\n      0x11\n        /* \"#utility.yul\":12116:12117   */\n      0x04\n        /* \"#utility.yul\":12109:12124   */\n      mstore\n        /* \"#utility.yul\":12143:12147   */\n      0x24\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12148   */\n      revert\n        /* \"#utility.yul\":12160:12331   */\n    tag_185:\n        /* \"#utility.yul\":12199:12202   */\n      0x00\n        /* \"#utility.yul\":12222:12246   */\n      tag_422\n        /* \"#utility.yul\":12240:12245   */\n      dup3\n        /* \"#utility.yul\":12222:12246   */\n      tag_256\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12213:12246   */\n      swap2\n      pop\n        /* \"#utility.yul\":12268:12272   */\n      0x00\n        /* \"#utility.yul\":12261:12266   */\n      dup3\n        /* \"#utility.yul\":12258:12273   */\n      sub\n        /* \"#utility.yul\":12255:12296   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":12276:12294   */\n      tag_424\n      tag_279\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12255:12296   */\n    tag_423:\n        /* \"#utility.yul\":12323:12324   */\n      0x01\n        /* \"#utility.yul\":12316:12321   */\n      dup3\n        /* \"#utility.yul\":12312:12325   */\n      sub\n        /* \"#utility.yul\":12305:12325   */\n      swap1\n      pop\n        /* \"#utility.yul\":12160:12331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12337:12435   */\n    tag_280:\n        /* \"#utility.yul\":12388:12394   */\n      0x00\n        /* \"#utility.yul\":12422:12427   */\n      dup2\n        /* \"#utility.yul\":12416:12428   */\n      mload\n        /* \"#utility.yul\":12406:12428   */\n      swap1\n      pop\n        /* \"#utility.yul\":12337:12435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12441:12609   */\n    tag_281:\n        /* \"#utility.yul\":12524:12535   */\n      0x00\n        /* \"#utility.yul\":12558:12564   */\n      dup3\n        /* \"#utility.yul\":12553:12556   */\n      dup3\n        /* \"#utility.yul\":12546:12565   */\n      mstore\n        /* \"#utility.yul\":12598:12602   */\n      0x20\n        /* \"#utility.yul\":12593:12596   */\n      dup3\n        /* \"#utility.yul\":12589:12603   */\n      add\n        /* \"#utility.yul\":12574:12603   */\n      swap1\n      pop\n        /* \"#utility.yul\":12441:12609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12615:12988   */\n    tag_282:\n        /* \"#utility.yul\":12701:12704   */\n      0x00\n        /* \"#utility.yul\":12729:12767   */\n      tag_428\n        /* \"#utility.yul\":12761:12766   */\n      dup3\n        /* \"#utility.yul\":12729:12767   */\n      tag_280\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12783:12853   */\n      tag_429\n        /* \"#utility.yul\":12846:12852   */\n      dup2\n        /* \"#utility.yul\":12841:12844   */\n      dup6\n        /* \"#utility.yul\":12783:12853   */\n      tag_281\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12776:12853   */\n      swap4\n      pop\n        /* \"#utility.yul\":12862:12927   */\n      tag_430\n        /* \"#utility.yul\":12920:12926   */\n      dup2\n        /* \"#utility.yul\":12915:12918   */\n      dup6\n        /* \"#utility.yul\":12908:12912   */\n      0x20\n        /* \"#utility.yul\":12901:12906   */\n      dup7\n        /* \"#utility.yul\":12897:12913   */\n      add\n        /* \"#utility.yul\":12862:12927   */\n      tag_253\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12952:12981   */\n      tag_431\n        /* \"#utility.yul\":12974:12980   */\n      dup2\n        /* \"#utility.yul\":12952:12981   */\n      tag_254\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12947:12950   */\n      dup5\n        /* \"#utility.yul\":12943:12982   */\n      add\n        /* \"#utility.yul\":12936:12982   */\n      swap2\n      pop\n        /* \"#utility.yul\":12705:12988   */\n      pop\n        /* \"#utility.yul\":12615:12988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12994:13634   */\n    tag_223:\n        /* \"#utility.yul\":13189:13193   */\n      0x00\n        /* \"#utility.yul\":13227:13230   */\n      0x80\n        /* \"#utility.yul\":13216:13225   */\n      dup3\n        /* \"#utility.yul\":13212:13231   */\n      add\n        /* \"#utility.yul\":13204:13231   */\n      swap1\n      pop\n        /* \"#utility.yul\":13241:13312   */\n      tag_433\n        /* \"#utility.yul\":13309:13310   */\n      0x00\n        /* \"#utility.yul\":13298:13307   */\n      dup4\n        /* \"#utility.yul\":13294:13311   */\n      add\n        /* \"#utility.yul\":13285:13291   */\n      dup8\n        /* \"#utility.yul\":13241:13312   */\n      tag_261\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13322:13394   */\n      tag_434\n        /* \"#utility.yul\":13390:13392   */\n      0x20\n        /* \"#utility.yul\":13379:13388   */\n      dup4\n        /* \"#utility.yul\":13375:13393   */\n      add\n        /* \"#utility.yul\":13366:13372   */\n      dup7\n        /* \"#utility.yul\":13322:13394   */\n      tag_261\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13404:13476   */\n      tag_435\n        /* \"#utility.yul\":13472:13474   */\n      0x40\n        /* \"#utility.yul\":13461:13470   */\n      dup4\n        /* \"#utility.yul\":13457:13475   */\n      add\n        /* \"#utility.yul\":13448:13454   */\n      dup6\n        /* \"#utility.yul\":13404:13476   */\n      tag_264\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13523:13532   */\n      dup2\n        /* \"#utility.yul\":13517:13521   */\n      dup2\n        /* \"#utility.yul\":13513:13533   */\n      sub\n        /* \"#utility.yul\":13508:13510   */\n      0x60\n        /* \"#utility.yul\":13497:13506   */\n      dup4\n        /* \"#utility.yul\":13493:13511   */\n      add\n        /* \"#utility.yul\":13486:13534   */\n      mstore\n        /* \"#utility.yul\":13551:13627   */\n      tag_436\n        /* \"#utility.yul\":13622:13626   */\n      dup2\n        /* \"#utility.yul\":13613:13619   */\n      dup5\n        /* \"#utility.yul\":13551:13627   */\n      tag_282\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13543:13627   */\n      swap1\n      pop\n        /* \"#utility.yul\":12994:13634   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13640:13781   */\n    tag_283:\n        /* \"#utility.yul\":13696:13701   */\n      0x00\n        /* \"#utility.yul\":13727:13733   */\n      dup2\n        /* \"#utility.yul\":13721:13734   */\n      mload\n        /* \"#utility.yul\":13712:13734   */\n      swap1\n      pop\n        /* \"#utility.yul\":13743:13775   */\n      tag_438\n        /* \"#utility.yul\":13769:13774   */\n      dup2\n        /* \"#utility.yul\":13743:13775   */\n      tag_247\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13640:13781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13787:14136   */\n    tag_226:\n        /* \"#utility.yul\":13856:13862   */\n      0x00\n        /* \"#utility.yul\":13905:13907   */\n      0x20\n        /* \"#utility.yul\":13893:13902   */\n      dup3\n        /* \"#utility.yul\":13884:13891   */\n      dup5\n        /* \"#utility.yul\":13880:13903   */\n      sub\n        /* \"#utility.yul\":13876:13908   */\n      slt\n        /* \"#utility.yul\":13873:13992   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":13911:13990   */\n      tag_441\n      tag_244\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13873:13992   */\n    tag_440:\n        /* \"#utility.yul\":14031:14032   */\n      0x00\n        /* \"#utility.yul\":14056:14119   */\n      tag_442\n        /* \"#utility.yul\":14111:14118   */\n      dup5\n        /* \"#utility.yul\":14102:14108   */\n      dup3\n        /* \"#utility.yul\":14091:14100   */\n      dup6\n        /* \"#utility.yul\":14087:14109   */\n      add\n        /* \"#utility.yul\":14056:14119   */\n      tag_283\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14046:14119   */\n      swap2\n      pop\n        /* \"#utility.yul\":14002:14129   */\n      pop\n        /* \"#utility.yul\":13787:14136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a61c721c291393f39520cbfdbca391b18d56460540aa34023e7ac4934ef066564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_146": {
									"entryPoint": 121,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:2",
														"type": ""
													}
												],
												"src": "580:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:2"
															},
															"nodeType": "YulIf",
															"src": "1030:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:2",
														"type": ""
													}
												],
												"src": "874:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:2",
														"type": ""
													}
												],
												"src": "1161:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:2"
															},
															"nodeType": "YulIf",
															"src": "1434:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:2",
														"type": ""
													}
												],
												"src": "1296:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:2",
																"statements": []
															},
															"src": "1701:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:2",
														"type": ""
													}
												],
												"src": "1610:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:2"
															},
															"nodeType": "YulIf",
															"src": "2117:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:2",
														"type": ""
													}
												],
												"src": "1862:434:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:2"
															},
															"nodeType": "YulIf",
															"src": "2399:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:2",
														"type": ""
													}
												],
												"src": "2316:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:2"
															},
															"nodeType": "YulIf",
															"src": "2801:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:2",
														"type": ""
													}
												],
												"src": "2677:853:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:2",
														"type": ""
													}
												],
												"src": "3536:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:2"
															},
															"nodeType": "YulIf",
															"src": "3966:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:2"
															},
															"nodeType": "YulIf",
															"src": "4057:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:2",
														"type": ""
													}
												],
												"src": "3827:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:2",
														"type": ""
													}
												],
												"src": "4153:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:2",
														"type": ""
													}
												],
												"src": "4300:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:2",
														"type": ""
													}
												],
												"src": "4399:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:2",
														"type": ""
													}
												],
												"src": "4512:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:2",
														"type": ""
													}
												],
												"src": "4911:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:2",
														"type": ""
													}
												],
												"src": "4994:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:2",
														"type": ""
													}
												],
												"src": "5060:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:2",
														"type": ""
													}
												],
												"src": "5208:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:2",
														"type": ""
													}
												],
												"src": "5289:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:2",
														"type": ""
													}
												],
												"src": "5564:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:2",
														"type": ""
													}
												],
												"src": "5643:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:2",
																"statements": []
															},
															"src": "5898:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:2",
														"type": ""
													}
												],
												"src": "5838:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:2"
															},
															"nodeType": "YulIf",
															"src": "6120:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:2",
														"type": ""
													}
												],
												"src": "6030:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:2",
														"type": ""
													}
												],
												"src": "6579:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:2",
														"type": ""
													}
												],
												"src": "6702:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:2",
														"type": ""
													}
												],
												"src": "6876:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:2"
															},
															"nodeType": "YulIf",
															"src": "7381:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:2",
																					"statements": []
																				},
																				"src": "7867:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:2",
														"type": ""
													}
												],
												"src": "7176:1395:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001e7438038062001e74833981810160405281019062000037919062000211565b8160029081620000489190620004e1565b5080600390816200005a9190620004e1565b506200006b6200007960201b60201c565b6000819055505050620005c8565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b60008484015250505050565b6000620001aa620001a48462000131565b62000112565b905082815260208101848484011115620001c957620001c862000097565b5b620001d684828562000167565b509392505050565b600082601f830112620001f657620001f562000092565b5b81516200020884826020860162000193565b91505092915050565b600080604083850312156200022b576200022a62000088565b5b600083015167ffffffffffffffff8111156200024c576200024b6200008d565b5b6200025a85828601620001de565b925050602083015167ffffffffffffffff8111156200027e576200027d6200008d565b5b6200028c85828601620001de565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e957607f821691505b602082108103620002ff57620002fe620002a1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032a565b6200037586836200032a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c2620003bc620003b6846200038d565b62000397565b6200038d565b9050919050565b6000819050919050565b620003de83620003a1565b620003f6620003ed82620003c9565b84845462000337565b825550505050565b600090565b6200040d620003fe565b6200041a818484620003d3565b505050565b5b8181101562000442576200043660008262000403565b60018101905062000420565b5050565b601f82111562000491576200045b8162000305565b62000466846200031a565b8101602085101562000476578190505b6200048e62000485856200031a565b8301826200041f565b50505b505050565b600082821c905092915050565b6000620004b66000198460080262000496565b1980831691505092915050565b6000620004d18383620004a3565b9150826002028217905092915050565b620004ec8262000296565b67ffffffffffffffff811115620005085762000507620000ad565b5b620005148254620002d0565b6200052182828562000446565b600060209050601f83116001811462000559576000841562000544578287015190505b620005508582620004c3565b865550620005c0565b601f198416620005698662000305565b60005b8281101562000593578489015182556001820191506020850194506020810190506200056c565b86831015620005b35784890151620005af601f891682620004a3565b8355505b6001600288020188555050505b505050505050565b61189c80620005d86000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061111d565b61036a565b6040516101169190611165565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611210565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190611268565b61048e565b60405161017e91906112d6565b60405180910390f35b6101a1600480360381019061019c919061131d565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c5919061136c565b60405180910390f35b6101e860048036038101906101e39190611387565b610513565b005b61020460048036038101906101ff9190611387565b6107d4565b005b34801561021257600080fd5b5061022d60048036038101906102289190611268565b6107f4565b60405161023a91906112d6565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906113da565b610806565b604051610277919061136c565b60405180910390f35b34801561028c57600080fd5b5061029561089d565b6040516102a29190611210565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611433565b61092f565b005b6102ee60048036038101906102e991906115a8565b610a3a565b005b3480156102fc57600080fd5b5061031760048036038101906103129190611268565b610a8c565b6040516103249190611210565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061162b565b610b09565b6040516103619190611165565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b9061169a565b80601f01602080910402602001604051908101604052809291908181526020018280546104379061169a565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610b9d565b6104ae576104ad63cf4700e460e01b610c16565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c20565b5050565b6000610506610d4f565b6001546000540303905090565b600061051e82610d54565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c16565b5b60008061059f84610e40565b915091506105b581876105b0610e67565b610e6f565b6105e0576105ca866105c5610e67565b610b09565b6105df576105de6359c896be60e01b610c16565b5b5b6105ed8686866001610eb3565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610eb9565b7c020000000000000000000000000000000000000000000000000000000017610ee1565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361074c576000600185019050600060046000838152602001908152602001600020540361074a576000548114610749578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600081036107be576107bd63ea553b3460e01b610c16565b5b6107cb8787876001610f0c565b50505050505050565b6107ef83838360405180602001604052806000815250610a3a565b505050565b60006107ff82610d54565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084c5761084b638f4eb60460e01b610c16565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108ac9061169a565b80601f01602080910402602001604051908101604052809291908181526020018280546108d89061169a565b80156109255780601f106108fa57610100808354040283529160200191610925565b820191906000526020600020905b81548152906001019060200180831161090857829003601f168201915b5050505050905090565b806007600061093c610e67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109e9610e67565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a2e9190611165565b60405180910390a35050565b610a45848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8657610a7084848484610f12565b610a8557610a8463d1a57ed660e01b610c16565b5b5b50505050565b6060610a9782610b9d565b610aac57610aab63a14c4b5060e01b610c16565b5b6000610ab6611041565b90506000815103610ad65760405180602001604052806000815250610b01565b80610ae084611058565b604051602001610af1929190611707565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610ba8610d4f565b11610c1157600054821015610c105760005b6000600460008581526020019081526020016000205491508103610be95782610be29061175a565b9250610bba565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610c2b836107f4565b9050818015610c6d57508073ffffffffffffffffffffffffffffffffffffffff16610c54610e67565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c9957610c8381610c7e610e67565b610b09565b610c9857610c9763cfb3b94260e01b610c16565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d5f610d4f565b11610e2a576004600083815260200190815260200160002054905060008103610e01576000548210610d9c57610d9b63df2d9b4260e01b610c16565b5b5b60046000836001900393508381526020019081526020016000205490506000810315610dfc5760007c010000000000000000000000000000000000000000000000000000000082160315610e3b57610dfb63df2d9b4260e01b610c16565b5b610d9d565b60007c010000000000000000000000000000000000000000000000000000000082160315610e3b575b610e3a63df2d9b4260e01b610c16565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610ed08686846110a8565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f38610e67565b8786866040518563ffffffff1660e01b8152600401610f5a94939291906117d8565b6020604051808303816000875af1925050508015610f9657506040513d601f19601f82011682018060405250810190610f939190611839565b60015b610fee573d8060008114610fc6576040519150601f19603f3d011682016040523d82523d6000602084013e610fcb565b606091505b506000815103610fe657610fe563d1a57ed660e01b610c16565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561109357600184039350600a81066030018453600a8104905080611071575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110fa816110c5565b811461110557600080fd5b50565b600081359050611117816110f1565b92915050565b600060208284031215611133576111326110bb565b5b600061114184828501611108565b91505092915050565b60008115159050919050565b61115f8161114a565b82525050565b600060208201905061117a6000830184611156565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111ba57808201518184015260208101905061119f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111e282611180565b6111ec818561118b565b93506111fc81856020860161119c565b611205816111c6565b840191505092915050565b6000602082019050818103600083015261122a81846111d7565b905092915050565b6000819050919050565b61124581611232565b811461125057600080fd5b50565b6000813590506112628161123c565b92915050565b60006020828403121561127e5761127d6110bb565b5b600061128c84828501611253565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c082611295565b9050919050565b6112d0816112b5565b82525050565b60006020820190506112eb60008301846112c7565b92915050565b6112fa816112b5565b811461130557600080fd5b50565b600081359050611317816112f1565b92915050565b60008060408385031215611334576113336110bb565b5b600061134285828601611308565b925050602061135385828601611253565b9150509250929050565b61136681611232565b82525050565b6000602082019050611381600083018461135d565b92915050565b6000806000606084860312156113a05761139f6110bb565b5b60006113ae86828701611308565b93505060206113bf86828701611308565b92505060406113d086828701611253565b9150509250925092565b6000602082840312156113f0576113ef6110bb565b5b60006113fe84828501611308565b91505092915050565b6114108161114a565b811461141b57600080fd5b50565b60008135905061142d81611407565b92915050565b6000806040838503121561144a576114496110bb565b5b600061145885828601611308565b92505060206114698582860161141e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114b5826111c6565b810181811067ffffffffffffffff821117156114d4576114d361147d565b5b80604052505050565b60006114e76110b1565b90506114f382826114ac565b919050565b600067ffffffffffffffff8211156115135761151261147d565b5b61151c826111c6565b9050602081019050919050565b82818337600083830152505050565b600061154b611546846114f8565b6114dd565b90508281526020810184848401111561156757611566611478565b5b611572848285611529565b509392505050565b600082601f83011261158f5761158e611473565b5b813561159f848260208601611538565b91505092915050565b600080600080608085870312156115c2576115c16110bb565b5b60006115d087828801611308565b94505060206115e187828801611308565b93505060406115f287828801611253565b925050606085013567ffffffffffffffff811115611613576116126110c0565b5b61161f8782880161157a565b91505092959194509250565b60008060408385031215611642576116416110bb565b5b600061165085828601611308565b925050602061166185828601611308565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116b257607f821691505b6020821081036116c5576116c461166b565b5b50919050565b600081905092915050565b60006116e182611180565b6116eb81856116cb565b93506116fb81856020860161119c565b80840191505092915050565b600061171382856116d6565b915061171f82846116d6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061176582611232565b9150600082036117785761177761172b565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b60006117aa82611783565b6117b4818561178e565b93506117c481856020860161119c565b6117cd816111c6565b840191505092915050565b60006080820190506117ed60008301876112c7565b6117fa60208301866112c7565b611807604083018561135d565b8181036060830152611819818461179f565b905095945050505050565b600081519050611833816110f1565b92915050565b60006020828403121561184f5761184e6110bb565b5b600061185d84828501611824565b9150509291505056fea26469706673582212207a61c721c291393f39520cbfdbca391b18d56460540aa34023e7ac4934ef066564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E74 CODESIZE SUB DUP1 PUSH3 0x1E74 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x211 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP PUSH3 0x6B PUSH3 0x79 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5C8 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE7 DUP3 PUSH3 0x9C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x109 JUMPI PUSH3 0x108 PUSH3 0xAD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11E PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH3 0x12C DUP3 DUP3 PUSH3 0xDC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x15A DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA PUSH3 0x1A4 DUP5 PUSH3 0x131 JUMP JUMPDEST PUSH3 0x112 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C8 PUSH3 0x97 JUMP JUMPDEST JUMPDEST PUSH3 0x1D6 DUP5 DUP3 DUP6 PUSH3 0x167 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F6 JUMPI PUSH3 0x1F5 PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x208 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x193 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22A PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x24C JUMPI PUSH3 0x24B PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x25A DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x28C DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2E9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2FF JUMPI PUSH3 0x2FE PUSH3 0x2A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x369 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x375 DUP7 DUP4 PUSH3 0x32A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C2 PUSH3 0x3BC PUSH3 0x3B6 DUP5 PUSH3 0x38D JUMP JUMPDEST PUSH3 0x397 JUMP JUMPDEST PUSH3 0x38D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DE DUP4 PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x3F6 PUSH3 0x3ED DUP3 PUSH3 0x3C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x337 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x40D PUSH3 0x3FE JUMP JUMPDEST PUSH3 0x41A DUP2 DUP5 DUP5 PUSH3 0x3D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x442 JUMPI PUSH3 0x436 PUSH1 0x0 DUP3 PUSH3 0x403 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x420 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x491 JUMPI PUSH3 0x45B DUP2 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x466 DUP5 PUSH3 0x31A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x476 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x48E PUSH3 0x485 DUP6 PUSH3 0x31A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x41F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x496 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D1 DUP4 DUP4 PUSH3 0x4A3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4EC DUP3 PUSH3 0x296 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x508 JUMPI PUSH3 0x507 PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x514 DUP3 SLOAD PUSH3 0x2D0 JUMP JUMPDEST PUSH3 0x521 DUP3 DUP3 DUP6 PUSH3 0x446 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x559 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x544 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x550 DUP6 DUP3 PUSH3 0x4C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x569 DUP7 PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x593 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x56C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B3 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5AF PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x189C DUP1 PUSH3 0x5D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC20 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xEB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x74C JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x74A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x749 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 SUB PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH2 0x7CB DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xF0C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FF DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH2 0x84B PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8AC SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D8 SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x925 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x925 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x908 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x93C PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E9 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA45 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA86 JUMPI PUSH2 0xA70 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA97 DUP3 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB01 JUMP JUMPDEST DUP1 PUSH2 0xAE0 DUP5 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF1 SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBA8 PUSH2 0xD4F JUMP JUMPDEST GT PUSH2 0xC11 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0xBE9 JUMPI DUP3 PUSH2 0xBE2 SWAP1 PUSH2 0x175A JUMP JUMPDEST SWAP3 POP PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC6D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC99 JUMPI PUSH2 0xC83 DUP2 PUSH2 0xC7E PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD5F PUSH2 0xD4F JUMP JUMPDEST GT PUSH2 0xE2A JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xE01 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xE3B JUMPI PUSH2 0xDFB PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xE3B JUMPI JUMPDEST PUSH2 0xE3A PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xED0 DUP7 DUP7 DUP5 PUSH2 0x10A8 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF38 PUSH2 0xE67 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF96 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1093 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1071 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA DUP2 PUSH2 0x10C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1117 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1133 JUMPI PUSH2 0x1132 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1141 DUP5 DUP3 DUP6 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115F DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E2 DUP3 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x11EC DUP2 DUP6 PUSH2 0x118B JUMP JUMPDEST SWAP4 POP PUSH2 0x11FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1245 DUP2 PUSH2 0x1232 JUMP JUMPDEST DUP2 EQ PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1262 DUP2 PUSH2 0x123C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP5 DUP3 DUP6 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C0 DUP3 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D0 DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1317 DUP2 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1342 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1353 DUP6 DUP3 DUP7 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x1232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1381 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x139F PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AE DUP7 DUP3 DUP8 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13BF DUP7 DUP3 DUP8 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13D0 DUP7 DUP3 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP5 DUP3 DUP6 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x141B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1458 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1469 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14B5 DUP3 PUSH2 0x11C6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x147D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E7 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F3 DUP3 DUP3 PUSH2 0x14AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x147D JUMP JUMPDEST JUMPDEST PUSH2 0x151C DUP3 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154B PUSH2 0x1546 DUP5 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x1478 JUMP JUMPDEST JUMPDEST PUSH2 0x1572 DUP5 DUP3 DUP6 PUSH2 0x1529 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x158F JUMPI PUSH2 0x158E PUSH2 0x1473 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x159F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C1 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D0 DUP8 DUP3 DUP9 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x15F2 DUP8 DUP3 DUP9 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x161F DUP8 DUP3 DUP9 ADD PUSH2 0x157A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1661 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x166B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E1 DUP3 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x16EB DUP2 DUP6 PUSH2 0x16CB JUMP JUMPDEST SWAP4 POP PUSH2 0x16FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1713 DUP3 DUP6 PUSH2 0x16D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x171F DUP3 DUP5 PUSH2 0x16D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1765 DUP3 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x1783 JUMP JUMPDEST PUSH2 0x17B4 DUP2 DUP6 PUSH2 0x178E JUMP JUMPDEST SWAP4 POP PUSH2 0x17C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17ED PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x17FA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x1807 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x135D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1819 DUP2 DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1833 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x1824 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x61C721C291393F39520CBFDBCA391B18D56460540AA34023E7AC49 CALLVALUE 0xEF MOD PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "895:42638:0:-:0;;;4946:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5020:5;5012;:13;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;895:42638;;5426:90;5482:7;5426:90;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;895:42638:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1068": {
									"entryPoint": 3852,
									"id": 1068,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1509": {
									"entryPoint": 3104,
									"id": 1509,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_408": {
									"entryPoint": 4161,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1055": {
									"entryPoint": 3763,
									"id": 1055,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1124": {
									"entryPoint": 3858,
									"id": 1124,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_777": {
									"entryPoint": 2973,
									"id": 777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1734": {
									"entryPoint": 4264,
									"id": 1734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_810": {
									"entryPoint": 3648,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_791": {
									"entryPoint": 3695,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1777": {
									"entryPoint": 3687,
									"id": 1777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1767": {
									"entryPoint": 3769,
									"id": 1767,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_639": {
									"entryPoint": 3809,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_573": {
									"entryPoint": 3412,
									"id": 573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1795": {
									"entryPoint": 3094,
									"id": 1795,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_146": {
									"entryPoint": 3407,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1787": {
									"entryPoint": 4184,
									"id": 1787,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_665": {
									"entryPoint": 1260,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_221": {
									"entryPoint": 2054,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_690": {
									"entryPoint": 1166,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_734": {
									"entryPoint": 2825,
									"id": 734,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_344": {
									"entryPoint": 1020,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_428": {
									"entryPoint": 2036,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1002": {
									"entryPoint": 2004,
									"id": 1002,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1042": {
									"entryPoint": 2618,
									"id": 1042,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_716": {
									"entryPoint": 2351,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_334": {
									"entryPoint": 874,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 2205,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_399": {
									"entryPoint": 2700,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_171": {
									"entryPoint": 1276,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_983": {
									"entryPoint": 1299,
									"id": 983,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14139:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:2",
														"type": ""
													}
												],
												"src": "334:149:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:2"
															},
															"nodeType": "YulIf",
															"src": "541:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:2",
														"type": ""
													}
												],
												"src": "489:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:2",
														"type": ""
													}
												],
												"src": "615:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:2"
															},
															"nodeType": "YulIf",
															"src": "833:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:2",
														"type": ""
													}
												],
												"src": "758:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:2",
														"type": ""
													}
												],
												"src": "1091:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:2",
														"type": ""
													}
												],
												"src": "1187:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:2",
														"type": ""
													}
												],
												"src": "1302:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:2",
														"type": ""
													}
												],
												"src": "1518:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:2",
														"type": ""
													}
												],
												"src": "1623:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:2",
																"statements": []
															},
															"src": "1889:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:2",
														"type": ""
													}
												],
												"src": "1798:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:2",
														"type": ""
													}
												],
												"src": "2050:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:2",
														"type": ""
													}
												],
												"src": "2158:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:2",
														"type": ""
													}
												],
												"src": "2541:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:2",
														"type": ""
													}
												],
												"src": "2860:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:2"
															},
															"nodeType": "YulIf",
															"src": "2996:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:2",
														"type": ""
													}
												],
												"src": "2943:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:2",
														"type": ""
													}
												],
												"src": "3071:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:2"
															},
															"nodeType": "YulIf",
															"src": "3292:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:2",
														"type": ""
													}
												],
												"src": "3216:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:2",
														"type": ""
													}
												],
												"src": "3551:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:2",
														"type": ""
													}
												],
												"src": "3683:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:2",
														"type": ""
													}
												],
												"src": "3785:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:2",
														"type": ""
													}
												],
												"src": "3909:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:2"
															},
															"nodeType": "YulIf",
															"src": "4190:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:2",
														"type": ""
													}
												],
												"src": "4137:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:2",
														"type": ""
													}
												],
												"src": "4265:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:2"
															},
															"nodeType": "YulIf",
															"src": "4503:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:2",
														"type": ""
													}
												],
												"src": "4410:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:2",
														"type": ""
													}
												],
												"src": "4890:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:2",
														"type": ""
													}
												],
												"src": "5014:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:2"
															},
															"nodeType": "YulIf",
															"src": "5352:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:2",
														"type": ""
													}
												],
												"src": "5242:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:2"
															},
															"nodeType": "YulIf",
															"src": "5943:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:2",
														"type": ""
													}
												],
												"src": "5867:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:2"
															},
															"nodeType": "YulIf",
															"src": "6252:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:2",
														"type": ""
													}
												],
												"src": "6202:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:2",
														"type": ""
													}
												],
												"src": "6324:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:2"
															},
															"nodeType": "YulIf",
															"src": "6553:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:2",
														"type": ""
													}
												],
												"src": "6463:468:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:2"
															},
															"nodeType": "YulIf",
															"src": "7525:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:2",
														"type": ""
													}
												],
												"src": "7369:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:2",
														"type": ""
													}
												],
												"src": "7656:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:2"
															},
															"nodeType": "YulIf",
															"src": "7928:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:2",
														"type": ""
													}
												],
												"src": "7791:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:2",
														"type": ""
													}
												],
												"src": "8104:146:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:2"
															},
															"nodeType": "YulIf",
															"src": "8498:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:2",
														"type": ""
													}
												],
												"src": "8256:423:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:2"
															},
															"nodeType": "YulIf",
															"src": "8769:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:2",
														"type": ""
													}
												],
												"src": "8698:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:2"
															},
															"nodeType": "YulIf",
															"src": "9178:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:2",
														"type": ""
													}
												],
												"src": "9042:943:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:2"
															},
															"nodeType": "YulIf",
															"src": "10084:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:2",
														"type": ""
													}
												],
												"src": "9991:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:2"
															},
															"nodeType": "YulIf",
															"src": "10796:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:2"
															},
															"nodeType": "YulIf",
															"src": "10887:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:2",
														"type": ""
													}
												],
												"src": "10657:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:2",
														"type": ""
													}
												],
												"src": "10983:148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:2",
														"type": ""
													}
												],
												"src": "11137:390:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:2",
														"type": ""
													}
												],
												"src": "11533:435:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12012:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11974:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12203:128:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12213:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12240:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12222:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12213:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12274:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12276:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12276:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12276:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12261:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12268:4:2",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12258:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12258:15:2"
															},
															"nodeType": "YulIf",
															"src": "12255:41:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12305:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12316:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12323:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12312:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12312:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12305:3:2"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12189:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12199:3:2",
														"type": ""
													}
												],
												"src": "12160:171:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12395:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12406:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12422:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12416:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12416:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12388:6:2",
														"type": ""
													}
												],
												"src": "12337:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12553:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12558:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12546:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12546:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12574:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12593:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12598:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12589:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12574:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12508:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12513:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12524:11:2",
														"type": ""
													}
												],
												"src": "12441:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12705:283:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12715:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12761:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12729:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12719:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12776:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12841:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12846:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12783:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12783:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12776:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12901:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12908:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12897:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12897:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12915:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12920:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12862:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12862:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12862:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12936:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12947:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12952:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12952:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12943:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12686:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12693:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12701:3:2",
														"type": ""
													}
												],
												"src": "12615:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13194:440:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13204:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13216:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13227:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13212:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13212:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13204:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13285:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13298:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13309:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13294:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13294:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13241:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13241:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13366:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13390:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13375:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13375:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13322:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13322:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13322:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13448:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13461:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13472:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13457:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13457:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13404:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13404:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13404:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13497:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13508:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13493:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13517:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13523:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13513:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13513:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13486:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13486:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13486:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13543:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13613:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13622:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13551:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13551:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13543:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13142:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13154:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13162:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13170:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13178:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13189:4:2",
														"type": ""
													}
												],
												"src": "12994:640:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13702:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13712:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13727:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13721:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13721:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13712:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13769:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13743:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13743:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13743:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13680:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13688:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13696:5:2",
														"type": ""
													}
												],
												"src": "13640:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13863:273:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13909:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13911:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13911:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13911:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13884:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13893:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13880:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13880:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13905:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13876:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13876:32:2"
															},
															"nodeType": "YulIf",
															"src": "13873:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "14002:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14017:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14031:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14021:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14046:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14091:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14102:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14087:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14087:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14111:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14056:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14056:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14046:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13833:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13844:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13856:6:2",
														"type": ""
													}
												],
												"src": "13787:349:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061111d565b61036a565b6040516101169190611165565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611210565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190611268565b61048e565b60405161017e91906112d6565b60405180910390f35b6101a1600480360381019061019c919061131d565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c5919061136c565b60405180910390f35b6101e860048036038101906101e39190611387565b610513565b005b61020460048036038101906101ff9190611387565b6107d4565b005b34801561021257600080fd5b5061022d60048036038101906102289190611268565b6107f4565b60405161023a91906112d6565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906113da565b610806565b604051610277919061136c565b60405180910390f35b34801561028c57600080fd5b5061029561089d565b6040516102a29190611210565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611433565b61092f565b005b6102ee60048036038101906102e991906115a8565b610a3a565b005b3480156102fc57600080fd5b5061031760048036038101906103129190611268565b610a8c565b6040516103249190611210565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061162b565b610b09565b6040516103619190611165565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b9061169a565b80601f01602080910402602001604051908101604052809291908181526020018280546104379061169a565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610b9d565b6104ae576104ad63cf4700e460e01b610c16565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c20565b5050565b6000610506610d4f565b6001546000540303905090565b600061051e82610d54565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c16565b5b60008061059f84610e40565b915091506105b581876105b0610e67565b610e6f565b6105e0576105ca866105c5610e67565b610b09565b6105df576105de6359c896be60e01b610c16565b5b5b6105ed8686866001610eb3565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610eb9565b7c020000000000000000000000000000000000000000000000000000000017610ee1565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361074c576000600185019050600060046000838152602001908152602001600020540361074a576000548114610749578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600081036107be576107bd63ea553b3460e01b610c16565b5b6107cb8787876001610f0c565b50505050505050565b6107ef83838360405180602001604052806000815250610a3a565b505050565b60006107ff82610d54565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084c5761084b638f4eb60460e01b610c16565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108ac9061169a565b80601f01602080910402602001604051908101604052809291908181526020018280546108d89061169a565b80156109255780601f106108fa57610100808354040283529160200191610925565b820191906000526020600020905b81548152906001019060200180831161090857829003601f168201915b5050505050905090565b806007600061093c610e67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109e9610e67565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a2e9190611165565b60405180910390a35050565b610a45848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8657610a7084848484610f12565b610a8557610a8463d1a57ed660e01b610c16565b5b5b50505050565b6060610a9782610b9d565b610aac57610aab63a14c4b5060e01b610c16565b5b6000610ab6611041565b90506000815103610ad65760405180602001604052806000815250610b01565b80610ae084611058565b604051602001610af1929190611707565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610ba8610d4f565b11610c1157600054821015610c105760005b6000600460008581526020019081526020016000205491508103610be95782610be29061175a565b9250610bba565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610c2b836107f4565b9050818015610c6d57508073ffffffffffffffffffffffffffffffffffffffff16610c54610e67565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c9957610c8381610c7e610e67565b610b09565b610c9857610c9763cfb3b94260e01b610c16565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d5f610d4f565b11610e2a576004600083815260200190815260200160002054905060008103610e01576000548210610d9c57610d9b63df2d9b4260e01b610c16565b5b5b60046000836001900393508381526020019081526020016000205490506000810315610dfc5760007c010000000000000000000000000000000000000000000000000000000082160315610e3b57610dfb63df2d9b4260e01b610c16565b5b610d9d565b60007c010000000000000000000000000000000000000000000000000000000082160315610e3b575b610e3a63df2d9b4260e01b610c16565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610ed08686846110a8565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f38610e67565b8786866040518563ffffffff1660e01b8152600401610f5a94939291906117d8565b6020604051808303816000875af1925050508015610f9657506040513d601f19601f82011682018060405250810190610f939190611839565b60015b610fee573d8060008114610fc6576040519150601f19603f3d011682016040523d82523d6000602084013e610fcb565b606091505b506000815103610fe657610fe563d1a57ed660e01b610c16565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561109357600184039350600a81066030018453600a8104905080611071575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110fa816110c5565b811461110557600080fd5b50565b600081359050611117816110f1565b92915050565b600060208284031215611133576111326110bb565b5b600061114184828501611108565b91505092915050565b60008115159050919050565b61115f8161114a565b82525050565b600060208201905061117a6000830184611156565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111ba57808201518184015260208101905061119f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111e282611180565b6111ec818561118b565b93506111fc81856020860161119c565b611205816111c6565b840191505092915050565b6000602082019050818103600083015261122a81846111d7565b905092915050565b6000819050919050565b61124581611232565b811461125057600080fd5b50565b6000813590506112628161123c565b92915050565b60006020828403121561127e5761127d6110bb565b5b600061128c84828501611253565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c082611295565b9050919050565b6112d0816112b5565b82525050565b60006020820190506112eb60008301846112c7565b92915050565b6112fa816112b5565b811461130557600080fd5b50565b600081359050611317816112f1565b92915050565b60008060408385031215611334576113336110bb565b5b600061134285828601611308565b925050602061135385828601611253565b9150509250929050565b61136681611232565b82525050565b6000602082019050611381600083018461135d565b92915050565b6000806000606084860312156113a05761139f6110bb565b5b60006113ae86828701611308565b93505060206113bf86828701611308565b92505060406113d086828701611253565b9150509250925092565b6000602082840312156113f0576113ef6110bb565b5b60006113fe84828501611308565b91505092915050565b6114108161114a565b811461141b57600080fd5b50565b60008135905061142d81611407565b92915050565b6000806040838503121561144a576114496110bb565b5b600061145885828601611308565b92505060206114698582860161141e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114b5826111c6565b810181811067ffffffffffffffff821117156114d4576114d361147d565b5b80604052505050565b60006114e76110b1565b90506114f382826114ac565b919050565b600067ffffffffffffffff8211156115135761151261147d565b5b61151c826111c6565b9050602081019050919050565b82818337600083830152505050565b600061154b611546846114f8565b6114dd565b90508281526020810184848401111561156757611566611478565b5b611572848285611529565b509392505050565b600082601f83011261158f5761158e611473565b5b813561159f848260208601611538565b91505092915050565b600080600080608085870312156115c2576115c16110bb565b5b60006115d087828801611308565b94505060206115e187828801611308565b93505060406115f287828801611253565b925050606085013567ffffffffffffffff811115611613576116126110c0565b5b61161f8782880161157a565b91505092959194509250565b60008060408385031215611642576116416110bb565b5b600061165085828601611308565b925050602061166185828601611308565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116b257607f821691505b6020821081036116c5576116c461166b565b5b50919050565b600081905092915050565b60006116e182611180565b6116eb81856116cb565b93506116fb81856020860161119c565b80840191505092915050565b600061171382856116d6565b915061171f82846116d6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061176582611232565b9150600082036117785761177761172b565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b60006117aa82611783565b6117b4818561178e565b93506117c481856020860161119c565b6117cd816111c6565b840191505092915050565b60006080820190506117ed60008301876112c7565b6117fa60208301866112c7565b611807604083018561135d565b8181036060830152611819818461179f565b905095945050505050565b600081519050611833816110f1565b92915050565b60006020828403121561184f5761184e6110bb565b5b600061185d84828501611824565b9150509291505056fea26469706673582212207a61c721c291393f39520cbfdbca391b18d56460540aa34023e7ac4934ef066564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x162B JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC20 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xEB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x74C JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x74A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x749 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 SUB PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH2 0x7CB DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xF0C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FF DUP3 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH2 0x84B PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8AC SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D8 SWAP1 PUSH2 0x169A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x925 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x925 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x908 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x93C PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E9 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA45 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA86 JUMPI PUSH2 0xA70 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA97 DUP3 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB01 JUMP JUMPDEST DUP1 PUSH2 0xAE0 DUP5 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF1 SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBA8 PUSH2 0xD4F JUMP JUMPDEST GT PUSH2 0xC11 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0xBE9 JUMPI DUP3 PUSH2 0xBE2 SWAP1 PUSH2 0x175A JUMP JUMPDEST SWAP3 POP PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC6D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 PUSH2 0xE67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC99 JUMPI PUSH2 0xC83 DUP2 PUSH2 0xC7E PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD5F PUSH2 0xD4F JUMP JUMPDEST GT PUSH2 0xE2A JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xE01 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xE3B JUMPI PUSH2 0xDFB PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xE3B JUMPI JUMPDEST PUSH2 0xE3A PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xED0 DUP7 DUP7 DUP5 PUSH2 0x10A8 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF38 PUSH2 0xE67 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF96 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFE6 JUMPI PUSH2 0xFE5 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC16 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1093 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1071 JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA DUP2 PUSH2 0x10C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1117 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1133 JUMPI PUSH2 0x1132 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1141 DUP5 DUP3 DUP6 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115F DUP2 PUSH2 0x114A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E2 DUP3 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x11EC DUP2 DUP6 PUSH2 0x118B JUMP JUMPDEST SWAP4 POP PUSH2 0x11FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1245 DUP2 PUSH2 0x1232 JUMP JUMPDEST DUP2 EQ PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1262 DUP2 PUSH2 0x123C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127E JUMPI PUSH2 0x127D PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP5 DUP3 DUP6 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C0 DUP3 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D0 DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1317 DUP2 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1342 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1353 DUP6 DUP3 DUP7 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x1232 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1381 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x139F PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AE DUP7 DUP3 DUP8 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13BF DUP7 DUP3 DUP8 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13D0 DUP7 DUP3 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP5 DUP3 DUP6 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x114A JUMP JUMPDEST DUP2 EQ PUSH2 0x141B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1458 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1469 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14B5 DUP3 PUSH2 0x11C6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x147D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E7 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x14F3 DUP3 DUP3 PUSH2 0x14AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x147D JUMP JUMPDEST JUMPDEST PUSH2 0x151C DUP3 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154B PUSH2 0x1546 DUP5 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x14DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x1478 JUMP JUMPDEST JUMPDEST PUSH2 0x1572 DUP5 DUP3 DUP6 PUSH2 0x1529 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x158F JUMPI PUSH2 0x158E PUSH2 0x1473 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x159F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C1 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D0 DUP8 DUP3 DUP9 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15E1 DUP8 DUP3 DUP9 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x15F2 DUP8 DUP3 DUP9 ADD PUSH2 0x1253 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x10C0 JUMP JUMPDEST JUMPDEST PUSH2 0x161F DUP8 DUP3 DUP9 ADD PUSH2 0x157A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH2 0x1641 PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1661 DUP6 DUP3 DUP7 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x166B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E1 DUP3 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x16EB DUP2 DUP6 PUSH2 0x16CB JUMP JUMPDEST SWAP4 POP PUSH2 0x16FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1713 DUP3 DUP6 PUSH2 0x16D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x171F DUP3 DUP5 PUSH2 0x16D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1765 DUP3 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x1783 JUMP JUMPDEST PUSH2 0x17B4 DUP2 DUP6 PUSH2 0x178E JUMP JUMPDEST SWAP4 POP PUSH2 0x17C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119C JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17ED PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x17FA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x1807 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x135D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1819 DUP2 DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1833 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x10BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x1824 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x61C721C291393F39520CBFDBCA391B18D56460540AA34023E7AC49 CALLVALUE 0xEF MOD PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "895:42638:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9164:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10048:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16911:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16639:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20546:3447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24084:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11409:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10217:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17461:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24852:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10420:322;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17842:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9164:630;9249:4;9582:10;9567:25;;:11;:25;;;;:101;;;;9658:10;9643:25;;:11;:25;;;;9567:101;:177;;;;9734:10;9719:25;;:11;:25;;;;9567:177;9548:196;;9164:630;;;:::o;10048:98::-;10102:13;10134:5;10127:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:98;:::o;16911:223::-;16987:7;17011:16;17019:7;17011;:16::i;:::-;17006:73;;17029:50;17037:41;;;17029:7;:50::i;:::-;17006:73;17097:15;:24;17113:7;17097:24;;;;;;;;;;;:30;;;;;;;;;;;;17090:37;;16911:223;;;:::o;16639:122::-;16727:27;16736:2;16740:7;16749:4;16727:8;:27::i;:::-;16639:122;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;20546:3447::-;20683:27;20713;20732:7;20713:18;:27::i;:::-;20683:57;;2785:14;20881:4;20865:22;;:41;20842:66;;20964:4;20923:45;;20939:19;20923:45;;;20919:95;;20970:44;20978:35;;;20970:7;:44::i;:::-;20919:95;21026:27;21055:23;21082:35;21109:7;21082:26;:35::i;:::-;21025:92;;;;21214:68;21239:15;21256:4;21262:19;:17;:19::i;:::-;21214:24;:68::i;:::-;21209:188;;21301:43;21318:4;21324:19;:17;:19::i;:::-;21301:16;:43::i;:::-;21296:101;;21346:51;21354:42;;;21346:7;:51::i;:::-;21296:101;21209:188;21408:43;21430:4;21436:2;21440:7;21449:1;21408:21;:43::i;:::-;21540:15;21537:157;;;21678:1;21657:19;21650:30;21537:157;22066:18;:24;22085:4;22066:24;;;;;;;;;;;;;;;;22064:26;;;;;;;;;;;;22134:18;:22;22153:2;22134:22;;;;;;;;;;;;;;;;22132:24;;;;;;;;;;;22449:143;22485:2;22533:45;22548:4;22554:2;22558:19;22533:14;:45::i;:::-;2392:8;22505:73;22449:18;:143::i;:::-;22420:17;:26;22438:7;22420:26;;;;;;;;;;;:172;;;;22760:1;2392:8;22709:19;:47;:52;22705:617;;22781:19;22813:1;22803:7;:11;22781:33;;22968:1;22934:17;:30;22952:11;22934:30;;;;;;;;;;;;:35;22930:378;;23070:13;;23055:11;:28;23051:239;;23248:19;23215:17;:30;23233:11;23215:30;;;;;;;;;;;:52;;;;23051:239;22930:378;22763:559;22705:617;23431:16;2785:14;23466:2;23450:20;;:39;23431:58;;23821:7;23786:8;23753:4;23696:25;23642:1;23586;23564:292;23891:1;23879:8;:13;23875:58;;23894:39;23902:30;;;23894:7;:39::i;:::-;23875:58;23944:42;23965:4;23971:2;23975:7;23984:1;23944:20;:42::i;:::-;20673:3320;;;;20546:3447;;;:::o;24084:187::-;24225:39;24242:4;24248:2;24252:7;24225:39;;;;;;;;;;;;:16;:39::i;:::-;24084:187;;;:::o;11409:150::-;11481:7;11523:27;11542:7;11523:18;:27::i;:::-;11500:52;;11409:150;;;:::o;7045:239::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:69;;7161:44;7169:35;;;7161:7;:44::i;:::-;7136:69;1360:13;7222:18;:25;7241:5;7222:25;;;;;;;;;;;;;;;;:55;7215:62;;7045:239;;;:::o;10217:102::-;10273:13;10305:7;10298:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:102;:::o;17461:231::-;17607:8;17555:18;:39;17574:19;:17;:19::i;:::-;17555:39;;;;;;;;;;;;;;;:49;17595:8;17555:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17666:8;17630:55;;17645:19;:17;:19::i;:::-;17630:55;;;17676:8;17630:55;;;;;;:::i;:::-;;;;;;;;17461:231;;:::o;24852:405::-;25021:31;25034:4;25040:2;25044:7;25021:12;:31::i;:::-;25084:1;25066:2;:14;;;:19;25062:189;;25104:56;25135:4;25141:2;25145:7;25154:5;25104:30;:56::i;:::-;25099:152;;25180:56;25188:47;;;25180:7;:56::i;:::-;25099:152;25062:189;24852:405;;;;:::o;10420:322::-;10493:13;10523:16;10531:7;10523;:16::i;:::-;10518:68;;10541:45;10549:36;;;10541:7;:45::i;:::-;10518:68;10597:21;10621:10;:8;:10::i;:::-;10597:34;;10673:1;10654:7;10648:21;:26;:87;;;;;;;;;;;;;;;;;10701:7;10710:18;10720:7;10710:9;:18::i;:::-;10684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10648:87;10641:94;;;10420:322;;;:::o;17842:162::-;17939:4;17962:18;:25;17981:5;17962:25;;;;;;;;;;;;;;;:35;17988:8;17962:35;;;;;;;;;;;;;;;;;;;;;;;;;17955:42;;17842:162;;;;:::o;18253:360::-;18318:11;18364:7;18345:15;:13;:15::i;:::-;:26;18341:266;;18401:13;;18391:7;:23;18387:210;;;18434:14;18466:60;18514:1;18483:17;:26;18501:7;18483:26;;;;;;;;;;;;18474:35;;;18473:42;18466:60;;18517:9;;;;:::i;:::-;;;18466:60;;;18581:1;2118:8;18553:6;:24;:29;18544:38;;18416:181;18387:210;18341:266;18253:360;;;:::o;43371:160::-;43470:13;43464:4;43457:27;43510:4;43504;43497:18;35019:460;35143:13;35159:16;35167:7;35159;:16::i;:::-;35143:32;;35190:13;:45;;;;;35230:5;35207:28;;:19;:17;:19::i;:::-;:28;;;;35190:45;35186:198;;;35254:44;35271:5;35278:19;:17;:19::i;:::-;35254:16;:44::i;:::-;35249:135;;35318:51;35326:42;;;35318:7;:51::i;:::-;35249:135;35186:198;35427:2;35394:15;:24;35410:7;35394:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;35464:7;35460:2;35444:28;;35453:5;35444:28;;;;;;;;;;;;35133:346;35019:460;;;:::o;5426:90::-;5482:7;5426:90;:::o;12850:1978::-;12917:14;12966:7;12947:15;:13;:15::i;:::-;:26;12943:1822;;12998:17;:26;13016:7;12998:26;;;;;;;;;;;;12989:35;;13132:1;13122:6;:11;13118:1270;;13168:13;;13157:7;:24;13153:77;;13183:47;13191:38;;;13183:7;:47::i;:::-;13153:77;13777:597;13853:17;:28;13871:9;;;;;;;13853:28;;;;;;;;;;;;13844:37;;13939:1;13929:6;:11;13925:25;13942:8;13925:25;14004:1;2118:8;13976:6;:24;:29;13972:48;14007:13;13972:48;14308:47;14316:38;;;14308:7;:47::i;:::-;13777:597;;;13118:1270;14738:1;2118:8;14710:6;:24;:29;14706:48;14741:13;14706:48;12943:1822;14774:47;14782:38;;;14774:7;:47::i;:::-;12850:1978;;;;:::o;19471:474::-;19570:27;19599:23;19638:38;19679:15;:24;19695:7;19679:24;;;;;;;;;;;19638:65;;19853:18;19830:41;;19909:19;19903:26;19884:45;;19816:123;19471:474;;;:::o;41401:103::-;41461:7;41487:10;41480:17;;41401:103;:::o;18717:646::-;18862:11;19024:16;19017:5;19013:28;19004:37;;19182:16;19171:9;19167:32;19154:45;;19330:15;19319:9;19316:30;19308:5;19297:9;19294:20;19291:56;19281:66;;18717:646;;;;;:::o;25901:154::-;;;;;:::o;40728:304::-;40859:7;40878:16;2513:3;40904:19;:41;;40878:68;;2513:3;40971:31;40982:4;40988:2;40992:9;40971:10;:31::i;:::-;40963:40;;:62;;40956:69;;;40728:304;;;;;:::o;15361:443::-;15441:14;15606:16;15599:5;15595:28;15586:37;;15781:5;15767:11;15742:23;15738:41;15735:52;15728:5;15725:63;15715:73;;15361:443;;;;:::o;26702:153::-;;;;;:::o;27283:673::-;27441:4;27486:2;27461:45;;;27507:19;:17;:19::i;:::-;27528:4;27534:7;27543:5;27461:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;27457:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27756:1;27739:6;:13;:18;27735:113;;27777:56;27785:47;;;27777:7;:56::i;:::-;27735:113;27918:6;27912:13;27903:6;27899:2;27895:15;27888:38;27457:493;27627:54;;;27617:64;;;:6;:64;;;;27610:71;;;27283:673;;;;;;:::o;10987:92::-;11038:13;11063:9;;;;;;;;;;;;;;10987:92;:::o;41601:1708::-;41666:17;42094:4;42087;42081:11;42077:22;42184:1;42178:4;42171:15;42257:4;42254:1;42250:12;42243:19;;42337:1;42332:3;42325:14;42438:3;42672:5;42654:419;42680:1;42654:419;;;42719:1;42714:3;42710:11;42703:18;;42887:2;42881:4;42877:13;42873:2;42869:22;42864:3;42856:36;42979:2;42973:4;42969:13;42961:21;;43044:4;42654:419;43034:25;42654:419;42658:21;43110:3;43105;43101:13;43223:4;43218:3;43214:14;43207:21;;43286:6;43281:3;43274:19;41704:1599;;;41601:1708;;;:::o;40439:143::-;40572:6;40439:143;;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:180::-;12022:77;12019:1;12012:88;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12160:171;12199:3;12222:24;12240:5;12222:24;:::i;:::-;12213:33;;12268:4;12261:5;12258:15;12255:41;;12276:18;;:::i;:::-;12255:41;12323:1;12316:5;12312:13;12305:20;;12160:171;;;:::o;12337:98::-;12388:6;12422:5;12416:12;12406:22;;12337:98;;;:::o;12441:168::-;12524:11;12558:6;12553:3;12546:19;12598:4;12593:3;12589:14;12574:29;;12441:168;;;;:::o;12615:373::-;12701:3;12729:38;12761:5;12729:38;:::i;:::-;12783:70;12846:6;12841:3;12783:70;:::i;:::-;12776:77;;12862:65;12920:6;12915:3;12908:4;12901:5;12897:16;12862:65;:::i;:::-;12952:29;12974:6;12952:29;:::i;:::-;12947:3;12943:39;12936:46;;12705:283;12615:373;;;;:::o;12994:640::-;13189:4;13227:3;13216:9;13212:19;13204:27;;13241:71;13309:1;13298:9;13294:17;13285:6;13241:71;:::i;:::-;13322:72;13390:2;13379:9;13375:18;13366:6;13322:72;:::i;:::-;13404;13472:2;13461:9;13457:18;13448:6;13404:72;:::i;:::-;13523:9;13517:4;13513:20;13508:2;13497:9;13493:18;13486:48;13551:76;13622:4;13613:6;13551:76;:::i;:::-;13543:84;;12994:640;;;;;;;:::o;13640:141::-;13696:5;13727:6;13721:13;13712:22;;13743:32;13769:5;13743:32;:::i;:::-;13640:141;;;;:::o;13787:349::-;13856:6;13905:2;13893:9;13884:7;13880:23;13876:32;13873:119;;;13911:79;;:::i;:::-;13873:119;14031:1;14056:63;14111:7;14102:6;14091:9;14087:22;14056:63;:::i;:::-;14046:73;;14002:127;13787:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1260000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5426,
									"end": 5516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 2,
									"value": "92"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a61c721c291393f39520cbfdbca391b18d56460540aa34023e7ac4934ef066564736f6c63430008120033",
									".code": [
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9164,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9164,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10048,
											"end": 10146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16911,
											"end": 17134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16911,
											"end": 17134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16911,
											"end": 17134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16639,
											"end": 16761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16639,
											"end": 16761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 20546,
											"end": 23993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 20546,
											"end": 23993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24084,
											"end": 24271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24084,
											"end": 24271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11409,
											"end": 11559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11409,
											"end": 11559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7045,
											"end": 7284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7045,
											"end": 7284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10217,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17461,
											"end": 17692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17461,
											"end": 17692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24852,
											"end": 25257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24852,
											"end": 25257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10420,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10420,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17842,
											"end": 18004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17842,
											"end": 18004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17842,
											"end": 18004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10102,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17019,
											"end": 17026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17011,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17011,
											"end": 17027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E4"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 17029,
											"end": 17079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17112,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 17134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16736,
											"end": 16738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16727,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16727,
											"end": 16754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6179,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20683,
											"end": 20710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20732,
											"end": 20739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20713,
											"end": 20740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20881,
											"end": 20885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20865,
											"end": 20906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20939,
											"end": 20958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 0,
											"value": "A1148100"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20970,
											"end": 21014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21109,
											"end": 21116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21082,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 21082,
											"end": 21117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21239,
											"end": 21254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21256,
											"end": 21260,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21262,
											"end": 21279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21262,
											"end": 21281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21214,
											"end": 21282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21318,
											"end": 21322,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21324,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21324,
											"end": 21343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21301,
											"end": 21344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21346,
											"end": 21397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21430,
											"end": 21434,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21436,
											"end": 21438,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21447,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21408,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21408,
											"end": 21451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21678,
											"end": 21679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21657,
											"end": 21676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22084,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22085,
											"end": 22089,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22153,
											"end": 22155,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22485,
											"end": 22487,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22548,
											"end": 22552,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22554,
											"end": 22556,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22558,
											"end": 22577,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22533,
											"end": 22547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 22533,
											"end": 22578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22505,
											"end": 22578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22449,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22449,
											"end": 22592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22438,
											"end": 22445,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22709,
											"end": 22728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22709,
											"end": 22756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22709,
											"end": 22761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22781,
											"end": 22800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22813,
											"end": 22814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22803,
											"end": 22810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22803,
											"end": 22814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22952,
											"end": 22963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22934,
											"end": 22969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23233,
											"end": 23244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22763,
											"end": 23322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23450,
											"end": 23489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23821,
											"end": 23828,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23753,
											"end": 23757,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23696,
											"end": 23721,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23642,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23564,
											"end": 23856,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B34"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23894,
											"end": 23901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23894,
											"end": 23933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23965,
											"end": 23969,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 23973,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23975,
											"end": 23982,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23944,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23944,
											"end": 23986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20546,
											"end": 23993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24242,
											"end": 24246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24248,
											"end": 24250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24252,
											"end": 24259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24225,
											"end": 24264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24084,
											"end": 24271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11542,
											"end": 11549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11523,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB604"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7161,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10273,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17573,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17574,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17574,
											"end": 17593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17603,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17666,
											"end": 17674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17645,
											"end": 17662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17645,
											"end": 17664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17676,
											"end": 17684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17630,
											"end": 17685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25034,
											"end": 25038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25040,
											"end": 25042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25044,
											"end": 25051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25021,
											"end": 25033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25021,
											"end": 25052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25084,
											"end": 25085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25066,
											"end": 25068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 25066,
											"end": 25085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 25135,
											"end": 25139,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25141,
											"end": 25143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25145,
											"end": 25152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25159,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25104,
											"end": 25160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED6"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 25180,
											"end": 25187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 25180,
											"end": 25236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24852,
											"end": 25257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10493,
											"end": 10506,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10531,
											"end": 10538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10523,
											"end": 10539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B50"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10541,
											"end": 10586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10621,
											"end": 10631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10673,
											"end": 10674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10654,
											"end": 10661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 10708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10710,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10684,
											"end": 10729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17980,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17988,
											"end": 17996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 18004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18318,
											"end": 18329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18364,
											"end": 18371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18345,
											"end": 18358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 18345,
											"end": 18360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18345,
											"end": 18371,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18414,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18514,
											"end": 18515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18473,
											"end": 18515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18517,
											"end": 18526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18553,
											"end": 18559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18582,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18416,
											"end": 18597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43464,
											"end": 43468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43457,
											"end": 43484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43510,
											"end": 43514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43504,
											"end": 43508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43497,
											"end": 43515,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35143,
											"end": 35156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35167,
											"end": 35174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35159,
											"end": 35166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35159,
											"end": 35175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35230,
											"end": 35235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 35207,
											"end": 35224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 35207,
											"end": 35226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35271,
											"end": 35276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35278,
											"end": 35295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 35278,
											"end": 35297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35254,
											"end": 35270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35254,
											"end": 35298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B942"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 35318,
											"end": 35369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 35429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35409,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35410,
											"end": 35417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35464,
											"end": 35471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35460,
											"end": 35462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35453,
											"end": 35458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 35133,
											"end": 35479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35019,
											"end": 35479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12947,
											"end": 12962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12973,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13132,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13181,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B42"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13183,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13183,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13939,
											"end": 13940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14004,
											"end": 14005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13976,
											"end": 13982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 14000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13976,
											"end": 14005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14007,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B42"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14308,
											"end": 14355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14710,
											"end": 14739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14741,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B42"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14774,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14774,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 14828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19570,
											"end": 19597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19599,
											"end": 19622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19638,
											"end": 19676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19694,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19702,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19853,
											"end": 19871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19909,
											"end": 19928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19903,
											"end": 19929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19471,
											"end": 19945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41461,
											"end": 41468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41487,
											"end": 41497,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41401,
											"end": 41504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18862,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19182,
											"end": 19198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19171,
											"end": 19180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19167,
											"end": 19199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19330,
											"end": 19345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19346,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19297,
											"end": 19306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19314,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19291,
											"end": 19347,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18717,
											"end": 19363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25901,
											"end": 26055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40878,
											"end": 40894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 40904,
											"end": 40923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 40982,
											"end": 40986,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40988,
											"end": 40990,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40992,
											"end": 41001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40971,
											"end": 40981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 40971,
											"end": 41002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40728,
											"end": 41032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15441,
											"end": 15455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15599,
											"end": 15604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15595,
											"end": 15623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15767,
											"end": 15778,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15765,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15738,
											"end": 15779,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 15787,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15788,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26702,
											"end": 26855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27441,
											"end": 27445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27486,
											"end": 27488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27507,
											"end": 27524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27507,
											"end": 27526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27528,
											"end": 27532,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27541,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27548,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27461,
											"end": 27549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27461,
											"end": 27549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27756,
											"end": 27757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27739,
											"end": 27745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27739,
											"end": 27752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27739,
											"end": 27757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED6"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27777,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 27777,
											"end": 27833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27918,
											"end": 27924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27912,
											"end": 27925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27899,
											"end": 27901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27895,
											"end": 27910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27888,
											"end": 27926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27283,
											"end": 27956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11051,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 11079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41666,
											"end": 41683,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42094,
											"end": 42098,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 42087,
											"end": 42091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42081,
											"end": 42092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42184,
											"end": 42185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42178,
											"end": 42182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42171,
											"end": 42186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42257,
											"end": 42261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42254,
											"end": 42255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42337,
											"end": 42338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42325,
											"end": 42339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42438,
											"end": 42441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42672,
											"end": 42677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42680,
											"end": 42681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42719,
											"end": 42720,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42714,
											"end": 42717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42887,
											"end": 42889,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42881,
											"end": 42885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42877,
											"end": 42890,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 42873,
											"end": 42875,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42869,
											"end": 42891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42864,
											"end": 42867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42856,
											"end": 42892,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 42979,
											"end": 42981,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42973,
											"end": 42977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42969,
											"end": 42982,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43044,
											"end": 43048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42658,
											"end": 42679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43110,
											"end": 43113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43105,
											"end": 43108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43101,
											"end": 43114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43223,
											"end": 43227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43218,
											"end": 43221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43214,
											"end": 43228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43286,
											"end": 43292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43284,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43274,
											"end": 43293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41601,
											"end": 43309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40572,
											"end": 40578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40439,
											"end": 40582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12148,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12331,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12160,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12199,
											"end": 12202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 12240,
											"end": 12245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12222,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12246,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12261,
											"end": 12266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12258,
											"end": 12273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12255,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 12255,
											"end": 12296,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 12276,
											"end": 12294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12255,
											"end": 12296,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 12255,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12316,
											"end": 12321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12312,
											"end": 12325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12435,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 12337,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12388,
											"end": 12394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12416,
											"end": 12428,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12337,
											"end": 12435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12524,
											"end": 12535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12553,
											"end": 12556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12546,
											"end": 12565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12574,
											"end": 12603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12574,
											"end": 12603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12441,
											"end": 12609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12701,
											"end": 12704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12729,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 12761,
											"end": 12766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12729,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 12729,
											"end": 12767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12729,
											"end": 12767,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 12729,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12783,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 12846,
											"end": 12852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12841,
											"end": 12844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12783,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 12783,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12783,
											"end": 12853,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 12783,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12853,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12920,
											"end": 12926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12915,
											"end": 12918,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12908,
											"end": 12912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12901,
											"end": 12906,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12913,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 12862,
											"end": 12927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12927,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12862,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12952,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12952,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12952,
											"end": 12981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12952,
											"end": 12981,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 12952,
											"end": 12981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12943,
											"end": 12982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12936,
											"end": 12982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12936,
											"end": 12982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12705,
											"end": 12988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12615,
											"end": 12988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13227,
											"end": 13230,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13216,
											"end": 13225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13212,
											"end": 13231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13204,
											"end": 13231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13204,
											"end": 13231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13241,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 13309,
											"end": 13310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13285,
											"end": 13291,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13241,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13241,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13241,
											"end": 13312,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 13241,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 13390,
											"end": 13392,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13379,
											"end": 13388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13322,
											"end": 13394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 13472,
											"end": 13474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13461,
											"end": 13470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13457,
											"end": 13475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13448,
											"end": 13454,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 13404,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 13404,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13523,
											"end": 13532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13513,
											"end": 13533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13508,
											"end": 13510,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13497,
											"end": 13506,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13493,
											"end": 13511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13551,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 13622,
											"end": 13626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13551,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 13551,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13551,
											"end": 13627,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 13551,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13543,
											"end": 13627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13543,
											"end": 13627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13696,
											"end": 13701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13721,
											"end": 13734,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13712,
											"end": 13734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13712,
											"end": 13734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 13769,
											"end": 13774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 13743,
											"end": 13775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 13743,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13640,
											"end": 13781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13856,
											"end": 13862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 13907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13893,
											"end": 13902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13884,
											"end": 13891,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13880,
											"end": 13903,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13876,
											"end": 13908,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 13873,
											"end": 13992,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13873,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 13873,
											"end": 13992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13911,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 13911,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 13911,
											"end": 13990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13911,
											"end": 13990,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 13911,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13873,
											"end": 13992,
											"name": "tag",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 13873,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14031,
											"end": 14032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 14111,
											"end": 14118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14091,
											"end": 14100,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14087,
											"end": 14109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 14056,
											"end": 14119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14119,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 14056,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14002,
											"end": 14129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13787,
											"end": 14136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol",
								"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":{\"keccak256\":\"0x412e6281d70f9a223457a713988e2b3da768fc363627f70c368516e20253ead3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70ab28242e59f2f64510e6177a789d98af2ee413a73cf6d3b839e0cdd3924bcd\",\"dweb:/ipfs/QmfJo969CW8NWrmbz6J46Vxc7MqGdkXJDeqEZ5aUyqiMWJ\"]},\"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 93,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 97,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 101,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 105,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 110,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)"
							},
							{
								"astId": 116,
								"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)23_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)23_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 22,
										"contract": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":{\"keccak256\":\"0x412e6281d70f9a223457a713988e2b3da768fc363627f70c368516e20253ead3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70ab28242e59f2f64510e6177a789d98af2ee413a73cf6d3b839e0cdd3924bcd\",\"dweb:/ipfs/QmfJo969CW8NWrmbz6J46Vxc7MqGdkXJDeqEZ5aUyqiMWJ\"]},\"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1796
						],
						"ERC721A__IERC721Receiver": [
							17
						],
						"IERC721A": [
							2002
						]
					},
					"id": 1797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:0"
						},
						{
							"absolutePath": "localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1797,
							"sourceUnit": 2003,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:0",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "336:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:0"
									},
									"scope": 17,
									"src": "228:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1797,
							"src": "187:203:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IERC721A",
										"nameLocations": [
											"915:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2002,
										"src": "915:8:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:0",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1796,
							"linearizedBaseContracts": [
								1796,
								2002
							],
							"name": "ERC721A",
							"nameLocation": "904:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1049:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:0",
									"nodeType": "StructDefinition",
									"scope": 1796,
									"src": "1015:54:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1305:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 28,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1446:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1570:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1686:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1816:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 45,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "1953:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2075:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 54,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2207:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2339:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2467:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 75,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2609:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 72,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 73,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "2741:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 80,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 81,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3082:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 89,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3268:127:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 87,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3622:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3694:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3747:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 94,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "3794:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 96,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "4200:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 98,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 99,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 105,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "4459:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 104,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 102,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "4570:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 109,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 106,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 108,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 107,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4589:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "4589:16:0"
											},
											"referencedDeclaration": 23,
											"src": "4589:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1796,
									"src": "4685:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 114,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 113,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "5002:98:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "5012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "5020:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "5035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 128,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "5062:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 132,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5078:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:0"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4958:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4979:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:0"
									},
									"scope": 1796,
									"src": "4946:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "5491:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 142,
												"id": 144,
												"nodeType": "Return",
												"src": "5501:8:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:0"
									},
									"scope": 1796,
									"src": "5426:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "5654:37:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "5671:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "5664:20:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:0"
									},
									"scope": 1796,
									"src": "5590:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "5964:247:0",
										"statements": [
											{
												"id": 169,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 162,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "6148:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 163,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "6164:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 165,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6179:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 161,
														"id": 168,
														"nodeType": "Return",
														"src": "6141:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 1796,
									"src": "5894:317:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "6368:226:0",
										"statements": [
											{
												"id": 182,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 177,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "6546:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6562:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 176,
														"id": 181,
														"nodeType": "Return",
														"src": "6539:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:0"
									},
									"scope": 1796,
									"src": "6304:290:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "6735:36:0",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 93,
													"src": "6752:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "6745:19:0"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:0"
									},
									"scope": 1796,
									"src": "6671:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1896
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7126:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "7140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 203,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "7136:69:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 209,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "7169:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7196:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "7169:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 208,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "7161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7161:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 212,
													"nodeType": "ExpressionStatement",
													"src": "7161:44:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 214,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "7222:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 216,
														"indexExpression": {
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "7241:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7222:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 217,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7250:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7222:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 219,
												"nodeType": "Return",
												"src": "7215:62:0"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:0"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7064:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:0"
									},
									"scope": 1796,
									"src": "7045:239:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7431:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 229,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7449:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 231,
																	"indexExpression": {
																		"id": 230,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "7468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7449:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 232,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7478:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7449:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 234,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7448:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 235,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7503:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7448:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 237,
												"nodeType": "Return",
												"src": "7441:89:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7290:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7370:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7383:15:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7422:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7421:9:0"
									},
									"scope": 1796,
									"src": "7361:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "7700:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 247,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7718:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 249,
																	"indexExpression": {
																		"id": 248,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "7737:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7718:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 250,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7747:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7718:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 252,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7717:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 253,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7772:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7717:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 255,
												"nodeType": "Return",
												"src": "7710:89:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7543:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7639:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7661:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:15:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7691:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7690:9:0"
									},
									"scope": 1796,
									"src": "7630:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "7982:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 267,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "8006:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"id": 268,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "8025:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8006:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 270,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "8035:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8006:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7999:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 265,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7999:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7999:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 264,
												"id": 273,
												"nodeType": "Return",
												"src": "7992:55:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "7812:102:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7928:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7944:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "7936:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7935:15:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "7974:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:8:0"
									},
									"scope": 1796,
									"src": "7919:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "8297:334:0",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8315:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "8307:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"baseExpression": {
														"id": 285,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "8324:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 287,
													"indexExpression": {
														"id": 286,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8343:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8324:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8307:42:0"
											},
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8367:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "8359:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"nodeType": "VariableDeclarationStatement",
												"src": "8359:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8459:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8473:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8486:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8473:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "8486:3:0",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "8473:9:0",
														"valueSize": 1
													}
												],
												"id": 292,
												"nodeType": "InlineAssembly",
												"src": "8450:49:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8508:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "8518:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 295,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "8527:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8518:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8517:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8555:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 299,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8568:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8555:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 301,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8554:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8517:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8508:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8508:72:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 305,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "8590:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 307,
														"indexExpression": {
															"id": 306,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8590:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8590:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "8590:34:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "8060:171:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8245:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8261:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8253:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8275:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8268:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 279,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8252:27:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8297:0:0"
									},
									"scope": 1796,
									"src": "8236:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "9255:539:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9567:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9567:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9643:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9658:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9643:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9567:101:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 328,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "9719:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9734:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9719:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9567:177:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 320,
												"id": 332,
												"nodeType": "Return",
												"src": "9548:196:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "8818:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9173:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9231:8:0"
									},
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9198:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9191:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 314,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:20:0"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9249:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9248:6:0"
									},
									"scope": 1796,
									"src": "9164:630:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1976
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "10117:29:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "10134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "10127:12:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "9985:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10057:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10084:8:0"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10061:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10102:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10101:15:0"
									},
									"scope": 1796,
									"src": "10048:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1982
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "10288:31:0",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "10305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "10298:14:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "10152:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10226:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 347,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10255:8:0"
									},
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:2:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "10273:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10272:15:0"
									},
									"scope": 1796,
									"src": "10217:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1990
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10508:234:0",
										"statements": [
											{
												"condition": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10522:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 364,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "10531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 363,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "10523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10523:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "10518:68:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 368,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "10549:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10577:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "10549:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 367,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "10541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10541:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 371,
													"nodeType": "ExpressionStatement",
													"src": "10541:45:0"
												}
											},
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10611:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10597:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 373,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10621:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10621:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 380,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "10654:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10648:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 378,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10648:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10648:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10663:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10648:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10648:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10733:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10648:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 389,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "10701:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 391,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "10720:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 390,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1787,
																			"src": "10710:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10710:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 387,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10684:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10688:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10684:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10684:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10677:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 385,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10677:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10677:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 397,
												"nodeType": "Return",
												"src": "10641:94:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "10325:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10429:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10475:8:0"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:17:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10493:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10492:15:0"
									},
									"scope": 1796,
									"src": "10420:322:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "11053:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11070:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "11063:9:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10748:234:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10996:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11004:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "11038:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11038:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11037:15:0"
									},
									"scope": 1796,
									"src": "10987:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1904
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "11490:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 422,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "11542:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 421,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "11523:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11523:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 419,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11515:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11507:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11507:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 416,
												"id": 426,
												"nodeType": "Return",
												"src": "11500:52:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "11273:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11418:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11463:8:0"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "11426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11425:17:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "11481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11480:9:0"
									},
									"scope": 1796,
									"src": "11409:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11835:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 439,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "11890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 438,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "11871:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11871:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "11852:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1847_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "11845:54:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "11565:172:0",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11751:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11772:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11763:17:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11812:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "TokenOwnership",
														"nameLocations": [
															"11812:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1847,
														"src": "11812:14:0"
													},
													"referencedDeclaration": 1847,
													"src": "11812:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1847_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11811:23:0"
									},
									"scope": 1796,
									"src": "11742:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "12088:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 454,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12124:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 456,
															"indexExpression": {
																"id": 455,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "12142:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12124:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "12105:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1847_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12105:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 452,
												"id": 458,
												"nodeType": "Return",
												"src": "12098:51:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11912:80:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12006:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12018:15:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12065:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "TokenOwnership",
														"nameLocations": [
															"12065:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1847,
														"src": "12065:14:0"
													},
													"referencedDeclaration": 1847,
													"src": "12065:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1847_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12064:23:0"
									},
									"scope": 1796,
									"src": "11997:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "12420:53:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 468,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "12437:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 470,
														"indexExpression": {
															"id": 469,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "12455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12437:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12465:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12437:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "12430:36:0"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "12162:168:0",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "12344:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "12368:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12367:15:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "12414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12413:6:0"
									},
									"scope": 1796,
									"src": "12335:138:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "12645:128:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 481,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "12659:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "12677:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12659:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12659:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "12655:112:0",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "12690:77:0",
													"statements": [
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 486,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "12704:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 487,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "12722:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12704:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 490,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "12750:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 489,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "12731:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12731:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12704:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "12704:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "12479:97:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12590:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12621:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "12613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12612:15:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12645:0:0"
									},
									"scope": 1796,
									"src": "12581:192:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12933:1895:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 505,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "12947:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12947:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 507,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "12966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12947:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "12943:1822:0",
												"trueBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "12975:1790:0",
													"statements": [
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 509,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "12989:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 510,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "12998:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 512,
																	"indexExpression": {
																		"id": 511,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "13016:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12998:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12989:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "12989:35:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 515,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "13122:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13132:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13122:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 556,
															"nodeType": "IfStatement",
															"src": "13118:1270:0",
															"trueBody": {
																"id": 555,
																"nodeType": "Block",
																"src": "13135:1253:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 518,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "13157:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 519,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 91,
																				"src": "13168:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13157:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 526,
																		"nodeType": "IfStatement",
																		"src": "13153:77:0",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 522,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "13191:29:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13221:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13191:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 521,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "13183:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13183:47:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 525,
																			"nodeType": "ExpressionStatement",
																			"src": "13183:47:0"
																		}
																	},
																	{
																		"body": {
																			"id": 553,
																			"nodeType": "Block",
																			"src": "13786:588:0",
																			"statements": [
																				{
																					"id": 534,
																					"nodeType": "UncheckedBlock",
																					"src": "13808:96:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 532,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 527,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 503,
																									"src": "13844:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 528,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "13853:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 531,
																									"indexExpression": {
																										"id": 530,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "13871:9:0",
																										"subExpression": {
																											"id": 529,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "13873:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "13853:28:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13844:37:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 533,
																							"nodeType": "ExpressionStatement",
																							"src": "13844:37:0"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 535,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 503,
																							"src": "13929:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 536,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13939:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13929:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 539,
																					"nodeType": "IfStatement",
																					"src": "13925:25:0",
																					"trueBody": {
																						"id": 538,
																						"nodeType": "Continue",
																						"src": "13942:8:0"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 544,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 542,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 540,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 503,
																								"src": "13976:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 541,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 56,
																								"src": "13985:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13976:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14004:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13976:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 547,
																					"nodeType": "IfStatement",
																					"src": "13972:48:0",
																					"trueBody": {
																						"expression": {
																							"id": 545,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 503,
																							"src": "14014:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 504,
																						"id": 546,
																						"nodeType": "Return",
																						"src": "14007:13:0"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 549,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1817,
																									"src": "14316:29:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 550,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "14346:8:0",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "14316:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 548,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1795,
																							"src": "14308:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14308:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 552,
																					"nodeType": "ExpressionStatement",
																					"src": "14308:47:0"
																				}
																			]
																		},
																		"id": 554,
																		"nodeType": "ForStatement",
																		"src": "13777:597:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 557,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "14710:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 558,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "14719:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14710:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14738:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14710:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 564,
															"nodeType": "IfStatement",
															"src": "14706:48:0",
															"trueBody": {
																"expression": {
																	"id": 562,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "14748:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 504,
																"id": 563,
																"nodeType": "Return",
																"src": "14741:13:0"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 568,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "14782:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14812:8:0",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "14782:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 567,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "14774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14774:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "14774:47:0"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "12779:66:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12859:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12877:17:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "12925:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12917:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12916:16:0"
									},
									"scope": 1796,
									"src": "12850:1978:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "15021:262:0",
										"statements": [
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 582,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "15031:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15041:4:0",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1840,
														"src": "15031:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 589,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "15064:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15056:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 587,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "15056:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15056:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15048:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15048:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15031:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "15031:41:0"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 594,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "15082:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15092:14:0",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1842,
														"src": "15082:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 599,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "15116:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 600,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "15126:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15116:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 597,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "15109:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15109:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "15082:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "15082:68:0"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 605,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "15160:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15170:6:0",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1844,
														"src": "15160:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "15179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 609,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "15188:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15179:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15207:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15179:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15160:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "15160:48:0"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 615,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "15218:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15228:9:0",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1846,
														"src": "15218:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 620,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "15247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 621,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "15257:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15247:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 618,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "15240:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15240:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15218:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "15218:58:0"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "14834:83:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14931:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14958:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "14950:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14949:16:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "15010:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "14988:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1847_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "TokenOwnership",
														"nameLocations": [
															"14988:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1847,
														"src": "14988:14:0"
													},
													"referencedDeclaration": 1847,
													"src": "14988:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1847_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14987:33:0"
									},
									"scope": 1796,
									"src": "14922:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "15457:347:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15476:322:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15586:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15599:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15606:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15595:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "15586:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15715:73:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15728:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15742:23:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15767:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15767:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15738:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15738:41:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15781:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15735:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15735:52:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15725:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:63:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15715:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "15606:16:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "15742:23:0",
														"valueSize": 1
													},
													{
														"declaration": 632,
														"isOffset": false,
														"isSlot": false,
														"src": "15781:5:0",
														"valueSize": 1
													},
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "15586:5:0",
														"valueSize": 1
													},
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "15599:5:0",
														"valueSize": 1
													},
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "15728:5:0",
														"valueSize": 1
													},
													{
														"declaration": 635,
														"isOffset": false,
														"isSlot": false,
														"src": "15715:6:0",
														"valueSize": 1
													}
												],
												"id": 637,
												"nodeType": "InlineAssembly",
												"src": "15467:331:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "15289:67:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "15370:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "15389:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "15412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "15404:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15388:30:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "15441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15440:16:0"
									},
									"scope": 1796,
									"src": "15361:443:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "15987:232:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16071:142:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16147:56:0",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "16161:24:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "16190:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16200:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16187:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16187:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16157:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "16157:46:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16147:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "16161:24:0",
														"valueSize": 1
													},
													{
														"declaration": 642,
														"isOffset": false,
														"isSlot": false,
														"src": "16190:8:0",
														"valueSize": 1
													},
													{
														"declaration": 645,
														"isOffset": false,
														"isSlot": false,
														"src": "16147:6:0",
														"valueSize": 1
													}
												],
												"id": 647,
												"nodeType": "InlineAssembly",
												"src": "16062:151:0"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "15810:86:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15910:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15939:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "15931:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15930:18:0"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15979:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "15971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15970:16:0"
									},
									"scope": 1796,
									"src": "15901:318:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1944
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "16717:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "16736:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "16740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 658,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1459,
															1509
														],
														"referencedDeclaration": 1509,
														"src": "16727:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16727:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "16727:27:0"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "16412:222:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16648:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 656,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16708:8:0"
									},
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16664:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16655:29:0"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16717:0:0"
									},
									"scope": 1796,
									"src": "16639:122:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1960
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "16996:138:0",
										"statements": [
											{
												"condition": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17010:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 675,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "17019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 674,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "17011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17011:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "17006:73:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 679,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "17037:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17070:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "17037:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 678,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "17029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17029:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 682,
													"nodeType": "ExpressionStatement",
													"src": "17029:50:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 684,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "17097:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 686,
														"indexExpression": {
															"id": 685,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "17113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17097:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17122:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "17097:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 673,
												"id": 688,
												"nodeType": "Return",
												"src": "17090:37:0"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "16767:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16920:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16969:8:0"
									},
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "16932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16931:17:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "16987:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16986:9:0"
									},
									"scope": 1796,
									"src": "16911:223:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "17545:147:0",
										"statements": [
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 699,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "17555:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 703,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 700,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "17574:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17574:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17555:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 702,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "17595:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17555:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 705,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "17607:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17555:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "17555:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 709,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "17645:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17645:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "17666:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "17676:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 708,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "17630:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17630:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "EmitStatement",
												"src": "17625:60:0"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "17140:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17470:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 697,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17536:8:0"
									},
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17496:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "17488:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17511:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "17506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17487:33:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17545:0:0"
									},
									"scope": 1796,
									"src": "17461:231:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1970
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "17945:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 727,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "17962:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 729,
														"indexExpression": {
															"id": 728,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "17981:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17962:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 731,
													"indexExpression": {
														"id": 730,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "17988:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17962:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 726,
												"id": 732,
												"nodeType": "Return",
												"src": "17955:42:0"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "17698:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17851:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17921:8:0"
									},
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "17868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "17883:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17867:33:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "17939:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17938:6:0"
									},
									"scope": 1796,
									"src": "17842:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "18331:282:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 742,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "18345:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18345:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 744,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "18364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18345:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "18341:266:0",
												"trueBody": {
													"id": 774,
													"nodeType": "Block",
													"src": "18373:234:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "18391:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "18401:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18391:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 773,
															"nodeType": "IfStatement",
															"src": "18387:210:0",
															"trueBody": {
																"id": 772,
																"nodeType": "Block",
																"src": "18416:181:0",
																"statements": [
																	{
																		"assignments": [
																			750
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 750,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "18442:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 772,
																				"src": "18434:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 749,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "18434:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 751,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "18434:14:0"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "18517:9:0",
																				"subExpression": {
																					"id": 760,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 737,
																					"src": "18519:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 762,
																			"nodeType": "ExpressionStatement",
																			"src": "18517:9:0"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 752,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 750,
																							"src": "18474:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 753,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 101,
																								"src": "18483:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 755,
																							"indexExpression": {
																								"id": 754,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 737,
																								"src": "18501:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18483:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "18474:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 757,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "18473:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18514:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "18473:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 763,
																		"nodeType": "WhileStatement",
																		"src": "18466:60:0"
																	},
																	{
																		"expression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 764,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "18544:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 767,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 765,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 750,
																						"src": "18553:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 766,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "18562:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18553:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18581:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "18553:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18544:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 771,
																		"nodeType": "ExpressionStatement",
																		"src": "18544:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "18010:238:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18262:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "18270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18269:17:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18323:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "18318:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18318:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18317:13:0"
									},
									"scope": 1796,
									"src": "18253:360:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "18875:488:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18894:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19004:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "19017:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19024:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19013:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19013:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "19004:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19154:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19171:9:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19182:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19167:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19167:32:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19154:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19281:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19297:9:0"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19308:5:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19294:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19294:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19319:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19330:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19316:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19316:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19291:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19291:56:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19281:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "19024:16:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "19182:16:0",
														"valueSize": 1
													},
													{
														"declaration": 780,
														"isOffset": false,
														"isSlot": false,
														"src": "19330:15:0",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "19154:9:0",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "19171:9:0",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "19297:9:0",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "19319:9:0",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "19004:5:0",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "19017:5:0",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "19308:5:0",
														"valueSize": 1
													},
													{
														"declaration": 787,
														"isOffset": false,
														"isSlot": false,
														"src": "19281:6:0",
														"valueSize": 1
													}
												],
												"id": 789,
												"nodeType": "InlineAssembly",
												"src": "18885:472:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "18619:93:0",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18726:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18768:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18760:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18801:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18793:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18824:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18816:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18750:89:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18867:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18862:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18861:13:0"
									},
									"scope": 1796,
									"src": "18717:646:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "19628:317:0",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19663:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "19638:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 802,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 801,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"19638:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 23,
																"src": "19638:16:0"
															},
															"referencedDeclaration": 23,
															"src": "19638:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"baseExpression": {
														"id": 804,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "19679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 806,
													"indexExpression": {
														"id": 805,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "19695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19679:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19638:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19816:123:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19830:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19853:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19830:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19884:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19909:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19903:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19903:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19884:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 799,
														"isOffset": false,
														"isSlot": false,
														"src": "19884:15:0",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "19830:19:0",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "19909:19:0",
														"valueSize": 1
													},
													{
														"declaration": 803,
														"isOffset": false,
														"isSlot": true,
														"src": "19853:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "19807:132:0"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "19369:97:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19480:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "19507:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19506:17:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19578:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "19570:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19607:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "19599:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19569:54:0"
									},
									"scope": 1796,
									"src": "19471:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1936
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "20673:3320:0",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20691:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "20683:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"id": 824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "20732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "20713:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20713:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20683:57:0"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "20842:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 836,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 813,
																							"src": "20881:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 835,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20873:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 834,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "20873:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20873:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "20865:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 832,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20865:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20865:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 839,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "20890:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20865:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20857:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 830,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20857:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20857:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 828,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20849:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20849:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20842:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "20842:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 849,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "20939:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20931:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20931:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20931:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20923:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20923:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 852,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "20964:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20923:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "20919:95:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 855,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "20978:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21005:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20978:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 854,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "20970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20970:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 858,
													"nodeType": "ExpressionStatement",
													"src": "20970:44:0"
												}
											},
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "21034:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "21026:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "21063:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "21055:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 862,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21055:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [
														{
															"id": 865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "21109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "21082:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21082:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21025:92:0"
											},
											{
												"condition": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21213:69:0",
													"subExpression": {
														"arguments": [
															{
																"id": 869,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "21239:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 870,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "21256:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 871,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "21262:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21262:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 868,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "21214:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21214:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "21209:188:0",
												"trueBody": {
													"condition": {
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21300:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "21318:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 877,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "21324:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21324:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 875,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "21301:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21301:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 886,
													"nodeType": "IfStatement",
													"src": "21296:101:0",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 882,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "21354:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21388:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21354:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 881,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "21346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21346:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 885,
														"nodeType": "ExpressionStatement",
														"src": "21346:51:0"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "21430:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "21436:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "21440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 888,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "21408:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21408:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21408:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21523:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21556:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21657:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21678:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21650:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21650:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21650:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21540:15:0"
															},
															"nodeType": "YulIf",
															"src": "21537:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "21540:15:0",
														"valueSize": 1
													},
													{
														"declaration": 861,
														"isOffset": false,
														"isSlot": false,
														"src": "21657:19:0",
														"valueSize": 1
													}
												],
												"id": 895,
												"nodeType": "InlineAssembly",
												"src": "21514:190:0"
											},
											{
												"id": 952,
												"nodeType": "UncheckedBlock",
												"src": "21971:1361:0",
												"statements": [
													{
														"expression": {
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "22064:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 896,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "22066:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 898,
																"indexExpression": {
																	"id": 897,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "22085:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22066:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 900,
														"nodeType": "ExpressionStatement",
														"src": "22064:26:0"
													},
													{
														"expression": {
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "22132:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 901,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "22134:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 903,
																"indexExpression": {
																	"id": 902,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "22153:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22134:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 905,
														"nodeType": "ExpressionStatement",
														"src": "22132:24:0"
													},
													{
														"expression": {
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 906,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "22420:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 908,
																"indexExpression": {
																	"id": 907,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "22438:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22420:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 910,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "22485:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 911,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "22505:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 913,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 813,
																					"src": "22548:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 914,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "22554:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 915,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "22558:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 912,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "22533:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22533:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22505:73:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 909,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "22449:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22449:143:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22420:172:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 920,
														"nodeType": "ExpressionStatement",
														"src": "22420:172:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 921,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "22709:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 922,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "22731:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22709:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22760:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22709:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 951,
														"nodeType": "IfStatement",
														"src": "22705:617:0",
														"trueBody": {
															"id": 950,
															"nodeType": "Block",
															"src": "22763:559:0",
															"statements": [
																{
																	"assignments": [
																		927
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 927,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22789:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 950,
																			"src": "22781:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 926,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22781:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 931,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 928,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "22803:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22803:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22781:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 932,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "22934:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 934,
																			"indexExpression": {
																				"id": 933,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "22952:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22934:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22968:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22934:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 949,
																	"nodeType": "IfStatement",
																	"src": "22930:378:0",
																	"trueBody": {
																		"id": 948,
																		"nodeType": "Block",
																		"src": "22971:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 939,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 937,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 927,
																						"src": "23055:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 938,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "23070:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23055:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 947,
																				"nodeType": "IfStatement",
																				"src": "23051:239:0",
																				"trueBody": {
																					"id": 946,
																					"nodeType": "Block",
																					"src": "23085:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 944,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 940,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "23215:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 942,
																									"indexExpression": {
																										"id": 941,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 927,
																										"src": "23233:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23215:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 943,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 822,
																									"src": "23248:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23215:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 945,
																							"nodeType": "ExpressionStatement",
																							"src": "23215:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "23439:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "23431:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 959,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "23466:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23458:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23458:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 955,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23450:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23450:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 962,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "23473:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23450:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23431:58:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23508:358:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23586:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23642:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "23696:25:0"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "23753:4:0"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "23786:8:0"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "23821:7:0"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "23564:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23564:292:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23564:292:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "23696:25:0",
														"valueSize": 1
													},
													{
														"declaration": 813,
														"isOffset": false,
														"isSlot": false,
														"src": "23753:4:0",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "23786:8:0",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "23821:7:0",
														"valueSize": 1
													}
												],
												"id": 965,
												"nodeType": "InlineAssembly",
												"src": "23499:367:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "23879:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23879:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "IfStatement",
												"src": "23875:58:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 970,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "23902:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "23924:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23902:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 969,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "23894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23894:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 973,
													"nodeType": "ExpressionStatement",
													"src": "23894:39:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "23965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "23971:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "23975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23984:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 975,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "23944:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23944:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "23944:42:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "20138:403:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20555:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20664:8:0"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20585:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "20577:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20607:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "20599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "20619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20567:73:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20673:0:0"
									},
									"scope": 1796,
									"src": "20546:3447:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "24215:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "24242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "24248:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "24252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24261:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 994,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1002,
															1042
														],
														"referencedDeclaration": 1042,
														"src": "24225:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24225:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "24225:39:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "23999:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24093:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 992,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24206:8:0"
									},
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "24119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24149:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "24141:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "24161:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24109:73:0"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24215:0:0"
									},
									"scope": 1796,
									"src": "24084:187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25011:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "25034:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "25040:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "25044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "25021:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25021:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "25021:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1021,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "25066:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25069:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "25066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25074:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "25066:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25084:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25066:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "25062:189:0",
												"trueBody": {
													"condition": {
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "25103:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1027,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "25135:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1028,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "25141:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1029,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "25145:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1030,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "25154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1026,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "25104:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25104:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1039,
													"nodeType": "IfStatement",
													"src": "25099:152:0",
													"trueBody": {
														"id": 1038,
														"nodeType": "Block",
														"src": "25162:89:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1034,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "25188:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "25227:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "25188:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1033,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "25180:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25180:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1037,
																"nodeType": "ExpressionStatement",
																"src": "25180:56:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "24277:570:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24861:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1013,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25002:8:0"
									},
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24895:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24887:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24917:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24909:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24967:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24954:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24954:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24877:101:0"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25011:0:0"
									},
									"scope": 1796,
									"src": "24852:405:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "26053:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "25263:633:0",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25910:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25949:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "25941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25971:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "25963:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25991:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "25983:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26021:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "26013:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25931:104:0"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26053:0:0"
									},
									"scope": 1796,
									"src": "25901:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "26853:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "26061:636:0",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26711:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "26741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26771:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "26763:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26791:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "26783:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "26813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26731:104:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26853:0:0"
									},
									"scope": 1796,
									"src": "26702:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "27447:509:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1103,
															"nodeType": "Block",
															"src": "27596:96:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1095,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "27617:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1097,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1073,
																							"src": "27652:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1096,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "27627:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27627:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "27656:16:0",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "27627:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27673:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27627:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "27617:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1081,
																	"id": 1102,
																	"nodeType": "Return",
																	"src": "27610:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1104,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1094,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1093,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "27579:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1104,
																	"src": "27572:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1092,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "27572:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27558:37:0"
														},
														"src": "27550:142:0"
													},
													{
														"block": {
															"id": 1120,
															"nodeType": "Block",
															"src": "27721:229:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1108,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1106,
																				"src": "27739:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27746:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27739:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27756:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27739:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1118,
																	"nodeType": "IfStatement",
																	"src": "27735:113:0",
																	"trueBody": {
																		"id": 1117,
																		"nodeType": "Block",
																		"src": "27759:89:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1113,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1826,
																								"src": "27785:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "27824:8:0",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "27785:47:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1112,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1795,
																						"src": "27777:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27777:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1116,
																				"nodeType": "ExpressionStatement",
																				"src": "27777:56:0"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "27870:70:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27899:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27903:6:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27895:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27895:15:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27918:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "27912:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27912:13:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "27888:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27888:38:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27888:38:0"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1106,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27903:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1106,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27918:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1119,
																	"nodeType": "InlineAssembly",
																	"src": "27861:79:0"
																}
															]
														},
														"errorName": "",
														"id": 1121,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1107,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1106,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27713:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1121,
																	"src": "27700:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1105,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27700:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27699:21:0"
														},
														"src": "27693:257:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1086,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "27507:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27507:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "27528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "27534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1090,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "27543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1083,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "27486:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1082,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "27461:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27461:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27490:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "27461:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27461:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1122,
												"nodeType": "TryStatement",
												"src": "27457:493:0"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "26861:417:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "27292:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27340:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "27332:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27362:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "27354:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "27374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "27412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "27399:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27399:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27322:101:0"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "27441:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27440:6:0"
									},
									"scope": 1796,
									"src": "27283:673:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "28464:2189:0",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "28482:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "28474:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"id": 1134,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "28497:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28474:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "28524:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28524:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "28520:53:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1140,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "28547:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28564:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "28547:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1139,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "28539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28539:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1143,
													"nodeType": "ExpressionStatement",
													"src": "28539:34:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28614:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28606:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28606:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28606:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "28618:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "28622:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1152,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "28636:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "28584:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28584:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "28584:61:0"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "28828:1749:0",
												"statements": [
													{
														"expression": {
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1155,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "29073:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1157,
																"indexExpression": {
																	"id": 1156,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "29091:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29073:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1159,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "29143:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1161,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "29184:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1160,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "29163:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29163:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1166,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29219:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1165,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "29211:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1164,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "29211:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29211:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1168,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "29223:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29227:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1163,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "29196:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29196:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29163:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1158,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "29107:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29107:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29073:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1174,
														"nodeType": "ExpressionStatement",
														"src": "29073:170:0"
													},
													{
														"expression": {
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1175,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "29454:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1177,
																"indexExpression": {
																	"id": 1176,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "29473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29454:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "29480:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29493:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1180,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "29498:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "29493:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1182,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "29492:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29523:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "29492:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29491:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29480:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29454:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1188,
														"nodeType": "ExpressionStatement",
														"src": "29454:71:0"
													},
													{
														"assignments": [
															1190
														],
														"declarations": [
															{
																"constant": false,
																"id": 1190,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "29641:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1231,
																"src": "29633:16:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1189,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1200,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1195,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "29668:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1193,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "29660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29660:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29652:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1191,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29652:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29652:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1198,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "29675:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29652:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29633:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1201,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "29710:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29710:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1209,
														"nodeType": "IfStatement",
														"src": "29706:54:0",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1205,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "29733:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "29751:8:0",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "29733:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1204,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "29725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29725:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "29725:35:0"
														}
													},
													{
														"assignments": [
															1211
														],
														"declarations": [
															{
																"constant": false,
																"id": 1211,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29783:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1231,
																"src": "29775:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1210,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1215,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1212,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "29789:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1213,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "29804:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29789:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29775:37:0"
													},
													{
														"assignments": [
															1217
														],
														"declarations": [
															{
																"constant": false,
																"id": 1217,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "29834:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1231,
																"src": "29826:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1216,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29826:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1219,
														"initialValue": {
															"id": 1218,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "29844:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29826:30:0"
													},
													{
														"body": {
															"id": 1221,
															"nodeType": "Block",
															"src": "29874:633:0",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "29901:441:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30003:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30067:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30129:25:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30194:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30238:8:0"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30281:7:0"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29973:4:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29973:351:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29973:351:0"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 89,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30129:25:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1190,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30238:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1217,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30281:7:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1220,
																	"nodeType": "InlineAssembly",
																	"src": "29892:450:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "30515:9:0",
																"subExpression": {
																	"id": 1222,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "30517:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1224,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "30528:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30515:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1226,
														"nodeType": "DoWhileStatement",
														"src": "29871:662:0"
													},
													{
														"expression": {
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1227,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "30547:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1228,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "30563:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30547:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1230,
														"nodeType": "ExpressionStatement",
														"src": "30547:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30615:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30607:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1233,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30607:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30607:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "30619:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "30623:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1239,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "30637:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "30586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30586:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "30586:60:0"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "28147:250:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "28411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28425:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "28417:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "28429:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28416:30:0"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28464:0:0"
									},
									"scope": 1796,
									"src": "28402:2251:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "31562:1401:0",
										"statements": [
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31580:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1360,
														"src": "31572:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"id": 1253,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "31595:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31572:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "31622:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31628:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31628:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31622:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "31618:57:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1262,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "31648:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31666:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31648:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1261,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "31640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31640:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1265,
													"nodeType": "ExpressionStatement",
													"src": "31640:35:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "31689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31701:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31689:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1275,
												"nodeType": "IfStatement",
												"src": "31685:53:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1271,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "31712:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31729:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31712:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1270,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "31704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31704:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1274,
													"nodeType": "ExpressionStatement",
													"src": "31704:34:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "31752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1277,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "31763:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31752:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "31748:98:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1280,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "31805:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31837:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31805:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1279,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "31797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31797:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1283,
													"nodeType": "ExpressionStatement",
													"src": "31797:49:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31887:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31879:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31879:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31879:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "31891:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "31895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1292,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "31909:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "31857:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31857:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "31857:61:0"
											},
											{
												"id": 1349,
												"nodeType": "UncheckedBlock",
												"src": "32027:860:0",
												"statements": [
													{
														"expression": {
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1295,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "32247:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1297,
																"indexExpression": {
																	"id": 1296,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "32266:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32247:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "32273:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1299,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32286:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1300,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "32291:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32286:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1302,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32285:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32316:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32285:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32284:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32273:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32247:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1308,
														"nodeType": "ExpressionStatement",
														"src": "32247:71:0"
													},
													{
														"expression": {
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1309,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "32554:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1311,
																"indexExpression": {
																	"id": 1310,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "32572:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32554:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "32624:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1315,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "32665:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1314,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "32644:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32644:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32700:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32692:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1318,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32692:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32692:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1322,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1246,
																					"src": "32704:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32708:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1317,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "32677:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32677:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32644:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1312,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "32588:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32588:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32554:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1328,
														"nodeType": "ExpressionStatement",
														"src": "32554:170:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1330,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "32764:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1331,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "32778:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1332,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "32793:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32778:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32804:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32778:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32815:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32807:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1336,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32807:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32807:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1340,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "32819:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1329,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "32744:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32744:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1342,
														"nodeType": "EmitStatement",
														"src": "32739:83:0"
													},
													{
														"expression": {
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1343,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "32837:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "32853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1345,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "32868:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32853:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32837:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "32837:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32917:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32917:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32917:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "32929:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "32933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1357,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "32947:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1350,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "32896:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32896:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "32896:60:0"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "30659:829:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31502:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31523:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "31515:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31535:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "31527:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31514:30:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31562:0:0"
									},
									"scope": 1796,
									"src": "31493:1470:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "33478:572:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "33494:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "33498:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "33488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33488:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "33488:19:0"
											},
											{
												"id": 1427,
												"nodeType": "UncheckedBlock",
												"src": "33518:526:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1376,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "33546:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33549:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33546:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33554:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33546:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33564:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33546:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1426,
														"nodeType": "IfStatement",
														"src": "33542:492:0",
														"trueBody": {
															"id": 1425,
															"nodeType": "Block",
															"src": "33567:467:0",
															"statements": [
																{
																	"assignments": [
																		1382
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1382,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33593:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1425,
																			"src": "33585:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1381,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33585:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1384,
																	"initialValue": {
																		"id": 1383,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "33599:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33585:27:0"
																},
																{
																	"assignments": [
																		1386
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1386,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33638:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1425,
																			"src": "33630:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1385,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33630:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1390,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1387,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "33646:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1388,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "33652:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33646:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33630:30:0"
																},
																{
																	"body": {
																		"id": 1409,
																		"nodeType": "Block",
																		"src": "33681:214:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 1401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33707:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1394,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33747:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1393,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33739:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1392,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33739:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1395,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33739:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1396,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1364,
																								"src": "33751:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1398,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33755:7:0",
																								"subExpression": {
																									"id": 1397,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1386,
																									"src": "33755:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1399,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1368,
																								"src": "33764:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1391,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "33708:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1400,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33708:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1408,
																				"nodeType": "IfStatement",
																				"src": "33703:174:0",
																				"trueBody": {
																					"id": 1407,
																					"nodeType": "Block",
																					"src": "33772:105:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1403,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1826,
																											"src": "33806:38:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1404,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "33845:8:0",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "33806:47:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1402,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1795,
																									"src": "33798:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1405,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33798:56:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1406,
																							"nodeType": "ExpressionStatement",
																							"src": "33798:56:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1410,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "33903:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1411,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "33911:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33903:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1413,
																	"nodeType": "DoWhileStatement",
																	"src": "33678:238:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1414,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "33979:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1415,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "33996:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33979:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1424,
																	"nodeType": "IfStatement",
																	"src": "33975:44:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1420,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "34016:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34009:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1418,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "34009:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34009:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1417,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "34001:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34001:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1423,
																		"nodeType": "ExpressionStatement",
																		"src": "34001:18:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "32969:388:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33371:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33398:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "33390:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "33410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "33436:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33380:80:0"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33478:0:0"
									},
									"scope": 1796,
									"src": "33362:688:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "34195:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1438,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "34215:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "34219:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1437,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1429,
															1444
														],
														"referencedDeclaration": 1429,
														"src": "34205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34205:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "34205:27:0"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "34056:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34138:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34156:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "34148:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34168:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "34160:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34147:30:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34195:0:0"
									},
									"scope": 1796,
									"src": "34129:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "34571:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "34590:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "34594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1452,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1459,
															1509
														],
														"referencedDeclaration": 1509,
														"src": "34581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34581:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "34581:28:0"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "34433:69:0",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34516:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "34525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "34537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34524:29:0"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34571:0:0"
									},
									"scope": 1796,
									"src": "34507:109:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "35133:346:0",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "35151:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "35143:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35143:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [
														{
															"id": 1472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "35167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1471,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "35159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35159:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35143:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1475,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "35190:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1476,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "35207:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35207:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "35230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "35207:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35190:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "35186:198:0",
												"trueBody": {
													"condition": {
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "35253:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1482,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "35271:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1483,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "35278:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35278:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1481,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "35254:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35254:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1493,
													"nodeType": "IfStatement",
													"src": "35249:135:0",
													"trueBody": {
														"id": 1492,
														"nodeType": "Block",
														"src": "35300:84:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1488,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1802,
																				"src": "35326:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "35360:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "35326:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1487,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "35318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35318:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1491,
																"nodeType": "ExpressionStatement",
																"src": "35318:51:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1495,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "35394:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1497,
															"indexExpression": {
																"id": 1496,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "35410:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35394:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "35419:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "35394:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1499,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "35427:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35394:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "35394:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1503,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "35453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "35460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "35464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "35444:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35444:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "35439:33:0"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "34622:392:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35028:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35054:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "35046:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35074:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "35066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35096:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "35091:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35036:79:0"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35133:0:0"
									},
									"scope": 1796,
									"src": "35019:460:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "35786:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "35802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35811:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1515,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521,
															1675
														],
														"referencedDeclaration": 1675,
														"src": "35796:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35796:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "35796:21:0"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "35670:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35746:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "35752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35751:17:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35786:0:0"
									},
									"scope": 1796,
									"src": "35737:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "36110:2955:0",
										"statements": [
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "36128:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "36120:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36120:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1534,
												"initialValue": {
													"arguments": [
														{
															"id": 1532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "36169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1531,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "36150:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36150:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36120:57:0"
											},
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "36196:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "36188:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1535,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36188:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1541,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "36219:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1539,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "36211:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36211:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "36203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1537,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36203:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36203:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36188:52:0"
											},
											{
												"assignments": [
													1546,
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1546,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "36260:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "36252:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "36289:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "36281:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1547,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36281:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"id": 1550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "36335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "36308:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36308:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36251:92:0"
											},
											{
												"condition": {
													"id": 1553,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1526,
													"src": "36358:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "36354:321:0",
												"trueBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "36373:302:0",
													"statements": [
														{
															"condition": {
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "36476:69:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1555,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "36502:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1556,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1536,
																			"src": "36519:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1557,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "36525:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36525:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1554,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "36477:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36477:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1573,
															"nodeType": "IfStatement",
															"src": "36472:192:0",
															"trueBody": {
																"condition": {
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "36567:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1562,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1536,
																				"src": "36585:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1563,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1777,
																					"src": "36591:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "36591:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1561,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "36568:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36568:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1572,
																"nodeType": "IfStatement",
																"src": "36563:101:0",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1568,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1820,
																					"src": "36621:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "36655:8:0",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "36621:42:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1567,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "36613:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36613:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1571,
																	"nodeType": "ExpressionStatement",
																	"src": "36613:51:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "36707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36721:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36713:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36713:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "36725:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36734:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1576,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "36685:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36685:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "36685:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36808:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36841:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "36942:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36963:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "36935:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36935:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36935:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "36825:15:0"
															},
															"nodeType": "YulIf",
															"src": "36822:157:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1548,
														"isOffset": false,
														"isSlot": false,
														"src": "36825:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "36942:19:0",
														"valueSize": 1
													}
												],
												"id": 1586,
												"nodeType": "InlineAssembly",
												"src": "36799:190:0"
											},
											{
												"id": 1650,
												"nodeType": "UncheckedBlock",
												"src": "37256:1545:0",
												"statements": [
													{
														"expression": {
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1587,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "37568:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1589,
																"indexExpression": {
																	"id": 1588,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "37587:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37568:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37597:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1591,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "37602:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "37597:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1593,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "37596:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "37596:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37568:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1597,
														"nodeType": "ExpressionStatement",
														"src": "37568:60:0"
													},
													{
														"expression": {
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1598,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "37859:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1600,
																"indexExpression": {
																	"id": 1599,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "37877:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37859:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1602,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "37924:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1605,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1603,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "37947:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1604,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 64,
																						"src": "37965:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37947:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1606,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "37946:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1536,
																					"src": "38009:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38023:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38015:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1609,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "38015:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38015:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1613,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1530,
																					"src": "38027:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1607,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "37994:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37994:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "37946:101:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1601,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "37888:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37888:173:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37859:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"nodeType": "ExpressionStatement",
														"src": "37859:202:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1619,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "38178:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1620,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "38200:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38178:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38229:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38178:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1649,
														"nodeType": "IfStatement",
														"src": "38174:617:0",
														"trueBody": {
															"id": 1648,
															"nodeType": "Block",
															"src": "38232:559:0",
															"statements": [
																{
																	"assignments": [
																		1625
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1625,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "38258:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1648,
																			"src": "38250:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1624,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "38250:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1629,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "38272:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38282:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "38272:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "38250:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1630,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "38403:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1632,
																			"indexExpression": {
																				"id": 1631,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1625,
																				"src": "38421:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "38403:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38437:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "38403:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1647,
																	"nodeType": "IfStatement",
																	"src": "38399:378:0",
																	"trueBody": {
																		"id": 1646,
																		"nodeType": "Block",
																		"src": "38440:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1635,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1625,
																						"src": "38524:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1636,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "38539:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "38524:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1645,
																				"nodeType": "IfStatement",
																				"src": "38520:239:0",
																				"trueBody": {
																					"id": 1644,
																					"nodeType": "Block",
																					"src": "38554:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1642,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1638,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "38684:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1640,
																									"indexExpression": {
																										"id": 1639,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1625,
																										"src": "38702:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "38684:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1641,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1530,
																									"src": "38717:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "38684:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1643,
																							"nodeType": "ExpressionStatement",
																							"src": "38684:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1652,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "38825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38839:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38831:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38831:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38831:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "38843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1651,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "38816:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38816:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "38811:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1661,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "38882:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38888:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38888:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38888:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "38900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38909:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1660,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "38861:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38861:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "38861:50:0"
											},
											{
												"id": 1673,
												"nodeType": "UncheckedBlock",
												"src": "39010:49:0",
												"statements": [
													{
														"expression": {
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "39034:14:0",
															"subExpression": {
																"id": 1670,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "39034:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1672,
														"nodeType": "ExpressionStatement",
														"src": "39034:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "35830:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "36050:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "36056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "36078:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "36073:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36055:37:0"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36110:0:0"
									},
									"scope": 1796,
									"src": "36041:3024:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "39423:456:0",
										"statements": [
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "39441:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1720,
														"src": "39433:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"initialValue": {
													"baseExpression": {
														"id": 1685,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "39450:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1687,
													"indexExpression": {
														"id": 1686,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "39468:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39450:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39433:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1689,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "39488:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39498:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39488:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1697,
												"nodeType": "IfStatement",
												"src": "39484:70:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1693,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "39509:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "39545:8:0",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "39509:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1692,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "39501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39501:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1696,
													"nodeType": "ExpressionStatement",
													"src": "39501:53:0"
												}
											},
											{
												"assignments": [
													1699
												],
												"declarations": [
													{
														"constant": false,
														"id": 1699,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "39572:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1720,
														"src": "39564:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"nodeType": "VariableDeclarationStatement",
												"src": "39564:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39676:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39690:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "39709:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "39690:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "39709:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1699,
														"isOffset": false,
														"isSlot": false,
														"src": "39690:15:0",
														"valueSize": 1
													}
												],
												"id": 1701,
												"nodeType": "InlineAssembly",
												"src": "39667:61:0"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1702,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "39737:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1703,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "39747:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1704,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "39756:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39747:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1706,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39746:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1707,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "39791:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1708,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "39810:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39791:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1710,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39790:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39746:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39737:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "39737:92:0"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1714,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "39839:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1716,
														"indexExpression": {
															"id": 1715,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "39857:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39839:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1717,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "39866:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39839:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "39839:33:0"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "39259:84:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "39357:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "39381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "39373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "39395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "39388:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1679,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39372:33:0"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39423:0:0"
									},
									"scope": 1796,
									"src": "39348:531:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "40580:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "39885:549:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "40448:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "40468:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40498:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "40490:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "40517:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "40510:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1727,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40458:82:0"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "40572:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1730,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40572:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40571:8:0"
									},
									"scope": 1796,
									"src": "40439:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "40868:164:0",
										"statements": [
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "40885:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1766,
														"src": "40878:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1746,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40878:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "40904:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1751,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "40927:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40904:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "40897:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1748,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40897:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40897:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40878:68:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1758,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "40982:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1759,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "40988:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1760,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "40992:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1757,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "40971:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40971:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1755,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40963:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40963:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1763,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "41007:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40963:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1765,
												"nodeType": "Return",
												"src": "40956:69:0"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "40588:135:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "40737:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "40761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "40783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "40811:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "40803:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40751:85:0"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "40859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40858:9:0"
									},
									"scope": 1796,
									"src": "40728:304:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "41470:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1773,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "41487:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "41491:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "41487:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1772,
												"id": 1775,
												"nodeType": "Return",
												"src": "41480:17:0"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "41223:173:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "41410:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41427:2:0"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "41461:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41460:9:0"
									},
									"scope": 1796,
									"src": "41401:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "41685:1624:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "41704:1599:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42068:31:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "42087:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "42081:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42081:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42094:4:0",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "42077:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42077:22:0"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "42072:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42178:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "42184:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42171:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42171:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42171:15:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "42243:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "42254:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42257:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42250:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42250:12:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42243:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42332:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42337:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42325:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42325:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42325:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42427:14:0",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "42438:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "42431:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42685:388:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "42703:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42714:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42719:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "42710:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42710:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "42703:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42864:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42873:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "42881:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "42887:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "42877:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "42877:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42869:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42869:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "42856:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42856:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42856:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42961:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42973:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42979:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42969:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42969:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42961:4:0"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "43050:9:0",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "43052:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "43044:4:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "43037:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "43037:12:0"
																		},
																		"nodeType": "YulIf",
																		"src": "43034:25:0"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "42680:1:0",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "42682:2:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "42658:21:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "42660:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "42672:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "42664:4:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "42654:419:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "43087:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "43105:3:0"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43110:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "43101:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "43101:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "43091:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "43207:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43218:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43223:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "43214:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "43214:14:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "43207:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43281:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "43286:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "43274:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "43274:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43274:19:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42243:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42332:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42438:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42703:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42714:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "42864:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "43110:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "43207:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "43218:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": false,
														"src": "43281:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": false,
														"src": "42672:5:0",
														"valueSize": 1
													}
												],
												"id": 1785,
												"nodeType": "InlineAssembly",
												"src": "41695:1608:0"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "41510:86:0",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "41610:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "41620:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41619:15:0"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "41680:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "41666:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41666:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41665:19:0"
									},
									"scope": 1796,
									"src": "41601:1708:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "43424:107:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "43443:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43464:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "43470:13:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "43457:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "43457:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43457:27:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43504:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43510:4:0",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "43497:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "43497:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43497:18:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": false,
														"src": "43470:13:0",
														"valueSize": 1
													}
												],
												"id": 1793,
												"nodeType": "InlineAssembly",
												"src": "43434:91:0"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "43315:51:0",
										"text": " @dev For more efficient reverts."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "43380:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "43395:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "43388:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "43388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43387:22:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43424:0:0"
									},
									"scope": 1796,
									"src": "43371:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1797,
							"src": "895:42638:0",
							"usedErrors": [
								1802,
								1805,
								1808,
								1811,
								1814,
								1817,
								1820,
								1823,
								1826,
								1829,
								1832,
								1835,
								1838
							]
						}
					],
					"src": "84:43450:0"
				},
				"id": 0
			},
			"localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/github/chiru-labs/ERC721A/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2002
						]
					},
					"id": 2003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1799,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:1",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2002,
							"linearizedBaseContracts": [
								2002
							],
							"name": "IERC721A",
							"nameLocation": "157:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1802,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:1"
									},
									"src": "253:42:1"
								},
								{
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1805,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"src": "350:41:1"
								},
								{
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:1",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1808,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"src": "467:35:1"
								},
								{
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:1",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1811,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "564:26:1"
								},
								{
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1814,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:1"
									},
									"src": "673:25:1"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1817,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "753:38:1"
								},
								{
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1820,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:1"
									},
									"src": "878:42:1"
								},
								{
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:1",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1823,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:1"
									},
									"src": "984:35:1"
								},
								{
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:1",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1826,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:1"
									},
									"src": "1146:47:1"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:1",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1829,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:1"
									},
									"src": "1259:30:1"
								},
								{
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1832,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:1"
									},
									"src": "1344:36:1"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1835,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:1"
									},
									"src": "1470:40:1"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1838,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:1"
									},
									"src": "1604:44:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1847,
									"members": [
										{
											"constant": false,
											"id": 1840,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1847,
											"src": "1904:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1839,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1842,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 1847,
											"src": "2010:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1841,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1844,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1847,
											"src": "2087:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1843,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1846,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1847,
											"src": "2196:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1845,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:1",
									"nodeType": "StructDefinition",
									"scope": 2002,
									"src": "1835:384:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:1"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2653:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:1"
									},
									"scope": 2002,
									"src": "2607:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1855,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:1"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3265:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:1"
									},
									"scope": 2002,
									"src": "3195:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1870,
									"name": "Transfer",
									"nameLocation": "3557:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "3566:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "3588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "3608:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:1"
									},
									"src": "3551:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1879,
									"name": "Approval",
									"nameLocation": "3744:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3753:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3776:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3802:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:1"
									},
									"src": "3738:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:1",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1888,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3983:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "4006:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:1"
									},
									"src": "3962:85:1"
								},
								{
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "4151:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:1"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "4189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:1"
									},
									"scope": 2002,
									"src": "4132:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "4365:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:1"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "4405:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:1"
									},
									"scope": 2002,
									"src": "4348:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5177:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5199:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5219:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5244:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:1"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:1"
									},
									"scope": 2002,
									"src": "5142:145:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5413:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5435:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:1"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:1"
									},
									"scope": 2002,
									"src": "5378:116:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "6048:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "6070:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "6090:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:1"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:1"
									},
									"scope": 2002,
									"src": "6017:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "6616:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "6628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:1"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:1"
									},
									"scope": 2002,
									"src": "6599:63:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "7016:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "7034:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:1"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:1"
									},
									"scope": 2002,
									"src": "6989:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7230:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:1"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "7270:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:1"
									},
									"scope": 2002,
									"src": "7209:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "7464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "7479:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:1"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "7520:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:1"
									},
									"scope": 2002,
									"src": "7438:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:1"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "7819:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:1"
									},
									"scope": 2002,
									"src": "7780:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:1"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "7946:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:1"
									},
									"scope": 2002,
									"src": "7905:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "8080:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:1"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "8120:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:1"
									},
									"scope": 2002,
									"src": "8062:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2001,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "8620:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "8649:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "8668:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "8690:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:1"
									},
									"src": "8594:116:1"
								}
							],
							"scope": 2003,
							"src": "147:8565:1",
							"usedErrors": [
								1802,
								1805,
								1808,
								1811,
								1814,
								1817,
								1820,
								1823,
								1826,
								1829,
								1832,
								1835,
								1838
							]
						}
					],
					"src": "84:8629:1"
				},
				"id": 1
			}
		}
	}
}