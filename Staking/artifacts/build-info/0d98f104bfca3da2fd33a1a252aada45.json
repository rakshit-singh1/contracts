{
	"id": "0d98f104bfca3da2fd33a1a252aada45",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking/staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n    /** \n        @title Staking of an ERC 20 token\n        @author Rakshit Kumar Singh\n        @notice You can stake an ERC20 token for 2, 4, 6, 8 & 10 minutes and reieve reward of 1% per second\n        @dev You have to make an erc20 token say FUNGIBLE in this case then,\n             convert the IERC20 instance to it. You can see the example in the constructor.\n             FUNGIBLIE is the name of my contract in which erc20 token is made\n             To run this staking contract first the owner have to mint or transfer some tokens to this contract\n    */\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";//importing IERC20 interface\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract staking {\n    using Counters for Counters.Counter;\n    Counters.Counter private StakeIdCounter;\n\n    IERC20 public token;\n    address public owner;\n\n    uint256 public interest = 1; // 1% interest\n\n    struct StakingInfo {\n        uint256 StakedAmount;\n        uint256 StakedTime;\n        uint256 duration;//in seconds\n        bool expired;\n    }\n    uint256 lastRewardClaimTime;\n    mapping(uint256 => address) public stakingOwner;//Every ID has an owner\n    mapping(uint256 => StakingInfo) public stakes;\n    /*Every staking has it's own ID\n    therefore 1 user can have multiple IDs of Staking Every time he stakes an amount the stake is assigned a unique ID */\n    mapping(address => uint256) public rewards;\n\n    constructor(address _token) {\n        // Initialize the staking contract with a specified ERC-20 token.\n        token = IERC20(_token);\n        owner = msg.sender;\n    }\n\n    /*  Function to stake tokens for a specified time period.\n        Users can stake tokens for 2, 4, 6, 8, or 10 minutes.\n        Tokens are transferred from the user to this contract.\n        Staking information is recorded (StakedAmount, StakedTime, duration, expired).\n        IMP: To stake a perticular amount it is required to take approval for the amount and \n        that too from the token contract otherwise it will throw error\n    */\n    function Stake(uint256 _numTokens, uint256 tarrif) external returns (uint256) {\n        /*  \n            Increment the stake ID counter. As it is being incremented in the start therefore, \n            the counter starts from 1 so no records of id 0\n        */\n        StakeIdCounter.increment();\n\n        // Check for valid staking conditions and requirements.\n        require(_numTokens > 0, \"Must stake more than zero tokens\");\n        require(token.balanceOf(msg.sender) >= _numTokens, \"Not Enough Balance Tokens To Stake\");\n        require(tarrif == 2 ||\n                tarrif == 4 || \n                tarrif == 6 || \n                tarrif == 8 || \n                tarrif == 10,\n            \"Tarrif can Only be of 2,4,6,8,10 Minutes\");\n\n        // Record staking information for the user.\n        uint256 current_tarrif = block.timestamp;\n        stakingOwner[StakeIdCounter.current()] = msg.sender;\n        require(token.transferFrom(msg.sender, address(this), _numTokens), \"Give approval from initial to stake\");\n        stakes[StakeIdCounter.current()].StakedAmount += _numTokens;\n        stakes[StakeIdCounter.current()].StakedTime = current_tarrif;//Recorded above\n        // input is take in the form of minutes but will be stored in seconds for calculation simplicity\n        stakes[StakeIdCounter.current()].duration = tarrif * 60;\n        // This is a flag to ensure that the user has collected the amount back or not. Will be used further\n        stakes[StakeIdCounter.current()].expired = false;\n\n        return StakeIdCounter.current();\n    }\n\n    // Function to retrieve stake IDs with staking information associated with a user.\n    function IdsAndDetails(address ad) public view returns (uint256[] memory, StakingInfo[] memory) {\n        // Count the number of stakes associated with the user.\n        uint256 count = 0;\n        for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {\n            if (stakingOwner[i] == ad) {\n                count++;\n            }\n        }\n\n        // Retrieve stake IDs and corresponding staking information.\n        StakingInfo[] memory stakingInfos = new StakingInfo[](count);\n        uint256[] memory userids = new uint256[](count);\n        uint256 index = 0;\n        for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {\n            if (stakingOwner[i] == ad) {\n                stakingInfos[index] = stakes[i];\n                userids[index] = i;\n                index++;\n            }\n            if (index > count) {\n                break;\n            }\n        }\n        return (userids, stakingInfos);\n    }\n\n    // Function to retrieve only stake IDs associated with a user.\n    function getIds(address ad) public view returns (uint256[] memory) {\n        // Count the number of stakes associated with the user.\n        uint256 count = 0;\n        for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {\n            if (stakingOwner[i] == ad) {\n                count++;\n            }\n        }\n\n        // Retrieve stake IDs.\n        uint256[] memory userids = new uint256[](count);\n        uint256 index = 0;\n        for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {\n            if (stakingOwner[i] == ad) {\n                userids[index] = i;\n                index++;\n            }\n        }\n        return userids;\n    }\n\n    // Function to return staked time for a particular stake ID.\n    function stakeTime(uint256 id) view public returns (uint256) {\n        return stakes[id].StakedTime;\n    }\n\n    // Function to get the contract's token balance.\n    function contractBalance() public view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    // Function to get the current timestamp. Used only for debugging purpose\n    function CurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    // Internal function to get the minimum of two numbers. Used for internal calculation\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /*  \n        Internal function to update the reward for a stake. This function will update the reward for current id.\n        To see the current collected reward value could be checked from the map declared public \n    */\n    function genrateReward(uint256 id) public {\n        uint256 current_time = block.timestamp;\n        uint256 stakingDuration = current_time - stakes[id].StakedTime;\n        uint256 time = min(stakingDuration, stakes[id].duration);\n\n        // Calculate and update the reward for the stake based on the staking duration.\n        rewards[stakingOwner[id]] = rewards[stakingOwner[id]] + (stakes[id].StakedAmount * interest * time) / 100;\n        stakes[id].StakedTime = current_time;\n        stakes[id].duration = stakes[id].duration - time;\n    }\n\n    //check if a user can claim reward\n    function isRewardAvailable(address user) public view returns(bool){\n        return ((rewards[user] > 0) && (lastRewardClaimTime-block.timestamp)>120);\n    }\n\n    /*  \n        Function to claim rewards for a user.\n        We have also updated the rewards for all users using previous function\n    */\n    function claimReward(address user) public {\n        // Retrieve stake IDs associated with the user.\n        require((lastRewardClaimTime-block.timestamp)>120,\"Cooldown Time\");\n        lastRewardClaimTime=block.timestamp;\n        uint256[] memory userids = getIds(user);\n        require(userids.length > 0, \"You haven't staked any amount\");\n\n        // Iterate through the stake IDs and update rewards for each stake.\n        for (uint256 i = 0; i < userids.length; i++) {\n            if (!stakes[userids[i]].expired) {\n                genrateReward(userids[i]);\n            }\n        }\n\n        // Transfer the rewards to the user and reset the rewards for the user.\n        require(rewards[user] > 0, \"No reward to claim\");\n        token.transfer(msg.sender, rewards[user]);\n        rewards[user] = 0;\n    }\n\n    // Function to claim staked amounts for a user.\n    function claimAmount(address user) public {\n\n        // Retrieve stake IDs associated with the user.\n        uint256[] memory userids = getIds(user);\n        require(userids.length > 0, \"No amount staked\");\n\n        // Iterate through the stake IDs and transfer staked amounts for each stake.\n        for (uint256 i = 0; i < userids.length; i++) {\n            if (!stakes[userids[i]].expired) {\n                token.transfer(msg.sender, stakes[userids[i]].StakedAmount);\n                stakes[userids[i]].StakedAmount = 0;\n                stakes[userids[i]].expired = true;//after expired neither rewards could be claimed not amount  again\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"Staking/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking/staking.sol": {
				"staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "CurrentTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ad",
									"type": "address"
								}
							],
							"name": "IdsAndDetails",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "StakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakedTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "duration",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "expired",
											"type": "bool"
										}
									],
									"internalType": "struct staking.StakingInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tarrif",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "genrateReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ad",
									"type": "address"
								}
							],
							"name": "getIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isRewardAvailable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "stakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "StakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "StakedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "expired",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking/staking.sol\":759:8796  contract staking {... */\n  mstore(0x40, 0x80)\n    /* \"Staking/staking.sol\":947:948  1 */\n  0x01\n    /* \"Staking/staking.sol\":921:948  uint256 public interest = 1 */\n  0x03\n  sstore\n    /* \"Staking/staking.sol\":1486:1655  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Staking/staking.sol\":1613:1619  _token */\n  dup1\n    /* \"Staking/staking.sol\":1598:1603  token */\n  0x01\n  0x00\n    /* \"Staking/staking.sol\":1598:1620  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/staking.sol\":1638:1648  msg.sender */\n  caller\n    /* \"Staking/staking.sol\":1630:1635  owner */\n  0x02\n  0x00\n    /* \"Staking/staking.sol\":1630:1648  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/staking.sol\":1486:1655  constructor(address _token) {... */\n  pop\n    /* \"Staking/staking.sol\":759:8796  contract staking {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Staking/staking.sol\":759:8796  contract staking {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking/staking.sol\":759:8796  contract staking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc392f766\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd5a44f86\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd5a44f86\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd80e8700\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf3a93e80\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xc392f766\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc9352971\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc9ec05ea\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd279c191\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x78317be7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x78317be7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8b7afe2e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x90eb2981\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x64f50c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0a42f049\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2671b0d8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking/staking.sol\":6954:7110  function isRewardAvailable(address user) public view returns(bool){... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":1437:1479  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":5482:5588  function stakeTime(uint256 id) view public returns (uint256) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":4758:5411  function getIds(address ad) public view returns (uint256[] memory) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":8123:8794  function claimAmount(address user) public {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Staking/staking.sol\":5647:5758  function contractBalance() public view returns (uint256) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":894:914  address public owner */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":1152:1199  mapping(uint256 => address) public stakingOwner */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":921:948  uint256 public interest = 1 */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":3760:4685  function IdsAndDetails(address ad) public view returns (uint256[] memory, StakingInfo[] memory) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":2107:3667  function Stake(uint256 _numTokens, uint256 tarrif) external returns (uint256) {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":7257:8065  function claimReward(address user) public {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"Staking/staking.sol\":1228:1273  mapping(uint256 => StakingInfo) public stakes */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":5842:5934  function CurrentTime() public view returns (uint256) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":6366:6909  function genrateReward(uint256 id) public {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Staking/staking.sol\":869:888  IERC20 public token */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":6954:7110  function isRewardAvailable(address user) public view returns(bool){... */\n    tag_25:\n        /* \"Staking/staking.sol\":7015:7019  bool */\n      0x00\n        /* \"Staking/staking.sol\":7055:7056  0 */\n      dup1\n        /* \"Staking/staking.sol\":7039:7046  rewards */\n      0x07\n        /* \"Staking/staking.sol\":7039:7052  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":7047:7051  user */\n      dup5\n        /* \"Staking/staking.sol\":7039:7052  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":7039:7056  rewards[user] > 0 */\n      gt\n        /* \"Staking/staking.sol\":7038:7102  (rewards[user] > 0) && (lastRewardClaimTime-block.timestamp)>120 */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"Staking/staking.sol\":7099:7102  120 */\n      0x78\n        /* \"Staking/staking.sol\":7082:7097  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":7062:7081  lastRewardClaimTime */\n      sload(0x04)\n        /* \"Staking/staking.sol\":7062:7097  lastRewardClaimTime-block.timestamp */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"Staking/staking.sol\":7061:7102  (lastRewardClaimTime-block.timestamp)>120 */\n      gt\n        /* \"Staking/staking.sol\":7038:7102  (rewards[user] > 0) && (lastRewardClaimTime-block.timestamp)>120 */\n    tag_89:\n        /* \"Staking/staking.sol\":7030:7103  return ((rewards[user] > 0) && (lastRewardClaimTime-block.timestamp)>120) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":6954:7110  function isRewardAvailable(address user) public view returns(bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":1437:1479  mapping(address => uint256) public rewards */\n    tag_30:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":5482:5588  function stakeTime(uint256 id) view public returns (uint256) {... */\n    tag_36:\n        /* \"Staking/staking.sol\":5534:5541  uint256 */\n      0x00\n        /* \"Staking/staking.sol\":5560:5566  stakes */\n      0x06\n        /* \"Staking/staking.sol\":5560:5570  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":5567:5569  id */\n      dup4\n        /* \"Staking/staking.sol\":5560:5570  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":5560:5581  stakes[id].StakedTime */\n      0x01\n      add\n      sload\n        /* \"Staking/staking.sol\":5553:5581  return stakes[id].StakedTime */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":5482:5588  function stakeTime(uint256 id) view public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":4758:5411  function getIds(address ad) public view returns (uint256[] memory) {... */\n    tag_40:\n        /* \"Staking/staking.sol\":4807:4823  uint256[] memory */\n      0x60\n        /* \"Staking/staking.sol\":4899:4912  uint256 count */\n      0x00\n        /* \"Staking/staking.sol\":4931:4940  uint256 i */\n      dup1\n        /* \"Staking/staking.sol\":4926:5073  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n    tag_94:\n        /* \"Staking/staking.sol\":4951:4975  StakeIdCounter.current() */\n      tag_97\n        /* \"Staking/staking.sol\":4951:4965  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":4951:4973  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":4951:4975  StakeIdCounter.current() */\n      jump\t// in\n    tag_97:\n        /* \"Staking/staking.sol\":4946:4947  i */\n      dup2\n        /* \"Staking/staking.sol\":4946:4975  i <= StakeIdCounter.current() */\n      gt\n        /* \"Staking/staking.sol\":4926:5073  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      tag_95\n      jumpi\n        /* \"Staking/staking.sol\":5019:5021  ad */\n      dup4\n        /* \"Staking/staking.sol\":5000:5021  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":5000:5012  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":5000:5015  stakingOwner[i] */\n      0x00\n        /* \"Staking/staking.sol\":5013:5014  i */\n      dup4\n        /* \"Staking/staking.sol\":5000:5015  stakingOwner[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":5000:5021  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking/staking.sol\":4996:5063  if (stakingOwner[i] == ad) {... */\n      tag_99\n      jumpi\n        /* \"Staking/staking.sol\":5041:5048  count++ */\n      dup2\n      dup1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap3\n      pop\n      pop\n        /* \"Staking/staking.sol\":4996:5063  if (stakingOwner[i] == ad) {... */\n    tag_99:\n        /* \"Staking/staking.sol\":4977:4980  i++ */\n      dup1\n      dup1\n      tag_102\n      swap1\n      tag_101\n      jump\t// in\n    tag_102:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":4926:5073  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      jump(tag_94)\n    tag_95:\n      pop\n        /* \"Staking/staking.sol\":5114:5138  uint256[] memory userids */\n      0x00\n        /* \"Staking/staking.sol\":5155:5160  count */\n      dup2\n        /* \"Staking/staking.sol\":5141:5161  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_103\n      jumpi\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n    tag_103:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_106:\n      pop\n        /* \"Staking/staking.sol\":5114:5161  uint256[] memory userids = new uint256[](count) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":5171:5184  uint256 index */\n      0x00\n        /* \"Staking/staking.sol\":5203:5212  uint256 i */\n      dup1\n        /* \"Staking/staking.sol\":5198:5381  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n    tag_107:\n        /* \"Staking/staking.sol\":5223:5247  StakeIdCounter.current() */\n      tag_110\n        /* \"Staking/staking.sol\":5223:5237  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":5223:5245  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":5223:5247  StakeIdCounter.current() */\n      jump\t// in\n    tag_110:\n        /* \"Staking/staking.sol\":5218:5219  i */\n      dup2\n        /* \"Staking/staking.sol\":5218:5247  i <= StakeIdCounter.current() */\n      gt\n        /* \"Staking/staking.sol\":5198:5381  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      tag_108\n      jumpi\n        /* \"Staking/staking.sol\":5291:5293  ad */\n      dup6\n        /* \"Staking/staking.sol\":5272:5293  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":5272:5284  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":5272:5287  stakingOwner[i] */\n      0x00\n        /* \"Staking/staking.sol\":5285:5286  i */\n      dup4\n        /* \"Staking/staking.sol\":5272:5287  stakingOwner[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":5272:5293  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking/staking.sol\":5268:5371  if (stakingOwner[i] == ad) {... */\n      tag_111\n      jumpi\n        /* \"Staking/staking.sol\":5330:5331  i */\n      dup1\n        /* \"Staking/staking.sol\":5313:5320  userids */\n      dup4\n        /* \"Staking/staking.sol\":5321:5326  index */\n      dup4\n        /* \"Staking/staking.sol\":5313:5327  userids[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n    tag_112:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Staking/staking.sol\":5313:5331  userids[index] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Staking/staking.sol\":5349:5356  index++ */\n      dup2\n      dup1\n      tag_115\n      swap1\n      tag_101\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n        /* \"Staking/staking.sol\":5268:5371  if (stakingOwner[i] == ad) {... */\n    tag_111:\n        /* \"Staking/staking.sol\":5249:5252  i++ */\n      dup1\n      dup1\n      tag_116\n      swap1\n      tag_101\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":5198:5381  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      jump(tag_107)\n    tag_108:\n      pop\n        /* \"Staking/staking.sol\":5397:5404  userids */\n      dup2\n        /* \"Staking/staking.sol\":5390:5404  return userids */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/staking.sol\":4758:5411  function getIds(address ad) public view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":8123:8794  function claimAmount(address user) public {... */\n    tag_45:\n        /* \"Staking/staking.sol\":8232:8256  uint256[] memory userids */\n      0x00\n        /* \"Staking/staking.sol\":8259:8271  getIds(user) */\n      tag_118\n        /* \"Staking/staking.sol\":8266:8270  user */\n      dup3\n        /* \"Staking/staking.sol\":8259:8265  getIds */\n      tag_40\n        /* \"Staking/staking.sol\":8259:8271  getIds(user) */\n      jump\t// in\n    tag_118:\n        /* \"Staking/staking.sol\":8232:8271  uint256[] memory userids = getIds(user) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":8306:8307  0 */\n      0x00\n        /* \"Staking/staking.sol\":8289:8296  userids */\n      dup2\n        /* \"Staking/staking.sol\":8289:8303  userids.length */\n      mload\n        /* \"Staking/staking.sol\":8289:8307  userids.length > 0 */\n      gt\n        /* \"Staking/staking.sol\":8281:8328  require(userids.length > 0, \"No amount staked\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"Staking/staking.sol\":8429:8438  uint256 i */\n      0x00\n        /* \"Staking/staking.sol\":8424:8788  for (uint256 i = 0; i < userids.length; i++) {... */\n    tag_122:\n        /* \"Staking/staking.sol\":8448:8455  userids */\n      dup2\n        /* \"Staking/staking.sol\":8448:8462  userids.length */\n      mload\n        /* \"Staking/staking.sol\":8444:8445  i */\n      dup2\n        /* \"Staking/staking.sol\":8444:8462  i < userids.length */\n      lt\n        /* \"Staking/staking.sol\":8424:8788  for (uint256 i = 0; i < userids.length; i++) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"Staking/staking.sol\":8488:8494  stakes */\n      0x06\n        /* \"Staking/staking.sol\":8488:8506  stakes[userids[i]] */\n      0x00\n        /* \"Staking/staking.sol\":8495:8502  userids */\n      dup4\n        /* \"Staking/staking.sol\":8503:8504  i */\n      dup4\n        /* \"Staking/staking.sol\":8495:8505  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_114\n      jump\t// in\n    tag_126:\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":8488:8506  stakes[userids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":8488:8514  stakes[userids[i]].expired */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking/staking.sol\":8483:8778  if (!stakes[userids[i]].expired) {... */\n      tag_127\n      jumpi\n        /* \"Staking/staking.sol\":8534:8539  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":8534:8548  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/staking.sol\":8549:8559  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":8561:8567  stakes */\n      0x06\n        /* \"Staking/staking.sol\":8561:8579  stakes[userids[i]] */\n      0x00\n        /* \"Staking/staking.sol\":8568:8575  userids */\n      dup7\n        /* \"Staking/staking.sol\":8576:8577  i */\n      dup7\n        /* \"Staking/staking.sol\":8568:8578  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_129\n      tag_114\n      jump\t// in\n    tag_129:\n    tag_128:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":8561:8579  stakes[userids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":8561:8592  stakes[userids[i]].StakedAmount */\n      0x00\n      add\n      sload\n        /* \"Staking/staking.sol\":8534:8593  token.transfer(msg.sender, stakes[userids[i]].StakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      pop\n        /* \"Staking/staking.sol\":8645:8646  0 */\n      0x00\n        /* \"Staking/staking.sol\":8611:8617  stakes */\n      0x06\n        /* \"Staking/staking.sol\":8611:8629  stakes[userids[i]] */\n      0x00\n        /* \"Staking/staking.sol\":8618:8625  userids */\n      dup5\n        /* \"Staking/staking.sol\":8626:8627  i */\n      dup5\n        /* \"Staking/staking.sol\":8618:8628  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_114\n      jump\t// in\n    tag_137:\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":8611:8629  stakes[userids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":8611:8642  stakes[userids[i]].StakedAmount */\n      0x00\n      add\n        /* \"Staking/staking.sol\":8611:8646  stakes[userids[i]].StakedAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":8693:8697  true */\n      0x01\n        /* \"Staking/staking.sol\":8664:8670  stakes */\n      0x06\n        /* \"Staking/staking.sol\":8664:8682  stakes[userids[i]] */\n      0x00\n        /* \"Staking/staking.sol\":8671:8678  userids */\n      dup5\n        /* \"Staking/staking.sol\":8679:8680  i */\n      dup5\n        /* \"Staking/staking.sol\":8671:8681  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_139\n      tag_114\n      jump\t// in\n    tag_139:\n    tag_138:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":8664:8682  stakes[userids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":8664:8690  stakes[userids[i]].expired */\n      0x03\n      add\n      0x00\n        /* \"Staking/staking.sol\":8664:8697  stakes[userids[i]].expired = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":8483:8778  if (!stakes[userids[i]].expired) {... */\n    tag_127:\n        /* \"Staking/staking.sol\":8464:8467  i++ */\n      dup1\n      dup1\n      tag_140\n      swap1\n      tag_101\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":8424:8788  for (uint256 i = 0; i < userids.length; i++) {... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"Staking/staking.sol\":8165:8794  {... */\n      pop\n        /* \"Staking/staking.sol\":8123:8794  function claimAmount(address user) public {... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":5647:5758  function contractBalance() public view returns (uint256) {... */\n    tag_47:\n        /* \"Staking/staking.sol\":5695:5702  uint256 */\n      0x00\n        /* \"Staking/staking.sol\":5721:5726  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":5721:5736  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking/staking.sol\":5745:5749  this */\n      address\n        /* \"Staking/staking.sol\":5721:5751  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"Staking/staking.sol\":5714:5751  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":5647:5758  function contractBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking/staking.sol\":894:914  address public owner */\n    tag_50:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":1152:1199  mapping(uint256 => address) public stakingOwner */\n    tag_55:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":921:948  uint256 public interest = 1 */\n    tag_58:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":3760:4685  function IdsAndDetails(address ad) public view returns (uint256[] memory, StakingInfo[] memory) {... */\n    tag_62:\n        /* \"Staking/staking.sol\":3816:3832  uint256[] memory */\n      0x60\n        /* \"Staking/staking.sol\":3834:3854  StakingInfo[] memory */\n      dup1\n        /* \"Staking/staking.sol\":3930:3943  uint256 count */\n      0x00\n        /* \"Staking/staking.sol\":3962:3971  uint256 i */\n      dup1\n        /* \"Staking/staking.sol\":3957:4104  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n    tag_148:\n        /* \"Staking/staking.sol\":3982:4006  StakeIdCounter.current() */\n      tag_151\n        /* \"Staking/staking.sol\":3982:3996  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3982:4004  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3982:4006  StakeIdCounter.current() */\n      jump\t// in\n    tag_151:\n        /* \"Staking/staking.sol\":3977:3978  i */\n      dup2\n        /* \"Staking/staking.sol\":3977:4006  i <= StakeIdCounter.current() */\n      gt\n        /* \"Staking/staking.sol\":3957:4104  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      tag_149\n      jumpi\n        /* \"Staking/staking.sol\":4050:4052  ad */\n      dup5\n        /* \"Staking/staking.sol\":4031:4052  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":4031:4043  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":4031:4046  stakingOwner[i] */\n      0x00\n        /* \"Staking/staking.sol\":4044:4045  i */\n      dup4\n        /* \"Staking/staking.sol\":4031:4046  stakingOwner[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":4031:4052  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking/staking.sol\":4027:4094  if (stakingOwner[i] == ad) {... */\n      tag_152\n      jumpi\n        /* \"Staking/staking.sol\":4072:4079  count++ */\n      dup2\n      dup1\n      tag_153\n      swap1\n      tag_101\n      jump\t// in\n    tag_153:\n      swap3\n      pop\n      pop\n        /* \"Staking/staking.sol\":4027:4094  if (stakingOwner[i] == ad) {... */\n    tag_152:\n        /* \"Staking/staking.sol\":4008:4011  i++ */\n      dup1\n      dup1\n      tag_154\n      swap1\n      tag_101\n      jump\t// in\n    tag_154:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":3957:4104  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      jump(tag_148)\n    tag_149:\n      pop\n        /* \"Staking/staking.sol\":4183:4216  StakingInfo[] memory stakingInfos */\n      0x00\n        /* \"Staking/staking.sol\":4237:4242  count */\n      dup2\n        /* \"Staking/staking.sol\":4219:4243  new StakingInfo[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      tag_156\n      tag_105\n      jump\t// in\n    tag_156:\n    tag_155:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup2\n      0x20\n      add\n    tag_158:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_158\n      jumpi\n      swap1\n      pop\n    tag_157:\n      pop\n        /* \"Staking/staking.sol\":4183:4243  StakingInfo[] memory stakingInfos = new StakingInfo[](count) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":4253:4277  uint256[] memory userids */\n      0x00\n        /* \"Staking/staking.sol\":4294:4299  count */\n      dup3\n        /* \"Staking/staking.sol\":4280:4300  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_161\n      jumpi\n      tag_162\n      tag_105\n      jump\t// in\n    tag_162:\n    tag_161:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"Staking/staking.sol\":4253:4300  uint256[] memory userids = new uint256[](count) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":4310:4323  uint256 index */\n      0x00\n        /* \"Staking/staking.sol\":4342:4351  uint256 i */\n      dup1\n        /* \"Staking/staking.sol\":4337:4639  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n    tag_164:\n        /* \"Staking/staking.sol\":4362:4386  StakeIdCounter.current() */\n      tag_167\n        /* \"Staking/staking.sol\":4362:4376  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":4362:4384  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":4362:4386  StakeIdCounter.current() */\n      jump\t// in\n    tag_167:\n        /* \"Staking/staking.sol\":4357:4358  i */\n      dup2\n        /* \"Staking/staking.sol\":4357:4386  i <= StakeIdCounter.current() */\n      gt\n        /* \"Staking/staking.sol\":4337:4639  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      tag_165\n      jumpi\n        /* \"Staking/staking.sol\":4430:4432  ad */\n      dup8\n        /* \"Staking/staking.sol\":4411:4432  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":4411:4423  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":4411:4426  stakingOwner[i] */\n      0x00\n        /* \"Staking/staking.sol\":4424:4425  i */\n      dup4\n        /* \"Staking/staking.sol\":4411:4426  stakingOwner[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":4411:4432  stakingOwner[i] == ad */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking/staking.sol\":4407:4559  if (stakingOwner[i] == ad) {... */\n      tag_168\n      jumpi\n        /* \"Staking/staking.sol\":4474:4480  stakes */\n      0x06\n        /* \"Staking/staking.sol\":4474:4483  stakes[i] */\n      0x00\n        /* \"Staking/staking.sol\":4481:4482  i */\n      dup3\n        /* \"Staking/staking.sol\":4474:4483  stakes[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":4452:4483  stakingInfos[index] = stakes[i] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Staking/staking.sol\":4452:4464  stakingInfos */\n      dup5\n        /* \"Staking/staking.sol\":4465:4470  index */\n      dup4\n        /* \"Staking/staking.sol\":4452:4471  stakingInfos[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_169\n      jumpi\n      tag_170\n      tag_114\n      jump\t// in\n    tag_170:\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Staking/staking.sol\":4452:4483  stakingInfos[index] = stakes[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Staking/staking.sol\":4518:4519  i */\n      dup1\n        /* \"Staking/staking.sol\":4501:4508  userids */\n      dup4\n        /* \"Staking/staking.sol\":4509:4514  index */\n      dup4\n        /* \"Staking/staking.sol\":4501:4515  userids[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_114\n      jump\t// in\n    tag_172:\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Staking/staking.sol\":4501:4519  userids[index] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Staking/staking.sol\":4537:4544  index++ */\n      dup2\n      dup1\n      tag_173\n      swap1\n      tag_101\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n        /* \"Staking/staking.sol\":4407:4559  if (stakingOwner[i] == ad) {... */\n    tag_168:\n        /* \"Staking/staking.sol\":4584:4589  count */\n      dup5\n        /* \"Staking/staking.sol\":4576:4581  index */\n      dup3\n        /* \"Staking/staking.sol\":4576:4589  index > count */\n      gt\n        /* \"Staking/staking.sol\":4609:4614  break */\n      tag_165\n        /* \"Staking/staking.sol\":4572:4629  if (index > count) {... */\n      jumpi\n        /* \"Staking/staking.sol\":4388:4391  i++ */\n      dup1\n      dup1\n      tag_175\n      swap1\n      tag_101\n      jump\t// in\n    tag_175:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":4337:4639  for (uint256 i = 0; i <= StakeIdCounter.current(); i++) {... */\n      jump(tag_164)\n    tag_165:\n      pop\n        /* \"Staking/staking.sol\":4656:4663  userids */\n      dup2\n        /* \"Staking/staking.sol\":4665:4677  stakingInfos */\n      dup4\n        /* \"Staking/staking.sol\":4648:4678  return (userids, stakingInfos) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/staking.sol\":3760:4685  function IdsAndDetails(address ad) public view returns (uint256[] memory, StakingInfo[] memory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Staking/staking.sol\":2107:3667  function Stake(uint256 _numTokens, uint256 tarrif) external returns (uint256) {... */\n    tag_68:\n        /* \"Staking/staking.sol\":2176:2183  uint256 */\n      0x00\n        /* \"Staking/staking.sol\":2375:2401  StakeIdCounter.increment() */\n      tag_177\n        /* \"Staking/staking.sol\":2375:2389  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":2375:2399  StakeIdCounter.increment */\n      tag_178\n        /* \"Staking/staking.sol\":2375:2401  StakeIdCounter.increment() */\n      jump\t// in\n    tag_177:\n        /* \"Staking/staking.sol\":2497:2498  0 */\n      0x00\n        /* \"Staking/staking.sol\":2484:2494  _numTokens */\n      dup4\n        /* \"Staking/staking.sol\":2484:2498  _numTokens > 0 */\n      gt\n        /* \"Staking/staking.sol\":2476:2535  require(_numTokens > 0, \"Must stake more than zero tokens\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"Staking/staking.sol\":2584:2594  _numTokens */\n      dup3\n        /* \"Staking/staking.sol\":2553:2558  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":2553:2568  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking/staking.sol\":2569:2579  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2553:2580  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_185:\n        /* \"Staking/staking.sol\":2553:2594  token.balanceOf(msg.sender) >= _numTokens */\n      lt\n      iszero\n        /* \"Staking/staking.sol\":2545:2633  require(token.balanceOf(msg.sender) >= _numTokens, \"Not Enough Balance Tokens To Stake\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"Staking/staking.sol\":2661:2662  2 */\n      0x02\n        /* \"Staking/staking.sol\":2651:2657  tarrif */\n      dup3\n        /* \"Staking/staking.sol\":2651:2662  tarrif == 2 */\n      eq\n        /* \"Staking/staking.sol\":2651:2693  tarrif == 2 ||... */\n      dup1\n      tag_189\n      jumpi\n      pop\n        /* \"Staking/staking.sol\":2692:2693  4 */\n      0x04\n        /* \"Staking/staking.sol\":2682:2688  tarrif */\n      dup3\n        /* \"Staking/staking.sol\":2682:2693  tarrif == 4 */\n      eq\n        /* \"Staking/staking.sol\":2651:2693  tarrif == 2 ||... */\n    tag_189:\n        /* \"Staking/staking.sol\":2651:2725  tarrif == 2 ||... */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"Staking/staking.sol\":2724:2725  6 */\n      0x06\n        /* \"Staking/staking.sol\":2714:2720  tarrif */\n      dup3\n        /* \"Staking/staking.sol\":2714:2725  tarrif == 6 */\n      eq\n        /* \"Staking/staking.sol\":2651:2725  tarrif == 2 ||... */\n    tag_190:\n        /* \"Staking/staking.sol\":2651:2757  tarrif == 2 ||... */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"Staking/staking.sol\":2756:2757  8 */\n      0x08\n        /* \"Staking/staking.sol\":2746:2752  tarrif */\n      dup3\n        /* \"Staking/staking.sol\":2746:2757  tarrif == 8 */\n      eq\n        /* \"Staking/staking.sol\":2651:2757  tarrif == 2 ||... */\n    tag_191:\n        /* \"Staking/staking.sol\":2651:2790  tarrif == 2 ||... */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"Staking/staking.sol\":2788:2790  10 */\n      0x0a\n        /* \"Staking/staking.sol\":2778:2784  tarrif */\n      dup3\n        /* \"Staking/staking.sol\":2778:2790  tarrif == 10 */\n      eq\n        /* \"Staking/staking.sol\":2651:2790  tarrif == 2 ||... */\n    tag_192:\n        /* \"Staking/staking.sol\":2643:2847  require(tarrif == 2 ||... */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"Staking/staking.sol\":2910:2932  uint256 current_tarrif */\n      0x00\n        /* \"Staking/staking.sol\":2935:2950  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":2910:2950  uint256 current_tarrif = block.timestamp */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":3001:3011  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2960:2972  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":2960:2998  stakingOwner[StakeIdCounter.current()] */\n      0x00\n        /* \"Staking/staking.sol\":2973:2997  StakeIdCounter.current() */\n      tag_196\n        /* \"Staking/staking.sol\":2973:2987  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":2973:2995  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":2973:2997  StakeIdCounter.current() */\n      jump\t// in\n    tag_196:\n        /* \"Staking/staking.sol\":2960:2998  stakingOwner[StakeIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking/staking.sol\":2960:3011  stakingOwner[StakeIdCounter.current()] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":3029:3034  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":3029:3047  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Staking/staking.sol\":3048:3058  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":3068:3072  this */\n      address\n        /* \"Staking/staking.sol\":3075:3085  _numTokens */\n      dup8\n        /* \"Staking/staking.sol\":3029:3086  token.transferFrom(msg.sender, address(this), _numTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_201:\n        /* \"Staking/staking.sol\":3021:3126  require(token.transferFrom(msg.sender, address(this), _numTokens), \"Give approval from initial to stake\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"Staking/staking.sol\":3185:3195  _numTokens */\n      dup4\n        /* \"Staking/staking.sol\":3136:3142  stakes */\n      0x06\n        /* \"Staking/staking.sol\":3136:3168  stakes[StakeIdCounter.current()] */\n      0x00\n        /* \"Staking/staking.sol\":3143:3167  StakeIdCounter.current() */\n      tag_205\n        /* \"Staking/staking.sol\":3143:3157  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3143:3165  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3143:3167  StakeIdCounter.current() */\n      jump\t// in\n    tag_205:\n        /* \"Staking/staking.sol\":3136:3168  stakes[StakeIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":3136:3181  stakes[StakeIdCounter.current()].StakedAmount */\n      0x00\n      add\n      0x00\n        /* \"Staking/staking.sol\":3136:3195  stakes[StakeIdCounter.current()].StakedAmount += _numTokens */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":3251:3265  current_tarrif */\n      dup1\n        /* \"Staking/staking.sol\":3205:3211  stakes */\n      0x06\n        /* \"Staking/staking.sol\":3205:3237  stakes[StakeIdCounter.current()] */\n      0x00\n        /* \"Staking/staking.sol\":3212:3236  StakeIdCounter.current() */\n      tag_208\n        /* \"Staking/staking.sol\":3212:3226  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3212:3234  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3212:3236  StakeIdCounter.current() */\n      jump\t// in\n    tag_208:\n        /* \"Staking/staking.sol\":3205:3237  stakes[StakeIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":3205:3248  stakes[StakeIdCounter.current()].StakedTime */\n      0x01\n      add\n        /* \"Staking/staking.sol\":3205:3265  stakes[StakeIdCounter.current()].StakedTime = current_tarrif */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":3449:3451  60 */\n      0x3c\n        /* \"Staking/staking.sol\":3440:3446  tarrif */\n      dup4\n        /* \"Staking/staking.sol\":3440:3451  tarrif * 60 */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"Staking/staking.sol\":3396:3402  stakes */\n      0x06\n        /* \"Staking/staking.sol\":3396:3428  stakes[StakeIdCounter.current()] */\n      0x00\n        /* \"Staking/staking.sol\":3403:3427  StakeIdCounter.current() */\n      tag_211\n        /* \"Staking/staking.sol\":3403:3417  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3403:3425  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3403:3427  StakeIdCounter.current() */\n      jump\t// in\n    tag_211:\n        /* \"Staking/staking.sol\":3396:3428  stakes[StakeIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":3396:3437  stakes[StakeIdCounter.current()].duration */\n      0x02\n      add\n        /* \"Staking/staking.sol\":3396:3451  stakes[StakeIdCounter.current()].duration = tarrif * 60 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":3613:3618  false */\n      0x00\n        /* \"Staking/staking.sol\":3570:3576  stakes */\n      0x06\n        /* \"Staking/staking.sol\":3570:3602  stakes[StakeIdCounter.current()] */\n      0x00\n        /* \"Staking/staking.sol\":3577:3601  StakeIdCounter.current() */\n      tag_212\n        /* \"Staking/staking.sol\":3577:3591  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3577:3599  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3577:3601  StakeIdCounter.current() */\n      jump\t// in\n    tag_212:\n        /* \"Staking/staking.sol\":3570:3602  stakes[StakeIdCounter.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":3570:3610  stakes[StakeIdCounter.current()].expired */\n      0x03\n      add\n      0x00\n        /* \"Staking/staking.sol\":3570:3618  stakes[StakeIdCounter.current()].expired = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":3636:3660  StakeIdCounter.current() */\n      tag_213\n        /* \"Staking/staking.sol\":3636:3650  StakeIdCounter */\n      0x00\n        /* \"Staking/staking.sol\":3636:3658  StakeIdCounter.current */\n      tag_98\n        /* \"Staking/staking.sol\":3636:3660  StakeIdCounter.current() */\n      jump\t// in\n    tag_213:\n        /* \"Staking/staking.sol\":3629:3660  return StakeIdCounter.current() */\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":2107:3667  function Stake(uint256 _numTokens, uint256 tarrif) external returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":7257:8065  function claimReward(address user) public {... */\n    tag_72:\n        /* \"Staking/staking.sol\":7411:7414  120 */\n      0x78\n        /* \"Staking/staking.sol\":7394:7409  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":7374:7393  lastRewardClaimTime */\n      sload(0x04)\n        /* \"Staking/staking.sol\":7374:7409  lastRewardClaimTime-block.timestamp */\n      tag_215\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_215:\n        /* \"Staking/staking.sol\":7373:7414  (lastRewardClaimTime-block.timestamp)>120 */\n      gt\n        /* \"Staking/staking.sol\":7365:7431  require((lastRewardClaimTime-block.timestamp)>120,\"Cooldown Time\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"Staking/staking.sol\":7461:7476  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":7441:7460  lastRewardClaimTime */\n      0x04\n        /* \"Staking/staking.sol\":7441:7476  lastRewardClaimTime=block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":7486:7510  uint256[] memory userids */\n      0x00\n        /* \"Staking/staking.sol\":7513:7525  getIds(user) */\n      tag_219\n        /* \"Staking/staking.sol\":7520:7524  user */\n      dup3\n        /* \"Staking/staking.sol\":7513:7519  getIds */\n      tag_40\n        /* \"Staking/staking.sol\":7513:7525  getIds(user) */\n      jump\t// in\n    tag_219:\n        /* \"Staking/staking.sol\":7486:7525  uint256[] memory userids = getIds(user) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":7560:7561  0 */\n      0x00\n        /* \"Staking/staking.sol\":7543:7550  userids */\n      dup2\n        /* \"Staking/staking.sol\":7543:7557  userids.length */\n      mload\n        /* \"Staking/staking.sol\":7543:7561  userids.length > 0 */\n      gt\n        /* \"Staking/staking.sol\":7535:7595  require(userids.length > 0, \"You haven't staked any amount\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"Staking/staking.sol\":7687:7696  uint256 i */\n      0x00\n        /* \"Staking/staking.sol\":7682:7842  for (uint256 i = 0; i < userids.length; i++) {... */\n    tag_223:\n        /* \"Staking/staking.sol\":7706:7713  userids */\n      dup2\n        /* \"Staking/staking.sol\":7706:7720  userids.length */\n      mload\n        /* \"Staking/staking.sol\":7702:7703  i */\n      dup2\n        /* \"Staking/staking.sol\":7702:7720  i < userids.length */\n      lt\n        /* \"Staking/staking.sol\":7682:7842  for (uint256 i = 0; i < userids.length; i++) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"Staking/staking.sol\":7746:7752  stakes */\n      0x06\n        /* \"Staking/staking.sol\":7746:7764  stakes[userids[i]] */\n      0x00\n        /* \"Staking/staking.sol\":7753:7760  userids */\n      dup4\n        /* \"Staking/staking.sol\":7761:7762  i */\n      dup4\n        /* \"Staking/staking.sol\":7753:7763  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_114\n      jump\t// in\n    tag_227:\n    tag_226:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":7746:7764  stakes[userids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":7746:7772  stakes[userids[i]].expired */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking/staking.sol\":7741:7832  if (!stakes[userids[i]].expired) {... */\n      tag_228\n      jumpi\n        /* \"Staking/staking.sol\":7792:7817  genrateReward(userids[i]) */\n      tag_229\n        /* \"Staking/staking.sol\":7806:7813  userids */\n      dup3\n        /* \"Staking/staking.sol\":7814:7815  i */\n      dup3\n        /* \"Staking/staking.sol\":7806:7816  userids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_114\n      jump\t// in\n    tag_231:\n    tag_230:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Staking/staking.sol\":7792:7805  genrateReward */\n      tag_83\n        /* \"Staking/staking.sol\":7792:7817  genrateReward(userids[i]) */\n      jump\t// in\n    tag_229:\n        /* \"Staking/staking.sol\":7741:7832  if (!stakes[userids[i]].expired) {... */\n    tag_228:\n        /* \"Staking/staking.sol\":7722:7725  i++ */\n      dup1\n      dup1\n      tag_232\n      swap1\n      tag_101\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n      pop\n        /* \"Staking/staking.sol\":7682:7842  for (uint256 i = 0; i < userids.length; i++) {... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"Staking/staking.sol\":7956:7957  0 */\n      0x00\n        /* \"Staking/staking.sol\":7940:7947  rewards */\n      0x07\n        /* \"Staking/staking.sol\":7940:7953  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":7948:7952  user */\n      dup5\n        /* \"Staking/staking.sol\":7940:7953  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":7940:7957  rewards[user] > 0 */\n      gt\n        /* \"Staking/staking.sol\":7932:7980  require(rewards[user] > 0, \"No reward to claim\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"Staking/staking.sol\":7990:7995  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":7990:8004  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/staking.sol\":8005:8015  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":8017:8024  rewards */\n      0x07\n        /* \"Staking/staking.sol\":8017:8030  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":8025:8029  user */\n      dup7\n        /* \"Staking/staking.sol\":8017:8030  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":7990:8031  token.transfer(msg.sender, rewards[user]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_239:\n      pop\n        /* \"Staking/staking.sol\":8057:8058  0 */\n      0x00\n        /* \"Staking/staking.sol\":8041:8048  rewards */\n      0x07\n        /* \"Staking/staking.sol\":8041:8054  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":8049:8053  user */\n      dup5\n        /* \"Staking/staking.sol\":8041:8054  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":8041:8058  rewards[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":7299:8065  {... */\n      pop\n        /* \"Staking/staking.sol\":7257:8065  function claimReward(address user) public {... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":1228:1273  mapping(uint256 => StakingInfo) public stakes */\n    tag_75:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Staking/staking.sol\":5842:5934  function CurrentTime() public view returns (uint256) {... */\n    tag_79:\n        /* \"Staking/staking.sol\":5886:5893  uint256 */\n      0x00\n        /* \"Staking/staking.sol\":5912:5927  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":5905:5927  return block.timestamp */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":5842:5934  function CurrentTime() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking/staking.sol\":6366:6909  function genrateReward(uint256 id) public {... */\n    tag_83:\n        /* \"Staking/staking.sol\":6418:6438  uint256 current_time */\n      0x00\n        /* \"Staking/staking.sol\":6441:6456  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":6418:6456  uint256 current_time = block.timestamp */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":6466:6489  uint256 stakingDuration */\n      0x00\n        /* \"Staking/staking.sol\":6507:6513  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6507:6517  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6514:6516  id */\n      dup5\n        /* \"Staking/staking.sol\":6507:6517  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6507:6528  stakes[id].StakedTime */\n      0x01\n      add\n      sload\n        /* \"Staking/staking.sol\":6492:6504  current_time */\n      dup3\n        /* \"Staking/staking.sol\":6492:6528  current_time - stakes[id].StakedTime */\n      tag_242\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_242:\n        /* \"Staking/staking.sol\":6466:6528  uint256 stakingDuration = current_time - stakes[id].StakedTime */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":6538:6550  uint256 time */\n      0x00\n        /* \"Staking/staking.sol\":6553:6594  min(stakingDuration, stakes[id].duration) */\n      tag_243\n        /* \"Staking/staking.sol\":6557:6572  stakingDuration */\n      dup3\n        /* \"Staking/staking.sol\":6574:6580  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6574:6584  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6581:6583  id */\n      dup8\n        /* \"Staking/staking.sol\":6574:6584  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6574:6593  stakes[id].duration */\n      0x02\n      add\n      sload\n        /* \"Staking/staking.sol\":6553:6556  min */\n      tag_244\n        /* \"Staking/staking.sol\":6553:6594  min(stakingDuration, stakes[id].duration) */\n      jump\t// in\n    tag_243:\n        /* \"Staking/staking.sol\":6538:6594  uint256 time = min(stakingDuration, stakes[id].duration) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":6795:6798  100 */\n      0x64\n        /* \"Staking/staking.sol\":6787:6791  time */\n      dup2\n        /* \"Staking/staking.sol\":6776:6784  interest */\n      sload(0x03)\n        /* \"Staking/staking.sol\":6750:6756  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6750:6760  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6757:6759  id */\n      dup9\n        /* \"Staking/staking.sol\":6750:6760  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6750:6773  stakes[id].StakedAmount */\n      0x00\n      add\n      sload\n        /* \"Staking/staking.sol\":6750:6784  stakes[id].StakedAmount * interest */\n      tag_245\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_245:\n        /* \"Staking/staking.sol\":6750:6791  stakes[id].StakedAmount * interest * time */\n      tag_246\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_246:\n        /* \"Staking/staking.sol\":6749:6798  (stakes[id].StakedAmount * interest * time) / 100 */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"Staking/staking.sol\":6721:6728  rewards */\n      0x07\n        /* \"Staking/staking.sol\":6721:6746  rewards[stakingOwner[id]] */\n      0x00\n        /* \"Staking/staking.sol\":6729:6741  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":6729:6745  stakingOwner[id] */\n      0x00\n        /* \"Staking/staking.sol\":6742:6744  id */\n      dup9\n        /* \"Staking/staking.sol\":6729:6745  stakingOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":6721:6746  rewards[stakingOwner[id]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":6721:6798  rewards[stakingOwner[id]] + (stakes[id].StakedAmount * interest * time) / 100 */\n      tag_249\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_249:\n        /* \"Staking/staking.sol\":6693:6700  rewards */\n      0x07\n        /* \"Staking/staking.sol\":6693:6718  rewards[stakingOwner[id]] */\n      0x00\n        /* \"Staking/staking.sol\":6701:6713  stakingOwner */\n      0x05\n        /* \"Staking/staking.sol\":6701:6717  stakingOwner[id] */\n      0x00\n        /* \"Staking/staking.sol\":6714:6716  id */\n      dup9\n        /* \"Staking/staking.sol\":6701:6717  stakingOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":6693:6718  rewards[stakingOwner[id]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6693:6798  rewards[stakingOwner[id]] = rewards[stakingOwner[id]] + (stakes[id].StakedAmount * interest * time) / 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":6832:6844  current_time */\n      dup3\n        /* \"Staking/staking.sol\":6808:6814  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6808:6818  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6815:6817  id */\n      dup7\n        /* \"Staking/staking.sol\":6808:6818  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6808:6829  stakes[id].StakedTime */\n      0x01\n      add\n        /* \"Staking/staking.sol\":6808:6844  stakes[id].StakedTime = current_time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":6898:6902  time */\n      dup1\n        /* \"Staking/staking.sol\":6876:6882  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6876:6886  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6883:6885  id */\n      dup7\n        /* \"Staking/staking.sol\":6876:6886  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6876:6895  stakes[id].duration */\n      0x02\n      add\n      sload\n        /* \"Staking/staking.sol\":6876:6902  stakes[id].duration - time */\n      tag_250\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_250:\n        /* \"Staking/staking.sol\":6854:6860  stakes */\n      0x06\n        /* \"Staking/staking.sol\":6854:6864  stakes[id] */\n      0x00\n        /* \"Staking/staking.sol\":6861:6863  id */\n      dup7\n        /* \"Staking/staking.sol\":6854:6864  stakes[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":6854:6873  stakes[id].duration */\n      0x02\n      add\n        /* \"Staking/staking.sol\":6854:6902  stakes[id].duration = stakes[id].duration - time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":6408:6909  {... */\n      pop\n      pop\n      pop\n        /* \"Staking/staking.sol\":6366:6909  function genrateReward(uint256 id) public {... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":869:888  IERC20 public token */\n    tag_85:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":6030:6134  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_244:\n        /* \"Staking/staking.sol\":6088:6095  uint256 */\n      0x00\n        /* \"Staking/staking.sol\":6118:6119  b */\n      dup2\n        /* \"Staking/staking.sol\":6114:6115  a */\n      dup4\n        /* \"Staking/staking.sol\":6114:6119  a < b */\n      lt\n        /* \"Staking/staking.sol\":6114:6127  a < b ? a : b */\n      tag_254\n      jumpi\n        /* \"Staking/staking.sol\":6126:6127  b */\n      dup2\n        /* \"Staking/staking.sol\":6114:6127  a < b ? a : b */\n      jump(tag_255)\n    tag_254:\n        /* \"Staking/staking.sol\":6122:6123  a */\n      dup3\n        /* \"Staking/staking.sol\":6114:6127  a < b ? a : b */\n    tag_255:\n        /* \"Staking/staking.sol\":6107:6127  return a < b ? a : b */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":6030:6134  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_160:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_257:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_259:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_260:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_318\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_259\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_261:\n        /* \"#utility.yul\":641:665   */\n      tag_320\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_260\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_321:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_262:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_323\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_261\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_24:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_326\n      tag_257\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":917:1036   */\n    tag_325:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_327\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_263:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_264:\n        /* \"#utility.yul\":1353:1374   */\n      tag_330\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_27:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_332\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_264\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1680   */\n    tag_265:\n        /* \"#utility.yul\":1640:1647   */\n      0x00\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1658:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_266:\n        /* \"#utility.yul\":1773:1797   */\n      tag_335\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_265\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2032   */\n    tag_32:\n        /* \"#utility.yul\":1903:1907   */\n      0x00\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"#utility.yul\":1918:1944   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2025   */\n      tag_337\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1954:2025   */\n      tag_266\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1810:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2160   */\n    tag_267:\n        /* \"#utility.yul\":2111:2135   */\n      tag_339\n        /* \"#utility.yul\":2129:2134   */\n      dup2\n        /* \"#utility.yul\":2111:2135   */\n      tag_265\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2104:2109   */\n      dup2\n        /* \"#utility.yul\":2101:2136   */\n      eq\n        /* \"#utility.yul\":2091:2154   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2150:2151   */\n      0x00\n        /* \"#utility.yul\":2147:2148   */\n      dup1\n        /* \"#utility.yul\":2140:2152   */\n      revert\n        /* \"#utility.yul\":2091:2154   */\n    tag_340:\n        /* \"#utility.yul\":2038:2160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2305   */\n    tag_268:\n        /* \"#utility.yul\":2212:2217   */\n      0x00\n        /* \"#utility.yul\":2250:2256   */\n      dup2\n        /* \"#utility.yul\":2237:2257   */\n      calldataload\n        /* \"#utility.yul\":2228:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":2266:2299   */\n      tag_342\n        /* \"#utility.yul\":2293:2298   */\n      dup2\n        /* \"#utility.yul\":2266:2299   */\n      tag_267\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2166:2305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2311:2640   */\n    tag_35:\n        /* \"#utility.yul\":2370:2376   */\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2398:2405   */\n      dup5\n        /* \"#utility.yul\":2394:2417   */\n      sub\n        /* \"#utility.yul\":2390:2422   */\n      slt\n        /* \"#utility.yul\":2387:2506   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2425:2504   */\n      tag_345\n      tag_257\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2387:2506   */\n    tag_344:\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2570:2623   */\n      tag_346\n        /* \"#utility.yul\":2615:2622   */\n      dup5\n        /* \"#utility.yul\":2606:2612   */\n      dup3\n        /* \"#utility.yul\":2595:2604   */\n      dup6\n        /* \"#utility.yul\":2591:2613   */\n      add\n        /* \"#utility.yul\":2570:2623   */\n      tag_268\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2560:2623   */\n      swap2\n      pop\n        /* \"#utility.yul\":2516:2633   */\n      pop\n        /* \"#utility.yul\":2311:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2760   */\n    tag_269:\n        /* \"#utility.yul\":2713:2719   */\n      0x00\n        /* \"#utility.yul\":2747:2752   */\n      dup2\n        /* \"#utility.yul\":2741:2753   */\n      mload\n        /* \"#utility.yul\":2731:2753   */\n      swap1\n      pop\n        /* \"#utility.yul\":2646:2760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2766:2950   */\n    tag_270:\n        /* \"#utility.yul\":2865:2876   */\n      0x00\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2894:2897   */\n      dup3\n        /* \"#utility.yul\":2887:2906   */\n      mstore\n        /* \"#utility.yul\":2939:2943   */\n      0x20\n        /* \"#utility.yul\":2934:2937   */\n      dup3\n        /* \"#utility.yul\":2930:2944   */\n      add\n        /* \"#utility.yul\":2915:2944   */\n      swap1\n      pop\n        /* \"#utility.yul\":2766:2950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2956:3088   */\n    tag_271:\n        /* \"#utility.yul\":3023:3027   */\n      0x00\n        /* \"#utility.yul\":3046:3049   */\n      dup2\n        /* \"#utility.yul\":3038:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3076:3080   */\n      0x20\n        /* \"#utility.yul\":3071:3074   */\n      dup3\n        /* \"#utility.yul\":3067:3081   */\n      add\n        /* \"#utility.yul\":3059:3081   */\n      swap1\n      pop\n        /* \"#utility.yul\":2956:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3202   */\n    tag_272:\n        /* \"#utility.yul\":3171:3195   */\n      tag_351\n        /* \"#utility.yul\":3189:3194   */\n      dup2\n        /* \"#utility.yul\":3171:3195   */\n      tag_265\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3166:3169   */\n      dup3\n        /* \"#utility.yul\":3159:3196   */\n      mstore\n        /* \"#utility.yul\":3094:3202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3387   */\n    tag_273:\n        /* \"#utility.yul\":3277:3287   */\n      0x00\n        /* \"#utility.yul\":3298:3344   */\n      tag_353\n        /* \"#utility.yul\":3340:3343   */\n      dup4\n        /* \"#utility.yul\":3332:3338   */\n      dup4\n        /* \"#utility.yul\":3298:3344   */\n      tag_272\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3376:3380   */\n      0x20\n        /* \"#utility.yul\":3371:3374   */\n      dup4\n        /* \"#utility.yul\":3367:3381   */\n      add\n        /* \"#utility.yul\":3353:3381   */\n      swap1\n      pop\n        /* \"#utility.yul\":3208:3387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3393:3506   */\n    tag_274:\n        /* \"#utility.yul\":3463:3467   */\n      0x00\n        /* \"#utility.yul\":3495:3499   */\n      0x20\n        /* \"#utility.yul\":3490:3493   */\n      dup3\n        /* \"#utility.yul\":3486:3500   */\n      add\n        /* \"#utility.yul\":3478:3500   */\n      swap1\n      pop\n        /* \"#utility.yul\":3393:3506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3542:4274   */\n    tag_275:\n        /* \"#utility.yul\":3661:3664   */\n      0x00\n        /* \"#utility.yul\":3690:3744   */\n      tag_356\n        /* \"#utility.yul\":3738:3743   */\n      dup3\n        /* \"#utility.yul\":3690:3744   */\n      tag_269\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3760:3846   */\n      tag_357\n        /* \"#utility.yul\":3839:3845   */\n      dup2\n        /* \"#utility.yul\":3834:3837   */\n      dup6\n        /* \"#utility.yul\":3760:3846   */\n      tag_270\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3753:3846   */\n      swap4\n      pop\n        /* \"#utility.yul\":3870:3926   */\n      tag_358\n        /* \"#utility.yul\":3920:3925   */\n      dup4\n        /* \"#utility.yul\":3870:3926   */\n      tag_271\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3949:3956   */\n      dup1\n        /* \"#utility.yul\":3980:3981   */\n      0x00\n        /* \"#utility.yul\":3965:4249   */\n    tag_359:\n        /* \"#utility.yul\":3990:3996   */\n      dup4\n        /* \"#utility.yul\":3987:3988   */\n      dup2\n        /* \"#utility.yul\":3984:3997   */\n      lt\n        /* \"#utility.yul\":3965:4249   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4066:4072   */\n      dup2\n        /* \"#utility.yul\":4060:4073   */\n      mload\n        /* \"#utility.yul\":4093:4156   */\n      tag_362\n        /* \"#utility.yul\":4152:4155   */\n      dup9\n        /* \"#utility.yul\":4137:4150   */\n      dup3\n        /* \"#utility.yul\":4093:4156   */\n      tag_273\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4086:4156   */\n      swap8\n      pop\n        /* \"#utility.yul\":4179:4239   */\n      tag_363\n        /* \"#utility.yul\":4232:4238   */\n      dup4\n        /* \"#utility.yul\":4179:4239   */\n      tag_274\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4169:4239   */\n      swap3\n      pop\n        /* \"#utility.yul\":4025:4249   */\n      pop\n        /* \"#utility.yul\":4012:4013   */\n      0x01\n        /* \"#utility.yul\":4009:4010   */\n      dup2\n        /* \"#utility.yul\":4005:4014   */\n      add\n        /* \"#utility.yul\":4000:4014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3965:4249   */\n      jump(tag_359)\n    tag_361:\n        /* \"#utility.yul\":3969:3983   */\n      pop\n        /* \"#utility.yul\":4265:4268   */\n      dup6\n        /* \"#utility.yul\":4258:4268   */\n      swap4\n      pop\n        /* \"#utility.yul\":3666:4274   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3542:4274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4280:4653   */\n    tag_42:\n        /* \"#utility.yul\":4423:4427   */\n      0x00\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4450:4459   */\n      dup3\n        /* \"#utility.yul\":4446:4464   */\n      add\n        /* \"#utility.yul\":4438:4464   */\n      swap1\n      pop\n        /* \"#utility.yul\":4510:4519   */\n      dup2\n        /* \"#utility.yul\":4504:4508   */\n      dup2\n        /* \"#utility.yul\":4500:4520   */\n      sub\n        /* \"#utility.yul\":4496:4497   */\n      0x00\n        /* \"#utility.yul\":4485:4494   */\n      dup4\n        /* \"#utility.yul\":4481:4498   */\n      add\n        /* \"#utility.yul\":4474:4521   */\n      mstore\n        /* \"#utility.yul\":4538:4646   */\n      tag_365\n        /* \"#utility.yul\":4641:4645   */\n      dup2\n        /* \"#utility.yul\":4632:4638   */\n      dup5\n        /* \"#utility.yul\":4538:4646   */\n      tag_275\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4530:4646   */\n      swap1\n      pop\n        /* \"#utility.yul\":4280:4653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4659:4777   */\n    tag_276:\n        /* \"#utility.yul\":4746:4770   */\n      tag_367\n        /* \"#utility.yul\":4764:4769   */\n      dup2\n        /* \"#utility.yul\":4746:4770   */\n      tag_260\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4741:4744   */\n      dup3\n        /* \"#utility.yul\":4734:4771   */\n      mstore\n        /* \"#utility.yul\":4659:4777   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5005   */\n    tag_52:\n        /* \"#utility.yul\":4876:4880   */\n      0x00\n        /* \"#utility.yul\":4914:4916   */\n      0x20\n        /* \"#utility.yul\":4903:4912   */\n      dup3\n        /* \"#utility.yul\":4899:4917   */\n      add\n        /* \"#utility.yul\":4891:4917   */\n      swap1\n      pop\n        /* \"#utility.yul\":4927:4998   */\n      tag_369\n        /* \"#utility.yul\":4995:4996   */\n      0x00\n        /* \"#utility.yul\":4984:4993   */\n      dup4\n        /* \"#utility.yul\":4980:4997   */\n      add\n        /* \"#utility.yul\":4971:4977   */\n      dup5\n        /* \"#utility.yul\":4927:4998   */\n      tag_276\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4783:5005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5011:5153   */\n    tag_277:\n        /* \"#utility.yul\":5106:5112   */\n      0x00\n        /* \"#utility.yul\":5140:5145   */\n      dup2\n        /* \"#utility.yul\":5134:5146   */\n      mload\n        /* \"#utility.yul\":5124:5146   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5159:5371   */\n    tag_278:\n        /* \"#utility.yul\":5286:5297   */\n      0x00\n        /* \"#utility.yul\":5320:5326   */\n      dup3\n        /* \"#utility.yul\":5315:5318   */\n      dup3\n        /* \"#utility.yul\":5308:5327   */\n      mstore\n        /* \"#utility.yul\":5360:5364   */\n      0x20\n        /* \"#utility.yul\":5355:5358   */\n      dup3\n        /* \"#utility.yul\":5351:5365   */\n      add\n        /* \"#utility.yul\":5336:5365   */\n      swap1\n      pop\n        /* \"#utility.yul\":5159:5371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5377:5537   */\n    tag_279:\n        /* \"#utility.yul\":5472:5476   */\n      0x00\n        /* \"#utility.yul\":5495:5498   */\n      dup2\n        /* \"#utility.yul\":5487:5498   */\n      swap1\n      pop\n        /* \"#utility.yul\":5525:5529   */\n      0x20\n        /* \"#utility.yul\":5520:5523   */\n      dup3\n        /* \"#utility.yul\":5516:5530   */\n      add\n        /* \"#utility.yul\":5508:5530   */\n      swap1\n      pop\n        /* \"#utility.yul\":5377:5537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5543:5642   */\n    tag_280:\n        /* \"#utility.yul\":5614:5635   */\n      tag_374\n        /* \"#utility.yul\":5629:5634   */\n      dup2\n        /* \"#utility.yul\":5614:5635   */\n      tag_263\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5609:5612   */\n      dup3\n        /* \"#utility.yul\":5602:5636   */\n      mstore\n        /* \"#utility.yul\":5543:5642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5712:6578   */\n    tag_281:\n        /* \"#utility.yul\":5855:5859   */\n      0x80\n        /* \"#utility.yul\":5850:5853   */\n      dup3\n        /* \"#utility.yul\":5846:5860   */\n      add\n        /* \"#utility.yul\":5950:5954   */\n      0x00\n        /* \"#utility.yul\":5943:5948   */\n      dup3\n        /* \"#utility.yul\":5939:5955   */\n      add\n        /* \"#utility.yul\":5933:5956   */\n      mload\n        /* \"#utility.yul\":5969:6032   */\n      tag_376\n        /* \"#utility.yul\":6026:6030   */\n      0x00\n        /* \"#utility.yul\":6021:6024   */\n      dup6\n        /* \"#utility.yul\":6017:6031   */\n      add\n        /* \"#utility.yul\":6003:6015   */\n      dup3\n        /* \"#utility.yul\":5969:6032   */\n      tag_272\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5870:6042   */\n      pop\n        /* \"#utility.yul\":6130:6134   */\n      0x20\n        /* \"#utility.yul\":6123:6128   */\n      dup3\n        /* \"#utility.yul\":6119:6135   */\n      add\n        /* \"#utility.yul\":6113:6136   */\n      mload\n        /* \"#utility.yul\":6149:6212   */\n      tag_377\n        /* \"#utility.yul\":6206:6210   */\n      0x20\n        /* \"#utility.yul\":6201:6204   */\n      dup6\n        /* \"#utility.yul\":6197:6211   */\n      add\n        /* \"#utility.yul\":6183:6195   */\n      dup3\n        /* \"#utility.yul\":6149:6212   */\n      tag_272\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6052:6222   */\n      pop\n        /* \"#utility.yul\":6308:6312   */\n      0x40\n        /* \"#utility.yul\":6301:6306   */\n      dup3\n        /* \"#utility.yul\":6297:6313   */\n      add\n        /* \"#utility.yul\":6291:6314   */\n      mload\n        /* \"#utility.yul\":6327:6390   */\n      tag_378\n        /* \"#utility.yul\":6384:6388   */\n      0x40\n        /* \"#utility.yul\":6379:6382   */\n      dup6\n        /* \"#utility.yul\":6375:6389   */\n      add\n        /* \"#utility.yul\":6361:6373   */\n      dup3\n        /* \"#utility.yul\":6327:6390   */\n      tag_272\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6232:6400   */\n      pop\n        /* \"#utility.yul\":6485:6489   */\n      0x60\n        /* \"#utility.yul\":6478:6483   */\n      dup3\n        /* \"#utility.yul\":6474:6490   */\n      add\n        /* \"#utility.yul\":6468:6491   */\n      mload\n        /* \"#utility.yul\":6504:6561   */\n      tag_379\n        /* \"#utility.yul\":6555:6559   */\n      0x60\n        /* \"#utility.yul\":6550:6553   */\n      dup6\n        /* \"#utility.yul\":6546:6560   */\n      add\n        /* \"#utility.yul\":6532:6544   */\n      dup3\n        /* \"#utility.yul\":6504:6561   */\n      tag_280\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6410:6571   */\n      pop\n        /* \"#utility.yul\":5824:6578   */\n      pop\n        /* \"#utility.yul\":5712:6578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6584:6875   */\n    tag_282:\n        /* \"#utility.yul\":6709:6719   */\n      0x00\n        /* \"#utility.yul\":6730:6832   */\n      tag_381\n        /* \"#utility.yul\":6828:6831   */\n      dup4\n        /* \"#utility.yul\":6820:6826   */\n      dup4\n        /* \"#utility.yul\":6730:6832   */\n      tag_281\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6864:6868   */\n      0x80\n        /* \"#utility.yul\":6859:6862   */\n      dup4\n        /* \"#utility.yul\":6855:6869   */\n      add\n        /* \"#utility.yul\":6841:6869   */\n      swap1\n      pop\n        /* \"#utility.yul\":6584:6875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6881:7022   */\n    tag_283:\n        /* \"#utility.yul\":6979:6983   */\n      0x00\n        /* \"#utility.yul\":7011:7015   */\n      0x20\n        /* \"#utility.yul\":7006:7009   */\n      dup3\n        /* \"#utility.yul\":7002:7016   */\n      add\n        /* \"#utility.yul\":6994:7016   */\n      swap1\n      pop\n        /* \"#utility.yul\":6881:7022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7096:8052   */\n    tag_284:\n        /* \"#utility.yul\":7271:7274   */\n      0x00\n        /* \"#utility.yul\":7300:7382   */\n      tag_384\n        /* \"#utility.yul\":7376:7381   */\n      dup3\n        /* \"#utility.yul\":7300:7382   */\n      tag_277\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7398:7512   */\n      tag_385\n        /* \"#utility.yul\":7505:7511   */\n      dup2\n        /* \"#utility.yul\":7500:7503   */\n      dup6\n        /* \"#utility.yul\":7398:7512   */\n      tag_278\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7391:7512   */\n      swap4\n      pop\n        /* \"#utility.yul\":7536:7620   */\n      tag_386\n        /* \"#utility.yul\":7614:7619   */\n      dup4\n        /* \"#utility.yul\":7536:7620   */\n      tag_279\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7643:7650   */\n      dup1\n        /* \"#utility.yul\":7674:7675   */\n      0x00\n        /* \"#utility.yul\":7659:8027   */\n    tag_387:\n        /* \"#utility.yul\":7684:7690   */\n      dup4\n        /* \"#utility.yul\":7681:7682   */\n      dup2\n        /* \"#utility.yul\":7678:7691   */\n      lt\n        /* \"#utility.yul\":7659:8027   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7760:7766   */\n      dup2\n        /* \"#utility.yul\":7754:7767   */\n      mload\n        /* \"#utility.yul\":7787:7906   */\n      tag_390\n        /* \"#utility.yul\":7902:7905   */\n      dup9\n        /* \"#utility.yul\":7887:7900   */\n      dup3\n        /* \"#utility.yul\":7787:7906   */\n      tag_282\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7780:7906   */\n      swap8\n      pop\n        /* \"#utility.yul\":7929:8017   */\n      tag_391\n        /* \"#utility.yul\":8010:8016   */\n      dup4\n        /* \"#utility.yul\":7929:8017   */\n      tag_283\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7919:8017   */\n      swap3\n      pop\n        /* \"#utility.yul\":7719:8027   */\n      pop\n        /* \"#utility.yul\":7706:7707   */\n      0x01\n        /* \"#utility.yul\":7703:7704   */\n      dup2\n        /* \"#utility.yul\":7699:7708   */\n      add\n        /* \"#utility.yul\":7694:7708   */\n      swap1\n      pop\n        /* \"#utility.yul\":7659:8027   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":7663:7677   */\n      pop\n        /* \"#utility.yul\":8043:8046   */\n      dup6\n        /* \"#utility.yul\":8036:8046   */\n      swap4\n      pop\n        /* \"#utility.yul\":7276:8052   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7096:8052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8058:8804   */\n    tag_64:\n        /* \"#utility.yul\":8335:8339   */\n      0x00\n        /* \"#utility.yul\":8373:8375   */\n      0x40\n        /* \"#utility.yul\":8362:8371   */\n      dup3\n        /* \"#utility.yul\":8358:8376   */\n      add\n        /* \"#utility.yul\":8350:8376   */\n      swap1\n      pop\n        /* \"#utility.yul\":8422:8431   */\n      dup2\n        /* \"#utility.yul\":8416:8420   */\n      dup2\n        /* \"#utility.yul\":8412:8432   */\n      sub\n        /* \"#utility.yul\":8408:8409   */\n      0x00\n        /* \"#utility.yul\":8397:8406   */\n      dup4\n        /* \"#utility.yul\":8393:8410   */\n      add\n        /* \"#utility.yul\":8386:8433   */\n      mstore\n        /* \"#utility.yul\":8450:8558   */\n      tag_393\n        /* \"#utility.yul\":8553:8557   */\n      dup2\n        /* \"#utility.yul\":8544:8550   */\n      dup6\n        /* \"#utility.yul\":8450:8558   */\n      tag_275\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8442:8558   */\n      swap1\n      pop\n        /* \"#utility.yul\":8605:8614   */\n      dup2\n        /* \"#utility.yul\":8599:8603   */\n      dup2\n        /* \"#utility.yul\":8595:8615   */\n      sub\n        /* \"#utility.yul\":8590:8592   */\n      0x20\n        /* \"#utility.yul\":8579:8588   */\n      dup4\n        /* \"#utility.yul\":8575:8593   */\n      add\n        /* \"#utility.yul\":8568:8616   */\n      mstore\n        /* \"#utility.yul\":8633:8797   */\n      tag_394\n        /* \"#utility.yul\":8792:8796   */\n      dup2\n        /* \"#utility.yul\":8783:8789   */\n      dup5\n        /* \"#utility.yul\":8633:8797   */\n      tag_284\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8625:8797   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8804   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8810:9284   */\n    tag_67:\n        /* \"#utility.yul\":8878:8884   */\n      0x00\n        /* \"#utility.yul\":8886:8892   */\n      dup1\n        /* \"#utility.yul\":8935:8937   */\n      0x40\n        /* \"#utility.yul\":8923:8932   */\n      dup4\n        /* \"#utility.yul\":8914:8921   */\n      dup6\n        /* \"#utility.yul\":8910:8933   */\n      sub\n        /* \"#utility.yul\":8906:8938   */\n      slt\n        /* \"#utility.yul\":8903:9022   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8941:9020   */\n      tag_397\n      tag_257\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8903:9022   */\n    tag_396:\n        /* \"#utility.yul\":9061:9062   */\n      0x00\n        /* \"#utility.yul\":9086:9139   */\n      tag_398\n        /* \"#utility.yul\":9131:9138   */\n      dup6\n        /* \"#utility.yul\":9122:9128   */\n      dup3\n        /* \"#utility.yul\":9111:9120   */\n      dup7\n        /* \"#utility.yul\":9107:9129   */\n      add\n        /* \"#utility.yul\":9086:9139   */\n      tag_268\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9076:9139   */\n      swap3\n      pop\n        /* \"#utility.yul\":9032:9149   */\n      pop\n        /* \"#utility.yul\":9188:9190   */\n      0x20\n        /* \"#utility.yul\":9214:9267   */\n      tag_399\n        /* \"#utility.yul\":9259:9266   */\n      dup6\n        /* \"#utility.yul\":9250:9256   */\n      dup3\n        /* \"#utility.yul\":9239:9248   */\n      dup7\n        /* \"#utility.yul\":9235:9257   */\n      add\n        /* \"#utility.yul\":9214:9267   */\n      tag_268\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9204:9267   */\n      swap2\n      pop\n        /* \"#utility.yul\":9159:9277   */\n      pop\n        /* \"#utility.yul\":8810:9284   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9290:9831   */\n    tag_77:\n        /* \"#utility.yul\":9461:9465   */\n      0x00\n        /* \"#utility.yul\":9499:9502   */\n      0x80\n        /* \"#utility.yul\":9488:9497   */\n      dup3\n        /* \"#utility.yul\":9484:9503   */\n      add\n        /* \"#utility.yul\":9476:9503   */\n      swap1\n      pop\n        /* \"#utility.yul\":9513:9584   */\n      tag_401\n        /* \"#utility.yul\":9581:9582   */\n      0x00\n        /* \"#utility.yul\":9570:9579   */\n      dup4\n        /* \"#utility.yul\":9566:9583   */\n      add\n        /* \"#utility.yul\":9557:9563   */\n      dup8\n        /* \"#utility.yul\":9513:9584   */\n      tag_266\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9594:9666   */\n      tag_402\n        /* \"#utility.yul\":9662:9664   */\n      0x20\n        /* \"#utility.yul\":9651:9660   */\n      dup4\n        /* \"#utility.yul\":9647:9665   */\n      add\n        /* \"#utility.yul\":9638:9644   */\n      dup7\n        /* \"#utility.yul\":9594:9666   */\n      tag_266\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9676:9748   */\n      tag_403\n        /* \"#utility.yul\":9744:9746   */\n      0x40\n        /* \"#utility.yul\":9733:9742   */\n      dup4\n        /* \"#utility.yul\":9729:9747   */\n      add\n        /* \"#utility.yul\":9720:9726   */\n      dup6\n        /* \"#utility.yul\":9676:9748   */\n      tag_266\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9758:9824   */\n      tag_404\n        /* \"#utility.yul\":9820:9822   */\n      0x60\n        /* \"#utility.yul\":9809:9818   */\n      dup4\n        /* \"#utility.yul\":9805:9823   */\n      add\n        /* \"#utility.yul\":9796:9802   */\n      dup5\n        /* \"#utility.yul\":9758:9824   */\n      tag_264\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9290:9831   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:9897   */\n    tag_285:\n        /* \"#utility.yul\":9865:9868   */\n      0x00\n        /* \"#utility.yul\":9886:9891   */\n      dup2\n        /* \"#utility.yul\":9879:9891   */\n      swap1\n      pop\n        /* \"#utility.yul\":9837:9897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9903:10045   */\n    tag_286:\n        /* \"#utility.yul\":9953:9962   */\n      0x00\n        /* \"#utility.yul\":9986:10039   */\n      tag_407\n        /* \"#utility.yul\":10004:10038   */\n      tag_408\n        /* \"#utility.yul\":10013:10037   */\n      tag_409\n        /* \"#utility.yul\":10031:10036   */\n      dup5\n        /* \"#utility.yul\":10013:10037   */\n      tag_259\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10004:10038   */\n      tag_285\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9986:10039   */\n      tag_259\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9973:10039   */\n      swap1\n      pop\n        /* \"#utility.yul\":9903:10045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10177   */\n    tag_287:\n        /* \"#utility.yul\":10101:10110   */\n      0x00\n        /* \"#utility.yul\":10134:10171   */\n      tag_411\n        /* \"#utility.yul\":10165:10170   */\n      dup3\n        /* \"#utility.yul\":10134:10171   */\n      tag_286\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10121:10171   */\n      swap1\n      pop\n        /* \"#utility.yul\":10051:10177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10322   */\n    tag_288:\n        /* \"#utility.yul\":10246:10255   */\n      0x00\n        /* \"#utility.yul\":10279:10316   */\n      tag_413\n        /* \"#utility.yul\":10310:10315   */\n      dup3\n        /* \"#utility.yul\":10279:10316   */\n      tag_287\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10266:10316   */\n      swap1\n      pop\n        /* \"#utility.yul\":10183:10322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10328:10485   */\n    tag_289:\n        /* \"#utility.yul\":10428:10478   */\n      tag_415\n        /* \"#utility.yul\":10472:10477   */\n      dup2\n        /* \"#utility.yul\":10428:10478   */\n      tag_288\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10423:10426   */\n      dup3\n        /* \"#utility.yul\":10416:10479   */\n      mstore\n        /* \"#utility.yul\":10328:10485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10491:10739   */\n    tag_87:\n        /* \"#utility.yul\":10597:10601   */\n      0x00\n        /* \"#utility.yul\":10635:10637   */\n      0x20\n        /* \"#utility.yul\":10624:10633   */\n      dup3\n        /* \"#utility.yul\":10620:10638   */\n      add\n        /* \"#utility.yul\":10612:10638   */\n      swap1\n      pop\n        /* \"#utility.yul\":10648:10732   */\n      tag_417\n        /* \"#utility.yul\":10729:10730   */\n      0x00\n        /* \"#utility.yul\":10718:10727   */\n      dup4\n        /* \"#utility.yul\":10714:10731   */\n      add\n        /* \"#utility.yul\":10705:10711   */\n      dup5\n        /* \"#utility.yul\":10648:10732   */\n      tag_289\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10491:10739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10745:10925   */\n    tag_290:\n        /* \"#utility.yul\":10793:10870   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10790:10791   */\n      0x00\n        /* \"#utility.yul\":10783:10871   */\n      mstore\n        /* \"#utility.yul\":10890:10894   */\n      0x11\n        /* \"#utility.yul\":10887:10888   */\n      0x04\n        /* \"#utility.yul\":10880:10895   */\n      mstore\n        /* \"#utility.yul\":10914:10918   */\n      0x24\n        /* \"#utility.yul\":10911:10912   */\n      0x00\n        /* \"#utility.yul\":10904:10919   */\n      revert\n        /* \"#utility.yul\":10931:11125   */\n    tag_91:\n        /* \"#utility.yul\":10971:10975   */\n      0x00\n        /* \"#utility.yul\":10991:11011   */\n      tag_420\n        /* \"#utility.yul\":11009:11010   */\n      dup3\n        /* \"#utility.yul\":10991:11011   */\n      tag_265\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10986:11011   */\n      swap2\n      pop\n        /* \"#utility.yul\":11025:11045   */\n      tag_421\n        /* \"#utility.yul\":11043:11044   */\n      dup4\n        /* \"#utility.yul\":11025:11045   */\n      tag_265\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11020:11045   */\n      swap3\n      pop\n        /* \"#utility.yul\":11069:11070   */\n      dup3\n        /* \"#utility.yul\":11066:11067   */\n      dup3\n        /* \"#utility.yul\":11062:11071   */\n      sub\n        /* \"#utility.yul\":11054:11071   */\n      swap1\n      pop\n        /* \"#utility.yul\":11093:11094   */\n      dup2\n        /* \"#utility.yul\":11087:11091   */\n      dup2\n        /* \"#utility.yul\":11084:11095   */\n      gt\n        /* \"#utility.yul\":11081:11118   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":11098:11116   */\n      tag_423\n      tag_290\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11081:11118   */\n    tag_422:\n        /* \"#utility.yul\":10931:11125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11131:11364   */\n    tag_101:\n        /* \"#utility.yul\":11170:11173   */\n      0x00\n        /* \"#utility.yul\":11193:11217   */\n      tag_425\n        /* \"#utility.yul\":11211:11216   */\n      dup3\n        /* \"#utility.yul\":11193:11217   */\n      tag_265\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11184:11217   */\n      swap2\n      pop\n        /* \"#utility.yul\":11239:11305   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11232:11237   */\n      dup3\n        /* \"#utility.yul\":11229:11306   */\n      sub\n        /* \"#utility.yul\":11226:11329   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11309:11327   */\n      tag_427\n      tag_290\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11226:11329   */\n    tag_426:\n        /* \"#utility.yul\":11356:11357   */\n      0x01\n        /* \"#utility.yul\":11349:11354   */\n      dup3\n        /* \"#utility.yul\":11345:11358   */\n      add\n        /* \"#utility.yul\":11338:11358   */\n      swap1\n      pop\n        /* \"#utility.yul\":11131:11364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11370:11550   */\n    tag_105:\n        /* \"#utility.yul\":11418:11495   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11415:11416   */\n      0x00\n        /* \"#utility.yul\":11408:11496   */\n      mstore\n        /* \"#utility.yul\":11515:11519   */\n      0x41\n        /* \"#utility.yul\":11512:11513   */\n      0x04\n        /* \"#utility.yul\":11505:11520   */\n      mstore\n        /* \"#utility.yul\":11539:11543   */\n      0x24\n        /* \"#utility.yul\":11536:11537   */\n      0x00\n        /* \"#utility.yul\":11529:11544   */\n      revert\n        /* \"#utility.yul\":11556:11736   */\n    tag_114:\n        /* \"#utility.yul\":11604:11681   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11601:11602   */\n      0x00\n        /* \"#utility.yul\":11594:11682   */\n      mstore\n        /* \"#utility.yul\":11701:11705   */\n      0x32\n        /* \"#utility.yul\":11698:11699   */\n      0x04\n        /* \"#utility.yul\":11691:11706   */\n      mstore\n        /* \"#utility.yul\":11725:11729   */\n      0x24\n        /* \"#utility.yul\":11722:11723   */\n      0x00\n        /* \"#utility.yul\":11715:11730   */\n      revert\n        /* \"#utility.yul\":11742:11911   */\n    tag_291:\n        /* \"#utility.yul\":11826:11837   */\n      0x00\n        /* \"#utility.yul\":11860:11866   */\n      dup3\n        /* \"#utility.yul\":11855:11858   */\n      dup3\n        /* \"#utility.yul\":11848:11867   */\n      mstore\n        /* \"#utility.yul\":11900:11904   */\n      0x20\n        /* \"#utility.yul\":11895:11898   */\n      dup3\n        /* \"#utility.yul\":11891:11905   */\n      add\n        /* \"#utility.yul\":11876:11905   */\n      swap1\n      pop\n        /* \"#utility.yul\":11742:11911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11917:12083   */\n    tag_292:\n        /* \"#utility.yul\":12057:12075   */\n      0x4e6f20616d6f756e74207374616b656400000000000000000000000000000000\n        /* \"#utility.yul\":12053:12054   */\n      0x00\n        /* \"#utility.yul\":12045:12051   */\n      dup3\n        /* \"#utility.yul\":12041:12055   */\n      add\n        /* \"#utility.yul\":12034:12076   */\n      mstore\n        /* \"#utility.yul\":11917:12083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12089:12455   */\n    tag_293:\n        /* \"#utility.yul\":12231:12234   */\n      0x00\n        /* \"#utility.yul\":12252:12319   */\n      tag_433\n        /* \"#utility.yul\":12316:12318   */\n      0x10\n        /* \"#utility.yul\":12311:12314   */\n      dup4\n        /* \"#utility.yul\":12252:12319   */\n      tag_291\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12245:12319   */\n      swap2\n      pop\n        /* \"#utility.yul\":12328:12421   */\n      tag_434\n        /* \"#utility.yul\":12417:12420   */\n      dup3\n        /* \"#utility.yul\":12328:12421   */\n      tag_292\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12446:12448   */\n      0x20\n        /* \"#utility.yul\":12441:12444   */\n      dup3\n        /* \"#utility.yul\":12437:12449   */\n      add\n        /* \"#utility.yul\":12430:12449   */\n      swap1\n      pop\n        /* \"#utility.yul\":12089:12455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12461:12880   */\n    tag_121:\n        /* \"#utility.yul\":12627:12631   */\n      0x00\n        /* \"#utility.yul\":12665:12667   */\n      0x20\n        /* \"#utility.yul\":12654:12663   */\n      dup3\n        /* \"#utility.yul\":12650:12668   */\n      add\n        /* \"#utility.yul\":12642:12668   */\n      swap1\n      pop\n        /* \"#utility.yul\":12714:12723   */\n      dup2\n        /* \"#utility.yul\":12708:12712   */\n      dup2\n        /* \"#utility.yul\":12704:12724   */\n      sub\n        /* \"#utility.yul\":12700:12701   */\n      0x00\n        /* \"#utility.yul\":12689:12698   */\n      dup4\n        /* \"#utility.yul\":12685:12702   */\n      add\n        /* \"#utility.yul\":12678:12725   */\n      mstore\n        /* \"#utility.yul\":12742:12873   */\n      tag_436\n        /* \"#utility.yul\":12868:12872   */\n      dup2\n        /* \"#utility.yul\":12742:12873   */\n      tag_293\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12734:12873   */\n      swap1\n      pop\n        /* \"#utility.yul\":12461:12880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12886:13218   */\n    tag_131:\n        /* \"#utility.yul\":13007:13011   */\n      0x00\n        /* \"#utility.yul\":13045:13047   */\n      0x40\n        /* \"#utility.yul\":13034:13043   */\n      dup3\n        /* \"#utility.yul\":13030:13048   */\n      add\n        /* \"#utility.yul\":13022:13048   */\n      swap1\n      pop\n        /* \"#utility.yul\":13058:13129   */\n      tag_438\n        /* \"#utility.yul\":13126:13127   */\n      0x00\n        /* \"#utility.yul\":13115:13124   */\n      dup4\n        /* \"#utility.yul\":13111:13128   */\n      add\n        /* \"#utility.yul\":13102:13108   */\n      dup6\n        /* \"#utility.yul\":13058:13129   */\n      tag_276\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13139:13211   */\n      tag_439\n        /* \"#utility.yul\":13207:13209   */\n      0x20\n        /* \"#utility.yul\":13196:13205   */\n      dup4\n        /* \"#utility.yul\":13192:13210   */\n      add\n        /* \"#utility.yul\":13183:13189   */\n      dup5\n        /* \"#utility.yul\":13139:13211   */\n      tag_266\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12886:13218   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13224:13340   */\n    tag_294:\n        /* \"#utility.yul\":13294:13315   */\n      tag_441\n        /* \"#utility.yul\":13309:13314   */\n      dup2\n        /* \"#utility.yul\":13294:13315   */\n      tag_263\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13287:13292   */\n      dup2\n        /* \"#utility.yul\":13284:13316   */\n      eq\n        /* \"#utility.yul\":13274:13334   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":13330:13331   */\n      0x00\n        /* \"#utility.yul\":13327:13328   */\n      dup1\n        /* \"#utility.yul\":13320:13332   */\n      revert\n        /* \"#utility.yul\":13274:13334   */\n    tag_442:\n        /* \"#utility.yul\":13224:13340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13346:13483   */\n    tag_295:\n        /* \"#utility.yul\":13400:13405   */\n      0x00\n        /* \"#utility.yul\":13431:13437   */\n      dup2\n        /* \"#utility.yul\":13425:13438   */\n      mload\n        /* \"#utility.yul\":13416:13438   */\n      swap1\n      pop\n        /* \"#utility.yul\":13447:13477   */\n      tag_444\n        /* \"#utility.yul\":13471:13476   */\n      dup2\n        /* \"#utility.yul\":13447:13477   */\n      tag_294\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13346:13483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13489:13834   */\n    tag_135:\n        /* \"#utility.yul\":13556:13562   */\n      0x00\n        /* \"#utility.yul\":13605:13607   */\n      0x20\n        /* \"#utility.yul\":13593:13602   */\n      dup3\n        /* \"#utility.yul\":13584:13591   */\n      dup5\n        /* \"#utility.yul\":13580:13603   */\n      sub\n        /* \"#utility.yul\":13576:13608   */\n      slt\n        /* \"#utility.yul\":13573:13692   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":13611:13690   */\n      tag_447\n      tag_257\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13573:13692   */\n    tag_446:\n        /* \"#utility.yul\":13731:13732   */\n      0x00\n        /* \"#utility.yul\":13756:13817   */\n      tag_448\n        /* \"#utility.yul\":13809:13816   */\n      dup5\n        /* \"#utility.yul\":13800:13806   */\n      dup3\n        /* \"#utility.yul\":13789:13798   */\n      dup6\n        /* \"#utility.yul\":13785:13807   */\n      add\n        /* \"#utility.yul\":13756:13817   */\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13746:13817   */\n      swap2\n      pop\n        /* \"#utility.yul\":13702:13827   */\n      pop\n        /* \"#utility.yul\":13489:13834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13840:13983   */\n    tag_296:\n        /* \"#utility.yul\":13897:13902   */\n      0x00\n        /* \"#utility.yul\":13928:13934   */\n      dup2\n        /* \"#utility.yul\":13922:13935   */\n      mload\n        /* \"#utility.yul\":13913:13935   */\n      swap1\n      pop\n        /* \"#utility.yul\":13944:13977   */\n      tag_450\n        /* \"#utility.yul\":13971:13976   */\n      dup2\n        /* \"#utility.yul\":13944:13977   */\n      tag_267\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13840:13983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13989:14340   */\n    tag_146:\n        /* \"#utility.yul\":14059:14065   */\n      0x00\n        /* \"#utility.yul\":14108:14110   */\n      0x20\n        /* \"#utility.yul\":14096:14105   */\n      dup3\n        /* \"#utility.yul\":14087:14094   */\n      dup5\n        /* \"#utility.yul\":14083:14106   */\n      sub\n        /* \"#utility.yul\":14079:14111   */\n      slt\n        /* \"#utility.yul\":14076:14195   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":14114:14193   */\n      tag_453\n      tag_257\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14076:14195   */\n    tag_452:\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14259:14323   */\n      tag_454\n        /* \"#utility.yul\":14315:14322   */\n      dup5\n        /* \"#utility.yul\":14306:14312   */\n      dup3\n        /* \"#utility.yul\":14295:14304   */\n      dup6\n        /* \"#utility.yul\":14291:14313   */\n      add\n        /* \"#utility.yul\":14259:14323   */\n      tag_296\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14249:14323   */\n      swap2\n      pop\n        /* \"#utility.yul\":14205:14333   */\n      pop\n        /* \"#utility.yul\":13989:14340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14528   */\n    tag_297:\n        /* \"#utility.yul\":14486:14520   */\n      0x4d757374207374616b65206d6f7265207468616e207a65726f20746f6b656e73\n        /* \"#utility.yul\":14482:14483   */\n      0x00\n        /* \"#utility.yul\":14474:14480   */\n      dup3\n        /* \"#utility.yul\":14470:14484   */\n      add\n        /* \"#utility.yul\":14463:14521   */\n      mstore\n        /* \"#utility.yul\":14346:14528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14534:14900   */\n    tag_298:\n        /* \"#utility.yul\":14676:14679   */\n      0x00\n        /* \"#utility.yul\":14697:14764   */\n      tag_457\n        /* \"#utility.yul\":14761:14763   */\n      0x20\n        /* \"#utility.yul\":14756:14759   */\n      dup4\n        /* \"#utility.yul\":14697:14764   */\n      tag_291\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":14690:14764   */\n      swap2\n      pop\n        /* \"#utility.yul\":14773:14866   */\n      tag_458\n        /* \"#utility.yul\":14862:14865   */\n      dup3\n        /* \"#utility.yul\":14773:14866   */\n      tag_297\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14891:14893   */\n      0x20\n        /* \"#utility.yul\":14886:14889   */\n      dup3\n        /* \"#utility.yul\":14882:14894   */\n      add\n        /* \"#utility.yul\":14875:14894   */\n      swap1\n      pop\n        /* \"#utility.yul\":14534:14900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14906:15325   */\n    tag_181:\n        /* \"#utility.yul\":15072:15076   */\n      0x00\n        /* \"#utility.yul\":15110:15112   */\n      0x20\n        /* \"#utility.yul\":15099:15108   */\n      dup3\n        /* \"#utility.yul\":15095:15113   */\n      add\n        /* \"#utility.yul\":15087:15113   */\n      swap1\n      pop\n        /* \"#utility.yul\":15159:15168   */\n      dup2\n        /* \"#utility.yul\":15153:15157   */\n      dup2\n        /* \"#utility.yul\":15149:15169   */\n      sub\n        /* \"#utility.yul\":15145:15146   */\n      0x00\n        /* \"#utility.yul\":15134:15143   */\n      dup4\n        /* \"#utility.yul\":15130:15147   */\n      add\n        /* \"#utility.yul\":15123:15170   */\n      mstore\n        /* \"#utility.yul\":15187:15318   */\n      tag_460\n        /* \"#utility.yul\":15313:15317   */\n      dup2\n        /* \"#utility.yul\":15187:15318   */\n      tag_298\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15179:15318   */\n      swap1\n      pop\n        /* \"#utility.yul\":14906:15325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15331:15552   */\n    tag_299:\n        /* \"#utility.yul\":15471:15505   */\n      0x4e6f7420456e6f7567682042616c616e636520546f6b656e7320546f20537461\n        /* \"#utility.yul\":15467:15468   */\n      0x00\n        /* \"#utility.yul\":15459:15465   */\n      dup3\n        /* \"#utility.yul\":15455:15469   */\n      add\n        /* \"#utility.yul\":15448:15506   */\n      mstore\n        /* \"#utility.yul\":15540:15544   */\n      0x6b65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15535:15537   */\n      0x20\n        /* \"#utility.yul\":15527:15533   */\n      dup3\n        /* \"#utility.yul\":15523:15538   */\n      add\n        /* \"#utility.yul\":15516:15545   */\n      mstore\n        /* \"#utility.yul\":15331:15552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15558:15924   */\n    tag_300:\n        /* \"#utility.yul\":15700:15703   */\n      0x00\n        /* \"#utility.yul\":15721:15788   */\n      tag_463\n        /* \"#utility.yul\":15785:15787   */\n      0x22\n        /* \"#utility.yul\":15780:15783   */\n      dup4\n        /* \"#utility.yul\":15721:15788   */\n      tag_291\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15714:15788   */\n      swap2\n      pop\n        /* \"#utility.yul\":15797:15890   */\n      tag_464\n        /* \"#utility.yul\":15886:15889   */\n      dup3\n        /* \"#utility.yul\":15797:15890   */\n      tag_299\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15915:15917   */\n      0x40\n        /* \"#utility.yul\":15910:15913   */\n      dup3\n        /* \"#utility.yul\":15906:15918   */\n      add\n        /* \"#utility.yul\":15899:15918   */\n      swap1\n      pop\n        /* \"#utility.yul\":15558:15924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15930:16349   */\n    tag_188:\n        /* \"#utility.yul\":16096:16100   */\n      0x00\n        /* \"#utility.yul\":16134:16136   */\n      0x20\n        /* \"#utility.yul\":16123:16132   */\n      dup3\n        /* \"#utility.yul\":16119:16137   */\n      add\n        /* \"#utility.yul\":16111:16137   */\n      swap1\n      pop\n        /* \"#utility.yul\":16183:16192   */\n      dup2\n        /* \"#utility.yul\":16177:16181   */\n      dup2\n        /* \"#utility.yul\":16173:16193   */\n      sub\n        /* \"#utility.yul\":16169:16170   */\n      0x00\n        /* \"#utility.yul\":16158:16167   */\n      dup4\n        /* \"#utility.yul\":16154:16171   */\n      add\n        /* \"#utility.yul\":16147:16194   */\n      mstore\n        /* \"#utility.yul\":16211:16342   */\n      tag_466\n        /* \"#utility.yul\":16337:16341   */\n      dup2\n        /* \"#utility.yul\":16211:16342   */\n      tag_300\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":16203:16342   */\n      swap1\n      pop\n        /* \"#utility.yul\":15930:16349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16355:16582   */\n    tag_301:\n        /* \"#utility.yul\":16495:16529   */\n      0x5461727269662063616e204f6e6c79206265206f6620322c342c362c382c3130\n        /* \"#utility.yul\":16491:16492   */\n      0x00\n        /* \"#utility.yul\":16483:16489   */\n      dup3\n        /* \"#utility.yul\":16479:16493   */\n      add\n        /* \"#utility.yul\":16472:16530   */\n      mstore\n        /* \"#utility.yul\":16564:16574   */\n      0x204d696e75746573000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16559:16561   */\n      0x20\n        /* \"#utility.yul\":16551:16557   */\n      dup3\n        /* \"#utility.yul\":16547:16562   */\n      add\n        /* \"#utility.yul\":16540:16575   */\n      mstore\n        /* \"#utility.yul\":16355:16582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16588:16954   */\n    tag_302:\n        /* \"#utility.yul\":16730:16733   */\n      0x00\n        /* \"#utility.yul\":16751:16818   */\n      tag_469\n        /* \"#utility.yul\":16815:16817   */\n      0x28\n        /* \"#utility.yul\":16810:16813   */\n      dup4\n        /* \"#utility.yul\":16751:16818   */\n      tag_291\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16744:16818   */\n      swap2\n      pop\n        /* \"#utility.yul\":16827:16920   */\n      tag_470\n        /* \"#utility.yul\":16916:16919   */\n      dup3\n        /* \"#utility.yul\":16827:16920   */\n      tag_301\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16945:16947   */\n      0x40\n        /* \"#utility.yul\":16940:16943   */\n      dup3\n        /* \"#utility.yul\":16936:16948   */\n      add\n        /* \"#utility.yul\":16929:16948   */\n      swap1\n      pop\n        /* \"#utility.yul\":16588:16954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16960:17379   */\n    tag_195:\n        /* \"#utility.yul\":17126:17130   */\n      0x00\n        /* \"#utility.yul\":17164:17166   */\n      0x20\n        /* \"#utility.yul\":17153:17162   */\n      dup3\n        /* \"#utility.yul\":17149:17167   */\n      add\n        /* \"#utility.yul\":17141:17167   */\n      swap1\n      pop\n        /* \"#utility.yul\":17213:17222   */\n      dup2\n        /* \"#utility.yul\":17207:17211   */\n      dup2\n        /* \"#utility.yul\":17203:17223   */\n      sub\n        /* \"#utility.yul\":17199:17200   */\n      0x00\n        /* \"#utility.yul\":17188:17197   */\n      dup4\n        /* \"#utility.yul\":17184:17201   */\n      add\n        /* \"#utility.yul\":17177:17224   */\n      mstore\n        /* \"#utility.yul\":17241:17372   */\n      tag_472\n        /* \"#utility.yul\":17367:17371   */\n      dup2\n        /* \"#utility.yul\":17241:17372   */\n      tag_302\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":17233:17372   */\n      swap1\n      pop\n        /* \"#utility.yul\":16960:17379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17385:17827   */\n    tag_198:\n        /* \"#utility.yul\":17534:17538   */\n      0x00\n        /* \"#utility.yul\":17572:17574   */\n      0x60\n        /* \"#utility.yul\":17561:17570   */\n      dup3\n        /* \"#utility.yul\":17557:17575   */\n      add\n        /* \"#utility.yul\":17549:17575   */\n      swap1\n      pop\n        /* \"#utility.yul\":17585:17656   */\n      tag_474\n        /* \"#utility.yul\":17653:17654   */\n      0x00\n        /* \"#utility.yul\":17642:17651   */\n      dup4\n        /* \"#utility.yul\":17638:17655   */\n      add\n        /* \"#utility.yul\":17629:17635   */\n      dup7\n        /* \"#utility.yul\":17585:17656   */\n      tag_276\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17666:17738   */\n      tag_475\n        /* \"#utility.yul\":17734:17736   */\n      0x20\n        /* \"#utility.yul\":17723:17732   */\n      dup4\n        /* \"#utility.yul\":17719:17737   */\n      add\n        /* \"#utility.yul\":17710:17716   */\n      dup6\n        /* \"#utility.yul\":17666:17738   */\n      tag_276\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":17748:17820   */\n      tag_476\n        /* \"#utility.yul\":17816:17818   */\n      0x40\n        /* \"#utility.yul\":17805:17814   */\n      dup4\n        /* \"#utility.yul\":17801:17819   */\n      add\n        /* \"#utility.yul\":17792:17798   */\n      dup5\n        /* \"#utility.yul\":17748:17820   */\n      tag_266\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17385:17827   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17833:18055   */\n    tag_303:\n        /* \"#utility.yul\":17973:18007   */\n      0x4769766520617070726f76616c2066726f6d20696e697469616c20746f207374\n        /* \"#utility.yul\":17969:17970   */\n      0x00\n        /* \"#utility.yul\":17961:17967   */\n      dup3\n        /* \"#utility.yul\":17957:17971   */\n      add\n        /* \"#utility.yul\":17950:18008   */\n      mstore\n        /* \"#utility.yul\":18042:18047   */\n      0x616b650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18037:18039   */\n      0x20\n        /* \"#utility.yul\":18029:18035   */\n      dup3\n        /* \"#utility.yul\":18025:18040   */\n      add\n        /* \"#utility.yul\":18018:18048   */\n      mstore\n        /* \"#utility.yul\":17833:18055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18061:18427   */\n    tag_304:\n        /* \"#utility.yul\":18203:18206   */\n      0x00\n        /* \"#utility.yul\":18224:18291   */\n      tag_479\n        /* \"#utility.yul\":18288:18290   */\n      0x23\n        /* \"#utility.yul\":18283:18286   */\n      dup4\n        /* \"#utility.yul\":18224:18291   */\n      tag_291\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18217:18291   */\n      swap2\n      pop\n        /* \"#utility.yul\":18300:18393   */\n      tag_480\n        /* \"#utility.yul\":18389:18392   */\n      dup3\n        /* \"#utility.yul\":18300:18393   */\n      tag_303\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":18418:18420   */\n      0x40\n        /* \"#utility.yul\":18413:18416   */\n      dup3\n        /* \"#utility.yul\":18409:18421   */\n      add\n        /* \"#utility.yul\":18402:18421   */\n      swap1\n      pop\n        /* \"#utility.yul\":18061:18427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18433:18852   */\n    tag_204:\n        /* \"#utility.yul\":18599:18603   */\n      0x00\n        /* \"#utility.yul\":18637:18639   */\n      0x20\n        /* \"#utility.yul\":18626:18635   */\n      dup3\n        /* \"#utility.yul\":18622:18640   */\n      add\n        /* \"#utility.yul\":18614:18640   */\n      swap1\n      pop\n        /* \"#utility.yul\":18686:18695   */\n      dup2\n        /* \"#utility.yul\":18680:18684   */\n      dup2\n        /* \"#utility.yul\":18676:18696   */\n      sub\n        /* \"#utility.yul\":18672:18673   */\n      0x00\n        /* \"#utility.yul\":18661:18670   */\n      dup4\n        /* \"#utility.yul\":18657:18674   */\n      add\n        /* \"#utility.yul\":18650:18697   */\n      mstore\n        /* \"#utility.yul\":18714:18845   */\n      tag_482\n        /* \"#utility.yul\":18840:18844   */\n      dup2\n        /* \"#utility.yul\":18714:18845   */\n      tag_304\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18706:18845   */\n      swap1\n      pop\n        /* \"#utility.yul\":18433:18852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18858:19049   */\n    tag_207:\n        /* \"#utility.yul\":18898:18901   */\n      0x00\n        /* \"#utility.yul\":18917:18937   */\n      tag_484\n        /* \"#utility.yul\":18935:18936   */\n      dup3\n        /* \"#utility.yul\":18917:18937   */\n      tag_265\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":18912:18937   */\n      swap2\n      pop\n        /* \"#utility.yul\":18951:18971   */\n      tag_485\n        /* \"#utility.yul\":18969:18970   */\n      dup4\n        /* \"#utility.yul\":18951:18971   */\n      tag_265\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18946:18971   */\n      swap3\n      pop\n        /* \"#utility.yul\":18994:18995   */\n      dup3\n        /* \"#utility.yul\":18991:18992   */\n      dup3\n        /* \"#utility.yul\":18987:18996   */\n      add\n        /* \"#utility.yul\":18980:18996   */\n      swap1\n      pop\n        /* \"#utility.yul\":19015:19018   */\n      dup1\n        /* \"#utility.yul\":19012:19013   */\n      dup3\n        /* \"#utility.yul\":19009:19019   */\n      gt\n        /* \"#utility.yul\":19006:19042   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":19022:19040   */\n      tag_487\n      tag_290\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":19006:19042   */\n    tag_486:\n        /* \"#utility.yul\":18858:19049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19055:19465   */\n    tag_210:\n        /* \"#utility.yul\":19095:19102   */\n      0x00\n        /* \"#utility.yul\":19118:19138   */\n      tag_489\n        /* \"#utility.yul\":19136:19137   */\n      dup3\n        /* \"#utility.yul\":19118:19138   */\n      tag_265\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19113:19138   */\n      swap2\n      pop\n        /* \"#utility.yul\":19152:19172   */\n      tag_490\n        /* \"#utility.yul\":19170:19171   */\n      dup4\n        /* \"#utility.yul\":19152:19172   */\n      tag_265\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":19147:19172   */\n      swap3\n      pop\n        /* \"#utility.yul\":19207:19208   */\n      dup3\n        /* \"#utility.yul\":19204:19205   */\n      dup3\n        /* \"#utility.yul\":19200:19209   */\n      mul\n        /* \"#utility.yul\":19229:19259   */\n      tag_491\n        /* \"#utility.yul\":19247:19258   */\n      dup2\n        /* \"#utility.yul\":19229:19259   */\n      tag_265\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":19218:19259   */\n      swap2\n      pop\n        /* \"#utility.yul\":19408:19409   */\n      dup3\n        /* \"#utility.yul\":19399:19406   */\n      dup3\n        /* \"#utility.yul\":19395:19410   */\n      div\n        /* \"#utility.yul\":19392:19393   */\n      dup5\n        /* \"#utility.yul\":19389:19411   */\n      eq\n        /* \"#utility.yul\":19369:19370   */\n      dup4\n        /* \"#utility.yul\":19362:19371   */\n      iszero\n        /* \"#utility.yul\":19342:19425   */\n      or\n        /* \"#utility.yul\":19319:19458   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":19438:19456   */\n      tag_493\n      tag_290\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":19319:19458   */\n    tag_492:\n        /* \"#utility.yul\":19103:19465   */\n      pop\n        /* \"#utility.yul\":19055:19465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19471:19634   */\n    tag_305:\n        /* \"#utility.yul\":19611:19626   */\n      0x436f6f6c646f776e2054696d6500000000000000000000000000000000000000\n        /* \"#utility.yul\":19607:19608   */\n      0x00\n        /* \"#utility.yul\":19599:19605   */\n      dup3\n        /* \"#utility.yul\":19595:19609   */\n      add\n        /* \"#utility.yul\":19588:19627   */\n      mstore\n        /* \"#utility.yul\":19471:19634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19640:20006   */\n    tag_306:\n        /* \"#utility.yul\":19782:19785   */\n      0x00\n        /* \"#utility.yul\":19803:19870   */\n      tag_496\n        /* \"#utility.yul\":19867:19869   */\n      0x0d\n        /* \"#utility.yul\":19862:19865   */\n      dup4\n        /* \"#utility.yul\":19803:19870   */\n      tag_291\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19796:19870   */\n      swap2\n      pop\n        /* \"#utility.yul\":19879:19972   */\n      tag_497\n        /* \"#utility.yul\":19968:19971   */\n      dup3\n        /* \"#utility.yul\":19879:19972   */\n      tag_305\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19997:19999   */\n      0x20\n        /* \"#utility.yul\":19992:19995   */\n      dup3\n        /* \"#utility.yul\":19988:20000   */\n      add\n        /* \"#utility.yul\":19981:20000   */\n      swap1\n      pop\n        /* \"#utility.yul\":19640:20006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20012:20431   */\n    tag_218:\n        /* \"#utility.yul\":20178:20182   */\n      0x00\n        /* \"#utility.yul\":20216:20218   */\n      0x20\n        /* \"#utility.yul\":20205:20214   */\n      dup3\n        /* \"#utility.yul\":20201:20219   */\n      add\n        /* \"#utility.yul\":20193:20219   */\n      swap1\n      pop\n        /* \"#utility.yul\":20265:20274   */\n      dup2\n        /* \"#utility.yul\":20259:20263   */\n      dup2\n        /* \"#utility.yul\":20255:20275   */\n      sub\n        /* \"#utility.yul\":20251:20252   */\n      0x00\n        /* \"#utility.yul\":20240:20249   */\n      dup4\n        /* \"#utility.yul\":20236:20253   */\n      add\n        /* \"#utility.yul\":20229:20276   */\n      mstore\n        /* \"#utility.yul\":20293:20424   */\n      tag_499\n        /* \"#utility.yul\":20419:20423   */\n      dup2\n        /* \"#utility.yul\":20293:20424   */\n      tag_306\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":20285:20424   */\n      swap1\n      pop\n        /* \"#utility.yul\":20012:20431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20437:20616   */\n    tag_307:\n        /* \"#utility.yul\":20577:20608   */\n      0x596f7520686176656e2774207374616b656420616e7920616d6f756e74000000\n        /* \"#utility.yul\":20573:20574   */\n      0x00\n        /* \"#utility.yul\":20565:20571   */\n      dup3\n        /* \"#utility.yul\":20561:20575   */\n      add\n        /* \"#utility.yul\":20554:20609   */\n      mstore\n        /* \"#utility.yul\":20437:20616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20622:20988   */\n    tag_308:\n        /* \"#utility.yul\":20764:20767   */\n      0x00\n        /* \"#utility.yul\":20785:20852   */\n      tag_502\n        /* \"#utility.yul\":20849:20851   */\n      0x1d\n        /* \"#utility.yul\":20844:20847   */\n      dup4\n        /* \"#utility.yul\":20785:20852   */\n      tag_291\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20778:20852   */\n      swap2\n      pop\n        /* \"#utility.yul\":20861:20954   */\n      tag_503\n        /* \"#utility.yul\":20950:20953   */\n      dup3\n        /* \"#utility.yul\":20861:20954   */\n      tag_307\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":20979:20981   */\n      0x20\n        /* \"#utility.yul\":20974:20977   */\n      dup3\n        /* \"#utility.yul\":20970:20982   */\n      add\n        /* \"#utility.yul\":20963:20982   */\n      swap1\n      pop\n        /* \"#utility.yul\":20622:20988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20994:21413   */\n    tag_222:\n        /* \"#utility.yul\":21160:21164   */\n      0x00\n        /* \"#utility.yul\":21198:21200   */\n      0x20\n        /* \"#utility.yul\":21187:21196   */\n      dup3\n        /* \"#utility.yul\":21183:21201   */\n      add\n        /* \"#utility.yul\":21175:21201   */\n      swap1\n      pop\n        /* \"#utility.yul\":21247:21256   */\n      dup2\n        /* \"#utility.yul\":21241:21245   */\n      dup2\n        /* \"#utility.yul\":21237:21257   */\n      sub\n        /* \"#utility.yul\":21233:21234   */\n      0x00\n        /* \"#utility.yul\":21222:21231   */\n      dup4\n        /* \"#utility.yul\":21218:21235   */\n      add\n        /* \"#utility.yul\":21211:21258   */\n      mstore\n        /* \"#utility.yul\":21275:21406   */\n      tag_505\n        /* \"#utility.yul\":21401:21405   */\n      dup2\n        /* \"#utility.yul\":21275:21406   */\n      tag_308\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":21267:21406   */\n      swap1\n      pop\n        /* \"#utility.yul\":20994:21413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21419:21587   */\n    tag_309:\n        /* \"#utility.yul\":21559:21579   */\n      0x4e6f2072657761726420746f20636c61696d0000000000000000000000000000\n        /* \"#utility.yul\":21555:21556   */\n      0x00\n        /* \"#utility.yul\":21547:21553   */\n      dup3\n        /* \"#utility.yul\":21543:21557   */\n      add\n        /* \"#utility.yul\":21536:21580   */\n      mstore\n        /* \"#utility.yul\":21419:21587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21593:21959   */\n    tag_310:\n        /* \"#utility.yul\":21735:21738   */\n      0x00\n        /* \"#utility.yul\":21756:21823   */\n      tag_508\n        /* \"#utility.yul\":21820:21822   */\n      0x12\n        /* \"#utility.yul\":21815:21818   */\n      dup4\n        /* \"#utility.yul\":21756:21823   */\n      tag_291\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21749:21823   */\n      swap2\n      pop\n        /* \"#utility.yul\":21832:21925   */\n      tag_509\n        /* \"#utility.yul\":21921:21924   */\n      dup3\n        /* \"#utility.yul\":21832:21925   */\n      tag_309\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21950:21952   */\n      0x20\n        /* \"#utility.yul\":21945:21948   */\n      dup3\n        /* \"#utility.yul\":21941:21953   */\n      add\n        /* \"#utility.yul\":21934:21953   */\n      swap1\n      pop\n        /* \"#utility.yul\":21593:21959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21965:22384   */\n    tag_235:\n        /* \"#utility.yul\":22131:22135   */\n      0x00\n        /* \"#utility.yul\":22169:22171   */\n      0x20\n        /* \"#utility.yul\":22158:22167   */\n      dup3\n        /* \"#utility.yul\":22154:22172   */\n      add\n        /* \"#utility.yul\":22146:22172   */\n      swap1\n      pop\n        /* \"#utility.yul\":22218:22227   */\n      dup2\n        /* \"#utility.yul\":22212:22216   */\n      dup2\n        /* \"#utility.yul\":22208:22228   */\n      sub\n        /* \"#utility.yul\":22204:22205   */\n      0x00\n        /* \"#utility.yul\":22193:22202   */\n      dup4\n        /* \"#utility.yul\":22189:22206   */\n      add\n        /* \"#utility.yul\":22182:22229   */\n      mstore\n        /* \"#utility.yul\":22246:22377   */\n      tag_511\n        /* \"#utility.yul\":22372:22376   */\n      dup2\n        /* \"#utility.yul\":22246:22377   */\n      tag_310\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":22238:22377   */\n      swap1\n      pop\n        /* \"#utility.yul\":21965:22384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22390:22570   */\n    tag_311:\n        /* \"#utility.yul\":22438:22515   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22435:22436   */\n      0x00\n        /* \"#utility.yul\":22428:22516   */\n      mstore\n        /* \"#utility.yul\":22535:22539   */\n      0x12\n        /* \"#utility.yul\":22532:22533   */\n      0x04\n        /* \"#utility.yul\":22525:22540   */\n      mstore\n        /* \"#utility.yul\":22559:22563   */\n      0x24\n        /* \"#utility.yul\":22556:22557   */\n      0x00\n        /* \"#utility.yul\":22549:22564   */\n      revert\n        /* \"#utility.yul\":22576:22761   */\n    tag_248:\n        /* \"#utility.yul\":22616:22617   */\n      0x00\n        /* \"#utility.yul\":22633:22653   */\n      tag_514\n        /* \"#utility.yul\":22651:22652   */\n      dup3\n        /* \"#utility.yul\":22633:22653   */\n      tag_265\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22628:22653   */\n      swap2\n      pop\n        /* \"#utility.yul\":22667:22687   */\n      tag_515\n        /* \"#utility.yul\":22685:22686   */\n      dup4\n        /* \"#utility.yul\":22667:22687   */\n      tag_265\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22662:22687   */\n      swap3\n      pop\n        /* \"#utility.yul\":22706:22707   */\n      dup3\n        /* \"#utility.yul\":22696:22731   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":22711:22729   */\n      tag_517\n      tag_311\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22696:22731   */\n    tag_516:\n        /* \"#utility.yul\":22753:22754   */\n      dup3\n        /* \"#utility.yul\":22750:22751   */\n      dup3\n        /* \"#utility.yul\":22746:22755   */\n      div\n        /* \"#utility.yul\":22741:22755   */\n      swap1\n      pop\n        /* \"#utility.yul\":22576:22761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206b7577b14fa31c322171130a717455efa4668fb726e1d6f114b12d2d5f93678d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:3",
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160035534801562000015575f80fd5b50604051620020853803806200208583398181016040528101906200003b919062000127565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000157565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000f182620000c6565b9050919050565b6200010381620000e5565b81146200010e575f80fd5b50565b5f815190506200012181620000f8565b92915050565b5f602082840312156200013f576200013e620000c2565b5b5f6200014e8482850162000111565b91505092915050565b611f2080620001655f395ff3fe608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063c392f76611610095578063d5a44f8611610064578063d5a44f86146102e4578063d80e870014610317578063f3a93e8014610335578063fc0c546a14610351576100fd565b8063c392f76614610249578063c935297114610267578063c9ec05ea14610298578063d279c191146102c8576100fd565b806378317be7116100d157806378317be7146101c15780638b7afe2e146101dd5780638da5cb5b146101fb57806390eb298114610219576100fd565b806264f50c146101015780630700037d146101315780630a42f049146101615780632671b0d814610191575b5f80fd5b61011b6004803603810190610116919061144f565b61036f565b6040516101289190611494565b60405180910390f35b61014b6004803603810190610146919061144f565b6103d0565b60405161015891906114c5565b60405180910390f35b61017b60048036038101906101769190611508565b6103e5565b60405161018891906114c5565b60405180910390f35b6101ab60048036038101906101a6919061144f565b610402565b6040516101b891906115ea565b60405180910390f35b6101db60048036038101906101d6919061144f565b6105ab565b005b6101e561079f565b6040516101f291906114c5565b60405180910390f35b61020361083e565b6040516102109190611619565b60405180910390f35b610233600480360381019061022e9190611508565b610863565b6040516102409190611619565b60405180910390f35b610251610893565b60405161025e91906114c5565b60405180910390f35b610281600480360381019061027c919061144f565b610899565b60405161028f92919061173c565b60405180910390f35b6102b260048036038101906102ad9190611771565b610b16565b6040516102bf91906114c5565b60405180910390f35b6102e260048036038101906102dd919061144f565b610ea8565b005b6102fe60048036038101906102f99190611508565b61116f565b60405161030e94939291906117af565b60405180910390f35b61031f6111a7565b60405161032c91906114c5565b60405180910390f35b61034f600480360381019061034a9190611508565b6111ae565b005b61035961136e565b604051610366919061184d565b60405180910390f35b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541180156103c957506078426004546103c79190611893565b115b9050919050565b6007602052805f5260405f205f915090505481565b5f60065f8381526020019081526020015f20600101549050919050565b60605f805b6104105f611393565b811161049b578373ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610488578180610484906118c6565b9250505b8080610493906118c6565b915050610407565b505f8167ffffffffffffffff8111156104b7576104b661190d565b5b6040519080825280602002602001820160405280156104e55781602001602082028036833780820191505090505b5090505f805b6104f45f611393565b811161059f578573ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361058c57808383815181106105715761057061193a565b5b6020026020010181815250508180610588906118c6565b9250505b8080610597906118c6565b9150506104eb565b50819350505050919050565b5f6105b582610402565b90505f8151116105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f1906119c1565b60405180910390fd5b5f5b815181101561079a5760065f83838151811061061b5761061a61193a565b5b602002602001015181526020019081526020015f206003015f9054906101000a900460ff166107875760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360065f8686815181106106985761069761193a565b5b602002602001015181526020019081526020015f205f01546040518363ffffffff1660e01b81526004016106cd9291906119df565b6020604051808303815f875af11580156106e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070d9190611a30565b505f60065f8484815181106107255761072461193a565b5b602002602001015181526020019081526020015f205f0181905550600160065f8484815181106107585761075761193a565b5b602002602001015181526020019081526020015f206003015f6101000a81548160ff0219169083151502179055505b8080610792906118c6565b9150506105fc565b505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fa9190611619565b602060405180830381865afa158015610815573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108399190611a6f565b905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6060805f805b6108a85f611393565b8111610933578473ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361092057818061091c906118c6565b9250505b808061092b906118c6565b91505061089f565b505f8167ffffffffffffffff81111561094f5761094e61190d565b5b60405190808252806020026020018201604052801561098857816020015b6109756113cb565b81526020019060019003908161096d5790505b5090505f8267ffffffffffffffff8111156109a6576109a561190d565b5b6040519080825280602002602001820160405280156109d45781602001602082028036833780820191505090505b5090505f805b6109e35f611393565b8111610b06578773ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610aec5760065f8281526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050848381518110610ab257610ab161193a565b5b602002602001018190525080838381518110610ad157610ad061193a565b5b6020026020010181815250508180610ae8906118c6565b9250505b848211610b06578080610afe906118c6565b9150506109da565b5081839550955050505050915091565b5f610b205f61139f565b5f8311610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611ae4565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610bbd9190611619565b602060405180830381865afa158015610bd8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611a6f565b1015610c3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3490611b72565b60405180910390fd5b6002821480610c4c5750600482145b80610c575750600682145b80610c625750600882145b80610c6d5750600a82145b610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca390611c00565b60405180910390fd5b5f4290503360055f610cbd5f611393565b81526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610d6593929190611c1e565b6020604051808303815f875af1158015610d81573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da59190611a30565b610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90611cc3565b60405180910390fd5b8360065f610df15f611393565b81526020019081526020015f205f015f828254610e0e9190611ce1565b925050819055508060065f610e225f611393565b81526020019081526020015f2060010181905550603c83610e439190611d14565b60065f610e4f5f611393565b81526020019081526020015f20600201819055505f60065f610e705f611393565b81526020019081526020015f206003015f6101000a81548160ff021916908315150217905550610e9f5f611393565b91505092915050565b607842600454610eb89190611893565b11610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611d9f565b60405180910390fd5b426004819055505f610f0982610402565b90505f815111610f4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4590611e07565b60405180910390fd5b5f5b8151811015610fcf5760065f838381518110610f6f57610f6e61193a565b5b602002602001015181526020019081526020015f206003015f9054906101000a900460ff16610fbc57610fbb828281518110610fae57610fad61193a565b5b60200260200101516111ae565b5b8080610fc7906118c6565b915050610f50565b505f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161104f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104690611e6f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040518363ffffffff1660e01b81526004016110e89291906119df565b6020604051808303815f875af1158015611104573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111289190611a30565b505f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6006602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900460ff16905084565b5f42905090565b5f4290505f60065f8481526020019081526020015f2060010154826111d39190611893565b90505f6111f48260065f8781526020019081526020015f20600201546113b3565b905060648160035460065f8881526020019081526020015f205f015461121a9190611d14565b6112249190611d14565b61122e9190611eba565b60075f60055f8881526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546112a69190611ce1565b60075f60055f8881526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508260065f8681526020019081526020015f20600101819055508060065f8681526020019081526020015f20600201546113509190611893565b60065f8681526020019081526020015f206002018190555050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f815f01549050919050565b6001815f015f828254019250508190555050565b5f8183106113c157816113c3565b825b905092915050565b60405180608001604052805f81526020015f81526020015f81526020015f151581525090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61141e826113f5565b9050919050565b61142e81611414565b8114611438575f80fd5b50565b5f8135905061144981611425565b92915050565b5f60208284031215611464576114636113f1565b5b5f6114718482850161143b565b91505092915050565b5f8115159050919050565b61148e8161147a565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f819050919050565b6114bf816114ad565b82525050565b5f6020820190506114d85f8301846114b6565b92915050565b6114e7816114ad565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f6020828403121561151d5761151c6113f1565b5b5f61152a848285016114f4565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611565816114ad565b82525050565b5f611576838361155c565b60208301905092915050565b5f602082019050919050565b5f61159882611533565b6115a2818561153d565b93506115ad8361154d565b805f5b838110156115dd5781516115c4888261156b565b97506115cf83611582565b9250506001810190506115b0565b5085935050505092915050565b5f6020820190508181035f830152611602818461158e565b905092915050565b61161381611414565b82525050565b5f60208201905061162c5f83018461160a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116648161147a565b82525050565b608082015f82015161167e5f85018261155c565b506020820151611691602085018261155c565b5060408201516116a4604085018261155c565b5060608201516116b7606085018261165b565b50505050565b5f6116c8838361166a565b60808301905092915050565b5f602082019050919050565b5f6116ea82611632565b6116f4818561163c565b93506116ff8361164c565b805f5b8381101561172f57815161171688826116bd565b9750611721836116d4565b925050600181019050611702565b5085935050505092915050565b5f6040820190508181035f830152611754818561158e565b9050818103602083015261176881846116e0565b90509392505050565b5f8060408385031215611787576117866113f1565b5b5f611794858286016114f4565b92505060206117a5858286016114f4565b9150509250929050565b5f6080820190506117c25f8301876114b6565b6117cf60208301866114b6565b6117dc60408301856114b6565b6117e96060830184611485565b95945050505050565b5f819050919050565b5f61181561181061180b846113f5565b6117f2565b6113f5565b9050919050565b5f611826826117fb565b9050919050565b5f6118378261181c565b9050919050565b6118478161182d565b82525050565b5f6020820190506118605f83018461183e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61189d826114ad565b91506118a8836114ad565b92508282039050818111156118c0576118bf611866565b5b92915050565b5f6118d0826114ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361190257611901611866565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4e6f20616d6f756e74207374616b6564000000000000000000000000000000005f82015250565b5f6119ab601083611967565b91506119b682611977565b602082019050919050565b5f6020820190508181035f8301526119d88161199f565b9050919050565b5f6040820190506119f25f83018561160a565b6119ff60208301846114b6565b9392505050565b611a0f8161147a565b8114611a19575f80fd5b50565b5f81519050611a2a81611a06565b92915050565b5f60208284031215611a4557611a446113f1565b5b5f611a5284828501611a1c565b91505092915050565b5f81519050611a69816114de565b92915050565b5f60208284031215611a8457611a836113f1565b5b5f611a9184828501611a5b565b91505092915050565b7f4d757374207374616b65206d6f7265207468616e207a65726f20746f6b656e735f82015250565b5f611ace602083611967565b9150611ad982611a9a565b602082019050919050565b5f6020820190508181035f830152611afb81611ac2565b9050919050565b7f4e6f7420456e6f7567682042616c616e636520546f6b656e7320546f205374615f8201527f6b65000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b5c602283611967565b9150611b6782611b02565b604082019050919050565b5f6020820190508181035f830152611b8981611b50565b9050919050565b7f5461727269662063616e204f6e6c79206265206f6620322c342c362c382c31305f8201527f204d696e75746573000000000000000000000000000000000000000000000000602082015250565b5f611bea602883611967565b9150611bf582611b90565b604082019050919050565b5f6020820190508181035f830152611c1781611bde565b9050919050565b5f606082019050611c315f83018661160a565b611c3e602083018561160a565b611c4b60408301846114b6565b949350505050565b7f4769766520617070726f76616c2066726f6d20696e697469616c20746f2073745f8201527f616b650000000000000000000000000000000000000000000000000000000000602082015250565b5f611cad602383611967565b9150611cb882611c53565b604082019050919050565b5f6020820190508181035f830152611cda81611ca1565b9050919050565b5f611ceb826114ad565b9150611cf6836114ad565b9250828201905080821115611d0e57611d0d611866565b5b92915050565b5f611d1e826114ad565b9150611d29836114ad565b9250828202611d37816114ad565b91508282048414831517611d4e57611d4d611866565b5b5092915050565b7f436f6f6c646f776e2054696d65000000000000000000000000000000000000005f82015250565b5f611d89600d83611967565b9150611d9482611d55565b602082019050919050565b5f6020820190508181035f830152611db681611d7d565b9050919050565b7f596f7520686176656e2774207374616b656420616e7920616d6f756e740000005f82015250565b5f611df1601d83611967565b9150611dfc82611dbd565b602082019050919050565b5f6020820190508181035f830152611e1e81611de5565b9050919050565b7f4e6f2072657761726420746f20636c61696d00000000000000000000000000005f82015250565b5f611e59601283611967565b9150611e6482611e25565b602082019050919050565b5f6020820190508181035f830152611e8681611e4d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ec4826114ad565b9150611ecf836114ad565b925082611edf57611ede611e8d565b5b82820490509291505056fea26469706673582212206b7577b14fa31c322171130a717455efa4668fb726e1d6f114b12d2d5f93678d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2085 CODESIZE SUB DUP1 PUSH3 0x2085 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0x127 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x157 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF1 DUP3 PUSH3 0xC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x103 DUP2 PUSH3 0xE5 JUMP JUMPDEST DUP2 EQ PUSH3 0x10E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x121 DUP2 PUSH3 0xF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x13F JUMPI PUSH3 0x13E PUSH3 0xC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x14E DUP5 DUP3 DUP6 ADD PUSH3 0x111 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F20 DUP1 PUSH3 0x165 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC392F766 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD5A44F86 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xD80E8700 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF3A93E80 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x351 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0xC392F766 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xC9352971 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xC9EC05EA EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xD279C191 EQ PUSH2 0x2C8 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x78317BE7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x78317BE7 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x90EB2981 EQ PUSH2 0x219 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x64F50C EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA42F049 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2671B0D8 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP3 SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0xEA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT DUP1 ISZERO PUSH2 0x3C9 JUMPI POP PUSH1 0x78 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 JUMPDEST PUSH2 0x410 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x49B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x488 JUMPI DUP2 DUP1 PUSH2 0x484 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x493 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x407 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x4F4 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x59F JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58C JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x588 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x597 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4EB JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B5 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x6 PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x787 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH0 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x698 JUMPI PUSH2 0x697 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x725 JUMPI PUSH2 0x724 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x792 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x815 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 JUMPDEST PUSH2 0x8A8 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x933 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x920 JUMPI DUP2 DUP1 PUSH2 0x91C SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x92B SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x89F JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x988 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x975 PUSH2 0x13CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x96D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x9E3 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0xB06 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEC JUMPI PUSH1 0x6 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAB2 JUMPI PUSH2 0xAB1 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD0 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0xAE8 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP5 DUP3 GT PUSH2 0xB06 JUMPI DUP1 DUP1 PUSH2 0xAFE SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DA JUMP JUMPDEST POP DUP2 DUP4 SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH0 PUSH2 0x139F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB59 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST LT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0xC4C JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC57 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC62 JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC6D JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA3 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP CALLER PUSH1 0x5 PUSH0 PUSH2 0xCBD PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDB SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 PUSH2 0xDF1 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0xE22 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3C DUP4 PUSH2 0xE43 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x6 PUSH0 PUSH2 0xE4F PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0xE70 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE9F PUSH0 PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x78 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST GT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xF09 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF45 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x6 PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFBC JUMPI PUSH2 0xFBB DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAD PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x11AE JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xFC7 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF50 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1046 SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11F4 DUP3 PUSH1 0x6 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0x3 SLOAD PUSH1 0x6 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1350 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x13C1 JUMPI DUP2 PUSH2 0x13C3 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141E DUP3 PUSH2 0x13F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142E DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP2 EQ PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1449 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1471 DUP5 DUP3 DUP6 ADD PUSH2 0x143B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x147A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BF DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152A DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1576 DUP4 DUP4 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1598 DUP3 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x15A2 DUP2 DUP6 PUSH2 0x153D JUMP JUMPDEST SWAP4 POP PUSH2 0x15AD DUP4 PUSH2 0x154D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DD JUMPI DUP2 MLOAD PUSH2 0x15C4 DUP9 DUP3 PUSH2 0x156B JUMP JUMPDEST SWAP8 POP PUSH2 0x15CF DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15B0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1602 DUP2 DUP5 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1613 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162C PUSH0 DUP4 ADD DUP5 PUSH2 0x160A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1664 DUP2 PUSH2 0x147A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x167E PUSH0 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1691 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16A4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16B7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C8 DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x163C JUMP JUMPDEST SWAP4 POP PUSH2 0x16FF DUP4 PUSH2 0x164C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x172F JUMPI DUP2 MLOAD PUSH2 0x1716 DUP9 DUP3 PUSH2 0x16BD JUMP JUMPDEST SWAP8 POP PUSH2 0x1721 DUP4 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1702 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1754 DUP2 DUP6 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1768 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17C2 PUSH0 DUP4 ADD DUP8 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17E9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1815 PUSH2 0x1810 PUSH2 0x180B DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1826 DUP3 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1837 DUP3 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1847 DUP2 PUSH2 0x182D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1860 PUSH0 DUP4 ADD DUP5 PUSH2 0x183E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x189D DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x18A8 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D0 DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1902 JUMPI PUSH2 0x1901 PUSH2 0x1866 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616D6F756E74207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AB PUSH1 0x10 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B6 DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D8 DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x19FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x147A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A2A DUP2 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A69 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A83 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A91 DUP5 DUP3 DUP6 ADD PUSH2 0x1A5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374207374616B65206D6F7265207468616E207A65726F20746F6B656E73 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACE PUSH1 0x20 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD9 DUP3 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFB DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682042616C616E636520546F6B656E7320546F20537461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5C PUSH1 0x22 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B67 DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B89 DUP2 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461727269662063616E204F6E6C79206265206F6620322C342C362C382C3130 PUSH0 DUP3 ADD MSTORE PUSH32 0x204D696E75746573000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA PUSH1 0x28 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF5 DUP3 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C17 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C31 PUSH0 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C3E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C4B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4769766520617070726F76616C2066726F6D20696E697469616C20746F207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAD PUSH1 0x23 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CDA DUP2 PUSH2 0x1CA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEB DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF6 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1E DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D29 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D37 DUP2 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E2054696D6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D89 PUSH1 0xD DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520686176656E2774207374616B656420616E7920616D6F756E74000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF1 PUSH1 0x1D DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFC DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1E DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420746F20636C61696D0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E59 PUSH1 0x12 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E86 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EC4 DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x7577B14FA31C322171130A71 PUSH21 0x55EFA4668FB726E1D6F114B12D2D5F93678D64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "759:8037:2:-:0;;;947:1;921:27;;1486:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1613:6;1598:5;;:22;;;;;;;;;;;;;;;;;;1638:10;1630:5;;:18;;;;;;;;;;;;;;;;;;1486:169;759:8037;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;759:8037:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CurrentTime_573": {
									"entryPoint": 4519,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@IdsAndDetails_453": {
									"entryPoint": 2201,
									"id": 453,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@Stake_337": {
									"entryPoint": 2838,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimAmount_855": {
									"entryPoint": 1451,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_779": {
									"entryPoint": 3752,
									"id": 779,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@contractBalance_564": {
									"entryPoint": 1951,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@current_95": {
									"entryPoint": 5011,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@genrateReward_663": {
									"entryPoint": 4526,
									"id": 663,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getIds_537": {
									"entryPoint": 1026,
									"id": 537,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_109": {
									"entryPoint": 5023,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@interest_170": {
									"entryPoint": 2195,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isRewardAvailable_687": {
									"entryPoint": 879,
									"id": 687,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_590": {
									"entryPoint": 5043,
									"id": 590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_167": {
									"entryPoint": 2110,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_194": {
									"entryPoint": 976,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTime_550": {
									"entryPoint": 997,
									"id": 550,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stakes_190": {
									"entryPoint": 4463,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingOwner_185": {
									"entryPoint": 2147,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_165": {
									"entryPoint": 4974,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224": {
									"entryPoint": 6914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22764:3",
										"nodeType": "YulBlock",
										"src": "0:22764:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1218:48:3",
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nativeSrc": "1228:32:3",
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nativeSrc": "1246:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nativeSrc": "1239:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:3",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:3",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nativeSrc": "1331:50:3",
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nativeSrc": "1353:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nativeSrc": "1341:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nativeSrc": "1341:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:3",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:3",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nativeSrc": "1479:118:3",
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nativeSrc": "1489:26:3",
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nativeSrc": "1497:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nativeSrc": "1572:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nativeSrc": "1525:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nativeSrc": "1525:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:3",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:3",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:3",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nativeSrc": "1648:32:3",
													"nodeType": "YulBlock",
													"src": "1648:32:3",
													"statements": [
														{
															"nativeSrc": "1658:16:3",
															"nodeType": "YulAssignment",
															"src": "1658:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1669:5:3",
																"nodeType": "YulIdentifier",
																"src": "1669:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1658:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1603:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:3",
														"nodeType": "YulTypedName",
														"src": "1630:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1640:7:3",
														"nodeType": "YulTypedName",
														"src": "1640:7:3",
														"type": ""
													}
												],
												"src": "1603:77:3"
											},
											{
												"body": {
													"nativeSrc": "1751:53:3",
													"nodeType": "YulBlock",
													"src": "1751:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1791:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1773:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:3"
																		},
																		"nativeSrc": "1773:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1761:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:3"
																},
																"nativeSrc": "1761:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1761:37:3"
															},
															"nativeSrc": "1761:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1686:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:3",
														"nodeType": "YulTypedName",
														"src": "1739:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1746:3:3",
														"nodeType": "YulTypedName",
														"src": "1746:3:3",
														"type": ""
													}
												],
												"src": "1686:118:3"
											},
											{
												"body": {
													"nativeSrc": "1908:124:3",
													"nodeType": "YulBlock",
													"src": "1908:124:3",
													"statements": [
														{
															"nativeSrc": "1918:26:3",
															"nodeType": "YulAssignment",
															"src": "1918:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:3"
																},
																"nativeSrc": "1926:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:3"
																		},
																		"nativeSrc": "2007:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1954:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1954:43:3"
																},
																"nativeSrc": "1954:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1954:71:3"
															},
															"nativeSrc": "1954:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1954:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1810:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:3",
														"nodeType": "YulTypedName",
														"src": "1880:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1892:6:3",
														"nodeType": "YulTypedName",
														"src": "1892:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1903:4:3",
														"nodeType": "YulTypedName",
														"src": "1903:4:3",
														"type": ""
													}
												],
												"src": "1810:222:3"
											},
											{
												"body": {
													"nativeSrc": "2081:79:3",
													"nodeType": "YulBlock",
													"src": "2081:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2138:16:3",
																"nodeType": "YulBlock",
																"src": "2138:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2147:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2147:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2150:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2140:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:3"
																			},
																			"nativeSrc": "2140:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2140:12:3"
																		},
																		"nativeSrc": "2140:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2140:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2104:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2104:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2129:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2129:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2111:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2111:17:3"
																				},
																				"nativeSrc": "2111:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2101:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2101:2:3"
																		},
																		"nativeSrc": "2101:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2094:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:3"
																},
																"nativeSrc": "2094:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2094:43:3"
															},
															"nativeSrc": "2091:63:3",
															"nodeType": "YulIf",
															"src": "2091:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2038:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2074:5:3",
														"nodeType": "YulTypedName",
														"src": "2074:5:3",
														"type": ""
													}
												],
												"src": "2038:122:3"
											},
											{
												"body": {
													"nativeSrc": "2218:87:3",
													"nodeType": "YulBlock",
													"src": "2218:87:3",
													"statements": [
														{
															"nativeSrc": "2228:29:3",
															"nodeType": "YulAssignment",
															"src": "2228:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2250:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2250:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2237:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2237:12:3"
																},
																"nativeSrc": "2237:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2237:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2228:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2266:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2266:26:3"
																},
																"nativeSrc": "2266:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2266:33:3"
															},
															"nativeSrc": "2266:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2266:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2166:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2196:6:3",
														"nodeType": "YulTypedName",
														"src": "2196:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2204:3:3",
														"nodeType": "YulTypedName",
														"src": "2204:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2212:5:3",
														"nodeType": "YulTypedName",
														"src": "2212:5:3",
														"type": ""
													}
												],
												"src": "2166:139:3"
											},
											{
												"body": {
													"nativeSrc": "2377:263:3",
													"nodeType": "YulBlock",
													"src": "2377:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2423:83:3",
																"nodeType": "YulBlock",
																"src": "2423:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2425:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2425:77:3"
																			},
																			"nativeSrc": "2425:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2425:79:3"
																		},
																		"nativeSrc": "2425:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2398:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2398:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2407:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2394:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:3"
																		},
																		"nativeSrc": "2394:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2419:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2390:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:3"
																},
																"nativeSrc": "2390:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2390:32:3"
															},
															"nativeSrc": "2387:119:3",
															"nodeType": "YulIf",
															"src": "2387:119:3"
														},
														{
															"nativeSrc": "2516:117:3",
															"nodeType": "YulBlock",
															"src": "2516:117:3",
															"statements": [
																{
																	"nativeSrc": "2531:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2531:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2545:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2535:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2535:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2560:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2560:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2595:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2595:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2606:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2606:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2591:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2591:3:3"
																				},
																				"nativeSrc": "2591:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2591:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2615:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2615:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2570:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2570:20:3"
																		},
																		"nativeSrc": "2570:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2570:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2560:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2560:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2311:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2347:9:3",
														"nodeType": "YulTypedName",
														"src": "2347:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2358:7:3",
														"nodeType": "YulTypedName",
														"src": "2358:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2370:6:3",
														"nodeType": "YulTypedName",
														"src": "2370:6:3",
														"type": ""
													}
												],
												"src": "2311:329:3"
											},
											{
												"body": {
													"nativeSrc": "2720:40:3",
													"nodeType": "YulBlock",
													"src": "2720:40:3",
													"statements": [
														{
															"nativeSrc": "2731:22:3",
															"nodeType": "YulAssignment",
															"src": "2731:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2747:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2747:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2741:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2741:5:3"
																},
																"nativeSrc": "2741:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2741:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2731:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "2646:114:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2703:5:3",
														"nodeType": "YulTypedName",
														"src": "2703:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2713:6:3",
														"nodeType": "YulTypedName",
														"src": "2713:6:3",
														"type": ""
													}
												],
												"src": "2646:114:3"
											},
											{
												"body": {
													"nativeSrc": "2877:73:3",
													"nodeType": "YulBlock",
													"src": "2877:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2894:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2899:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2887:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2887:6:3"
																},
																"nativeSrc": "2887:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2887:19:3"
															},
															"nativeSrc": "2887:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2887:19:3"
														},
														{
															"nativeSrc": "2915:29:3",
															"nodeType": "YulAssignment",
															"src": "2915:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2934:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2934:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2939:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2939:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2930:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:3"
																},
																"nativeSrc": "2930:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2930:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2915:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2915:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2766:184:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2849:3:3",
														"nodeType": "YulTypedName",
														"src": "2849:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2854:6:3",
														"nodeType": "YulTypedName",
														"src": "2854:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2865:11:3",
														"nodeType": "YulTypedName",
														"src": "2865:11:3",
														"type": ""
													}
												],
												"src": "2766:184:3"
											},
											{
												"body": {
													"nativeSrc": "3028:60:3",
													"nodeType": "YulBlock",
													"src": "3028:60:3",
													"statements": [
														{
															"nativeSrc": "3038:11:3",
															"nodeType": "YulAssignment",
															"src": "3038:11:3",
															"value": {
																"name": "ptr",
																"nativeSrc": "3046:3:3",
																"nodeType": "YulIdentifier",
																"src": "3046:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3038:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3038:4:3"
																}
															]
														},
														{
															"nativeSrc": "3059:22:3",
															"nodeType": "YulAssignment",
															"src": "3059:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3071:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3071:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3076:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3076:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3067:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:3"
																},
																"nativeSrc": "3067:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3067:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3059:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3059:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "2956:132:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3015:3:3",
														"nodeType": "YulTypedName",
														"src": "3015:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3023:4:3",
														"nodeType": "YulTypedName",
														"src": "3023:4:3",
														"type": ""
													}
												],
												"src": "2956:132:3"
											},
											{
												"body": {
													"nativeSrc": "3149:53:3",
													"nodeType": "YulBlock",
													"src": "3149:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3166:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3166:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3189:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3189:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3171:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3171:17:3"
																		},
																		"nativeSrc": "3171:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3159:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:3"
																},
																"nativeSrc": "3159:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3159:37:3"
															},
															"nativeSrc": "3159:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3159:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3094:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3137:5:3",
														"nodeType": "YulTypedName",
														"src": "3137:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3144:3:3",
														"nodeType": "YulTypedName",
														"src": "3144:3:3",
														"type": ""
													}
												],
												"src": "3094:108:3"
											},
											{
												"body": {
													"nativeSrc": "3288:99:3",
													"nodeType": "YulBlock",
													"src": "3288:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3332:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3332:6:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3340:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3340:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "3298:33:3",
																	"nodeType": "YulIdentifier",
																	"src": "3298:33:3"
																},
																"nativeSrc": "3298:46:3",
																"nodeType": "YulFunctionCall",
																"src": "3298:46:3"
															},
															"nativeSrc": "3298:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "3298:46:3"
														},
														{
															"nativeSrc": "3353:28:3",
															"nodeType": "YulAssignment",
															"src": "3353:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3371:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3371:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3376:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3376:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3367:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:3"
																},
																"nativeSrc": "3367:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3367:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3353:10:3",
																	"nodeType": "YulIdentifier",
																	"src": "3353:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "3208:179:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3261:6:3",
														"nodeType": "YulTypedName",
														"src": "3261:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3269:3:3",
														"nodeType": "YulTypedName",
														"src": "3269:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3277:10:3",
														"nodeType": "YulTypedName",
														"src": "3277:10:3",
														"type": ""
													}
												],
												"src": "3208:179:3"
											},
											{
												"body": {
													"nativeSrc": "3468:38:3",
													"nodeType": "YulBlock",
													"src": "3468:38:3",
													"statements": [
														{
															"nativeSrc": "3478:22:3",
															"nodeType": "YulAssignment",
															"src": "3478:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3490:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3490:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3495:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3495:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3486:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3486:3:3"
																},
																"nativeSrc": "3486:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3486:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3478:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3478:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3393:113:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3455:3:3",
														"nodeType": "YulTypedName",
														"src": "3455:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3463:4:3",
														"nodeType": "YulTypedName",
														"src": "3463:4:3",
														"type": ""
													}
												],
												"src": "3393:113:3"
											},
											{
												"body": {
													"nativeSrc": "3666:608:3",
													"nodeType": "YulBlock",
													"src": "3666:608:3",
													"statements": [
														{
															"nativeSrc": "3676:68:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3676:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3738:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3738:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "3690:47:3",
																	"nodeType": "YulIdentifier",
																	"src": "3690:47:3"
																},
																"nativeSrc": "3690:54:3",
																"nodeType": "YulFunctionCall",
																"src": "3690:54:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3680:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3680:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3753:93:3",
															"nodeType": "YulAssignment",
															"src": "3753:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3834:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3834:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3839:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3839:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3760:73:3",
																	"nodeType": "YulIdentifier",
																	"src": "3760:73:3"
																},
																"nativeSrc": "3760:86:3",
																"nodeType": "YulFunctionCall",
																"src": "3760:86:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3753:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:3"
																}
															]
														},
														{
															"nativeSrc": "3855:71:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3855:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3920:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3920:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "3870:49:3",
																	"nodeType": "YulIdentifier",
																	"src": "3870:49:3"
																},
																"nativeSrc": "3870:56:3",
																"nodeType": "YulFunctionCall",
																"src": "3870:56:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3859:7:3",
																	"nodeType": "YulTypedName",
																	"src": "3859:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3935:21:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3935:21:3",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3949:7:3",
																"nodeType": "YulIdentifier",
																"src": "3949:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3939:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3939:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4025:224:3",
																"nodeType": "YulBlock",
																"src": "4025:224:3",
																"statements": [
																	{
																		"nativeSrc": "4039:34:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4039:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4066:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4066:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4060:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4060:5:3"
																			},
																			"nativeSrc": "4060:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4060:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4043:13:3",
																				"nodeType": "YulTypedName",
																				"src": "4043:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4086:70:3",
																		"nodeType": "YulAssignment",
																		"src": "4086:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4137:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "4137:13:3"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4152:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4152:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "4093:43:3",
																				"nodeType": "YulIdentifier",
																				"src": "4093:43:3"
																			},
																			"nativeSrc": "4093:63:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4093:63:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4086:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "4086:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4169:70:3",
																		"nodeType": "YulAssignment",
																		"src": "4169:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4232:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4232:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "4179:52:3",
																				"nodeType": "YulIdentifier",
																				"src": "4179:52:3"
																			},
																			"nativeSrc": "4179:60:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4179:60:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4169:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4169:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3987:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3987:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3990:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3984:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3984:2:3"
																},
																"nativeSrc": "3984:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3984:13:3"
															},
															"nativeSrc": "3965:284:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3998:18:3",
																"nodeType": "YulBlock",
																"src": "3998:18:3",
																"statements": [
																	{
																		"nativeSrc": "4000:14:3",
																		"nodeType": "YulAssignment",
																		"src": "4000:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4009:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "4009:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4012:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4012:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4005:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "4005:3:3"
																			},
																			"nativeSrc": "4005:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4005:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4000:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "4000:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3969:14:3",
																"nodeType": "YulBlock",
																"src": "3969:14:3",
																"statements": [
																	{
																		"nativeSrc": "3971:10:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3971:10:3",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3980:1:3",
																			"nodeType": "YulLiteral",
																			"src": "3980:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3975:1:3",
																				"nodeType": "YulTypedName",
																				"src": "3975:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3965:284:3"
														},
														{
															"nativeSrc": "4258:10:3",
															"nodeType": "YulAssignment",
															"src": "4258:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4265:3:3",
																"nodeType": "YulIdentifier",
																"src": "4265:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4258:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4258:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3542:732:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3645:5:3",
														"nodeType": "YulTypedName",
														"src": "3645:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3652:3:3",
														"nodeType": "YulTypedName",
														"src": "3652:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3661:3:3",
														"nodeType": "YulTypedName",
														"src": "3661:3:3",
														"type": ""
													}
												],
												"src": "3542:732:3"
											},
											{
												"body": {
													"nativeSrc": "4428:225:3",
													"nodeType": "YulBlock",
													"src": "4428:225:3",
													"statements": [
														{
															"nativeSrc": "4438:26:3",
															"nodeType": "YulAssignment",
															"src": "4438:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4450:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4450:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4446:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:3"
																},
																"nativeSrc": "4446:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4446:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4438:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4438:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4485:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4485:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4496:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4496:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4481:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4481:3:3"
																		},
																		"nativeSrc": "4481:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4481:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4504:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4504:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4510:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4500:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:3"
																		},
																		"nativeSrc": "4500:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4500:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4474:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:3"
																},
																"nativeSrc": "4474:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4474:47:3"
															},
															"nativeSrc": "4474:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4474:47:3"
														},
														{
															"nativeSrc": "4530:116:3",
															"nodeType": "YulAssignment",
															"src": "4530:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4632:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4641:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4641:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4538:93:3",
																	"nodeType": "YulIdentifier",
																	"src": "4538:93:3"
																},
																"nativeSrc": "4538:108:3",
																"nodeType": "YulFunctionCall",
																"src": "4538:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4530:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4530:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4280:373:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4400:9:3",
														"nodeType": "YulTypedName",
														"src": "4400:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4412:6:3",
														"nodeType": "YulTypedName",
														"src": "4412:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4423:4:3",
														"nodeType": "YulTypedName",
														"src": "4423:4:3",
														"type": ""
													}
												],
												"src": "4280:373:3"
											},
											{
												"body": {
													"nativeSrc": "4724:53:3",
													"nodeType": "YulBlock",
													"src": "4724:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4741:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4764:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4764:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4746:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "4746:17:3"
																		},
																		"nativeSrc": "4746:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:3"
																},
																"nativeSrc": "4734:37:3",
																"nodeType": "YulFunctionCall",
																"src": "4734:37:3"
															},
															"nativeSrc": "4734:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "4734:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4659:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4712:5:3",
														"nodeType": "YulTypedName",
														"src": "4712:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4719:3:3",
														"nodeType": "YulTypedName",
														"src": "4719:3:3",
														"type": ""
													}
												],
												"src": "4659:118:3"
											},
											{
												"body": {
													"nativeSrc": "4881:124:3",
													"nodeType": "YulBlock",
													"src": "4881:124:3",
													"statements": [
														{
															"nativeSrc": "4891:26:3",
															"nodeType": "YulAssignment",
															"src": "4891:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4903:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4903:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4914:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4914:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4899:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4899:3:3"
																},
																"nativeSrc": "4899:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4899:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4891:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4891:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4971:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4971:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4984:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4995:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4995:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4980:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:3"
																		},
																		"nativeSrc": "4980:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4980:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4927:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4927:43:3"
																},
																"nativeSrc": "4927:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4927:71:3"
															},
															"nativeSrc": "4927:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4927:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4783:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4853:9:3",
														"nodeType": "YulTypedName",
														"src": "4853:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4865:6:3",
														"nodeType": "YulTypedName",
														"src": "4865:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4876:4:3",
														"nodeType": "YulTypedName",
														"src": "4876:4:3",
														"type": ""
													}
												],
												"src": "4783:222:3"
											},
											{
												"body": {
													"nativeSrc": "5113:40:3",
													"nodeType": "YulBlock",
													"src": "5113:40:3",
													"statements": [
														{
															"nativeSrc": "5124:22:3",
															"nodeType": "YulAssignment",
															"src": "5124:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5140:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5140:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5134:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5134:5:3"
																},
																"nativeSrc": "5134:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5134:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5124:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5011:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5096:5:3",
														"nodeType": "YulTypedName",
														"src": "5096:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5106:6:3",
														"nodeType": "YulTypedName",
														"src": "5106:6:3",
														"type": ""
													}
												],
												"src": "5011:142:3"
											},
											{
												"body": {
													"nativeSrc": "5298:73:3",
													"nodeType": "YulBlock",
													"src": "5298:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5315:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5315:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5320:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5308:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:3"
																},
																"nativeSrc": "5308:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5308:19:3"
															},
															"nativeSrc": "5308:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "5308:19:3"
														},
														{
															"nativeSrc": "5336:29:3",
															"nodeType": "YulAssignment",
															"src": "5336:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5355:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5355:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5360:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5360:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5351:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:3"
																},
																"nativeSrc": "5351:14:3",
																"nodeType": "YulFunctionCall",
																"src": "5351:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5336:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "5336:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5159:212:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5270:3:3",
														"nodeType": "YulTypedName",
														"src": "5270:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5275:6:3",
														"nodeType": "YulTypedName",
														"src": "5275:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5286:11:3",
														"nodeType": "YulTypedName",
														"src": "5286:11:3",
														"type": ""
													}
												],
												"src": "5159:212:3"
											},
											{
												"body": {
													"nativeSrc": "5477:60:3",
													"nodeType": "YulBlock",
													"src": "5477:60:3",
													"statements": [
														{
															"nativeSrc": "5487:11:3",
															"nodeType": "YulAssignment",
															"src": "5487:11:3",
															"value": {
																"name": "ptr",
																"nativeSrc": "5495:3:3",
																"nodeType": "YulIdentifier",
																"src": "5495:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5487:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5487:4:3"
																}
															]
														},
														{
															"nativeSrc": "5508:22:3",
															"nodeType": "YulAssignment",
															"src": "5508:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5520:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5525:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5525:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5516:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:3"
																},
																"nativeSrc": "5516:14:3",
																"nodeType": "YulFunctionCall",
																"src": "5516:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5508:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5508:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5377:160:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5464:3:3",
														"nodeType": "YulTypedName",
														"src": "5464:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5472:4:3",
														"nodeType": "YulTypedName",
														"src": "5472:4:3",
														"type": ""
													}
												],
												"src": "5377:160:3"
											},
											{
												"body": {
													"nativeSrc": "5592:50:3",
													"nodeType": "YulBlock",
													"src": "5592:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5609:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5609:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5629:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5629:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5614:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "5614:14:3"
																		},
																		"nativeSrc": "5614:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5614:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5602:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:3"
																},
																"nativeSrc": "5602:34:3",
																"nodeType": "YulFunctionCall",
																"src": "5602:34:3"
															},
															"nativeSrc": "5602:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "5602:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "5543:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5580:5:3",
														"nodeType": "YulTypedName",
														"src": "5580:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5587:3:3",
														"nodeType": "YulTypedName",
														"src": "5587:3:3",
														"type": ""
													}
												],
												"src": "5543:99:3"
											},
											{
												"body": {
													"nativeSrc": "5824:754:3",
													"nodeType": "YulBlock",
													"src": "5824:754:3",
													"statements": [
														{
															"nativeSrc": "5834:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "5834:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5850:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5850:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5855:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5846:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5846:3:3"
																},
																"nativeSrc": "5846:14:3",
																"nodeType": "YulFunctionCall",
																"src": "5846:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5838:4:3",
																	"nodeType": "YulTypedName",
																	"src": "5838:4:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5870:172:3",
															"nodeType": "YulBlock",
															"src": "5870:172:3",
															"statements": [
																{
																	"nativeSrc": "5913:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5913:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5943:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5943:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5950:4:3",
																						"nodeType": "YulLiteral",
																						"src": "5950:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:3"
																				},
																				"nativeSrc": "5939:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5933:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "5933:5:3"
																		},
																		"nativeSrc": "5933:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5933:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5917:12:3",
																			"nodeType": "YulTypedName",
																			"src": "5917:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6003:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6003:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6021:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6021:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6026:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6026:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6017:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6017:3:3"
																				},
																				"nativeSrc": "6017:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6017:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5969:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "5969:33:3"
																		},
																		"nativeSrc": "5969:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5969:63:3"
																	},
																	"nativeSrc": "5969:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "5969:63:3"
																}
															]
														},
														{
															"nativeSrc": "6052:170:3",
															"nodeType": "YulBlock",
															"src": "6052:170:3",
															"statements": [
																{
																	"nativeSrc": "6093:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6093:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6123:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6123:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6130:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6130:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6119:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6119:3:3"
																				},
																				"nativeSrc": "6119:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6119:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6113:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6113:5:3"
																		},
																		"nativeSrc": "6113:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6097:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6097:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6183:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6183:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6201:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6201:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6206:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6206:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6197:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6197:3:3"
																				},
																				"nativeSrc": "6197:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6197:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6149:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6149:33:3"
																		},
																		"nativeSrc": "6149:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6149:63:3"
																	},
																	"nativeSrc": "6149:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6149:63:3"
																}
															]
														},
														{
															"nativeSrc": "6232:168:3",
															"nodeType": "YulBlock",
															"src": "6232:168:3",
															"statements": [
																{
																	"nativeSrc": "6271:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6271:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6301:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6301:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6308:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6308:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6297:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6297:3:3"
																				},
																				"nativeSrc": "6297:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6297:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6291:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6291:5:3"
																		},
																		"nativeSrc": "6291:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6291:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6275:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6275:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6361:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6361:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6379:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6379:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6384:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6384:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6375:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6375:3:3"
																				},
																				"nativeSrc": "6375:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6375:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6327:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "6327:33:3"
																		},
																		"nativeSrc": "6327:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6327:63:3"
																	},
																	"nativeSrc": "6327:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6327:63:3"
																}
															]
														},
														{
															"nativeSrc": "6410:161:3",
															"nodeType": "YulBlock",
															"src": "6410:161:3",
															"statements": [
																{
																	"nativeSrc": "6448:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6448:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6478:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6478:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6485:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6485:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6474:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6474:3:3"
																				},
																				"nativeSrc": "6474:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6474:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6468:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6468:5:3"
																		},
																		"nativeSrc": "6468:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6468:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6452:12:3",
																			"nodeType": "YulTypedName",
																			"src": "6452:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6532:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "6532:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6550:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6550:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6555:4:3",
																						"nodeType": "YulLiteral",
																						"src": "6555:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6546:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6546:3:3"
																				},
																				"nativeSrc": "6546:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6546:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "6504:27:3",
																			"nodeType": "YulIdentifier",
																			"src": "6504:27:3"
																		},
																		"nativeSrc": "6504:57:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6504:57:3"
																	},
																	"nativeSrc": "6504:57:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "6504:57:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr",
												"nativeSrc": "5712:866:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5811:5:3",
														"nodeType": "YulTypedName",
														"src": "5811:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5818:3:3",
														"nodeType": "YulTypedName",
														"src": "5818:3:3",
														"type": ""
													}
												],
												"src": "5712:866:3"
											},
											{
												"body": {
													"nativeSrc": "6720:155:3",
													"nodeType": "YulBlock",
													"src": "6720:155:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6820:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6820:6:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6828:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6828:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr",
																	"nativeSrc": "6730:89:3",
																	"nodeType": "YulIdentifier",
																	"src": "6730:89:3"
																},
																"nativeSrc": "6730:102:3",
																"nodeType": "YulFunctionCall",
																"src": "6730:102:3"
															},
															"nativeSrc": "6730:102:3",
															"nodeType": "YulExpressionStatement",
															"src": "6730:102:3"
														},
														{
															"nativeSrc": "6841:28:3",
															"nodeType": "YulAssignment",
															"src": "6841:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6859:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6859:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6864:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6864:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6855:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:3"
																},
																"nativeSrc": "6855:14:3",
																"nodeType": "YulFunctionCall",
																"src": "6855:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6841:10:3",
																	"nodeType": "YulIdentifier",
																	"src": "6841:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr",
												"nativeSrc": "6584:291:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6693:6:3",
														"nodeType": "YulTypedName",
														"src": "6693:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6701:3:3",
														"nodeType": "YulTypedName",
														"src": "6701:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6709:10:3",
														"nodeType": "YulTypedName",
														"src": "6709:10:3",
														"type": ""
													}
												],
												"src": "6584:291:3"
											},
											{
												"body": {
													"nativeSrc": "6984:38:3",
													"nodeType": "YulBlock",
													"src": "6984:38:3",
													"statements": [
														{
															"nativeSrc": "6994:22:3",
															"nodeType": "YulAssignment",
															"src": "6994:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7006:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7006:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7011:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7011:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7002:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7002:3:3"
																},
																"nativeSrc": "7002:14:3",
																"nodeType": "YulFunctionCall",
																"src": "7002:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6994:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6994:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6881:141:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6971:3:3",
														"nodeType": "YulTypedName",
														"src": "6971:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6979:4:3",
														"nodeType": "YulTypedName",
														"src": "6979:4:3",
														"type": ""
													}
												],
												"src": "6881:141:3"
											},
											{
												"body": {
													"nativeSrc": "7276:776:3",
													"nodeType": "YulBlock",
													"src": "7276:776:3",
													"statements": [
														{
															"nativeSrc": "7286:96:3",
															"nodeType": "YulVariableDeclaration",
															"src": "7286:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7376:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7376:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7300:75:3",
																	"nodeType": "YulIdentifier",
																	"src": "7300:75:3"
																},
																"nativeSrc": "7300:82:3",
																"nodeType": "YulFunctionCall",
																"src": "7300:82:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7290:6:3",
																	"nodeType": "YulTypedName",
																	"src": "7290:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7391:121:3",
															"nodeType": "YulAssignment",
															"src": "7391:121:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7500:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7500:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7505:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7505:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7398:101:3",
																	"nodeType": "YulIdentifier",
																	"src": "7398:101:3"
																},
																"nativeSrc": "7398:114:3",
																"nodeType": "YulFunctionCall",
																"src": "7398:114:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7391:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7391:3:3"
																}
															]
														},
														{
															"nativeSrc": "7521:99:3",
															"nodeType": "YulVariableDeclaration",
															"src": "7521:99:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7614:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7614:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7536:77:3",
																	"nodeType": "YulIdentifier",
																	"src": "7536:77:3"
																},
																"nativeSrc": "7536:84:3",
																"nodeType": "YulFunctionCall",
																"src": "7536:84:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7525:7:3",
																	"nodeType": "YulTypedName",
																	"src": "7525:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7629:21:3",
															"nodeType": "YulVariableDeclaration",
															"src": "7629:21:3",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7643:7:3",
																"nodeType": "YulIdentifier",
																"src": "7643:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7633:6:3",
																	"nodeType": "YulTypedName",
																	"src": "7633:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7719:308:3",
																"nodeType": "YulBlock",
																"src": "7719:308:3",
																"statements": [
																	{
																		"nativeSrc": "7733:34:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7733:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7760:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "7760:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7754:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "7754:5:3"
																			},
																			"nativeSrc": "7754:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7754:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7737:13:3",
																				"nodeType": "YulTypedName",
																				"src": "7737:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7780:126:3",
																		"nodeType": "YulAssignment",
																		"src": "7780:126:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7887:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "7887:13:3"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7902:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7902:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr",
																				"nativeSrc": "7787:99:3",
																				"nodeType": "YulIdentifier",
																				"src": "7787:99:3"
																			},
																			"nativeSrc": "7787:119:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7787:119:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7780:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "7780:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7919:98:3",
																		"nodeType": "YulAssignment",
																		"src": "7919:98:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8010:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "8010:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "7929:80:3",
																				"nodeType": "YulIdentifier",
																				"src": "7929:80:3"
																			},
																			"nativeSrc": "7929:88:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7929:88:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7919:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "7919:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7681:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7681:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7684:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7684:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7678:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7678:2:3"
																},
																"nativeSrc": "7678:13:3",
																"nodeType": "YulFunctionCall",
																"src": "7678:13:3"
															},
															"nativeSrc": "7659:368:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7692:18:3",
																"nodeType": "YulBlock",
																"src": "7692:18:3",
																"statements": [
																	{
																		"nativeSrc": "7694:14:3",
																		"nodeType": "YulAssignment",
																		"src": "7694:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7703:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "7703:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7706:1:3",
																					"nodeType": "YulLiteral",
																					"src": "7706:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7699:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "7699:3:3"
																			},
																			"nativeSrc": "7699:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7699:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7694:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "7694:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7663:14:3",
																"nodeType": "YulBlock",
																"src": "7663:14:3",
																"statements": [
																	{
																		"nativeSrc": "7665:10:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7665:10:3",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7674:1:3",
																			"nodeType": "YulLiteral",
																			"src": "7674:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7669:1:3",
																				"nodeType": "YulTypedName",
																				"src": "7669:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7659:368:3"
														},
														{
															"nativeSrc": "8036:10:3",
															"nodeType": "YulAssignment",
															"src": "8036:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "8043:3:3",
																"nodeType": "YulIdentifier",
																"src": "8043:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8036:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8036:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7096:956:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7255:5:3",
														"nodeType": "YulTypedName",
														"src": "7255:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7262:3:3",
														"nodeType": "YulTypedName",
														"src": "7262:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7271:3:3",
														"nodeType": "YulTypedName",
														"src": "7271:3:3",
														"type": ""
													}
												],
												"src": "7096:956:3"
											},
											{
												"body": {
													"nativeSrc": "8340:464:3",
													"nodeType": "YulBlock",
													"src": "8340:464:3",
													"statements": [
														{
															"nativeSrc": "8350:26:3",
															"nodeType": "YulAssignment",
															"src": "8350:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8362:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8362:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8373:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8373:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8358:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8358:3:3"
																},
																"nativeSrc": "8358:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8358:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8350:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8350:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8397:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8397:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8408:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8408:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8393:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8393:3:3"
																		},
																		"nativeSrc": "8393:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8393:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8416:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8416:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8422:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8422:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8412:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8412:3:3"
																		},
																		"nativeSrc": "8412:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8412:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8386:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8386:6:3"
																},
																"nativeSrc": "8386:47:3",
																"nodeType": "YulFunctionCall",
																"src": "8386:47:3"
															},
															"nativeSrc": "8386:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "8386:47:3"
														},
														{
															"nativeSrc": "8442:116:3",
															"nodeType": "YulAssignment",
															"src": "8442:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8544:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8544:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8553:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8553:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8450:93:3",
																	"nodeType": "YulIdentifier",
																	"src": "8450:93:3"
																},
																"nativeSrc": "8450:108:3",
																"nodeType": "YulFunctionCall",
																"src": "8450:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8442:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8442:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8579:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8579:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8590:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8590:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8575:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:3"
																		},
																		"nativeSrc": "8575:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8575:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8599:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8599:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8605:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8605:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8595:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8595:3:3"
																		},
																		"nativeSrc": "8595:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8595:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8568:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:3"
																},
																"nativeSrc": "8568:48:3",
																"nodeType": "YulFunctionCall",
																"src": "8568:48:3"
															},
															"nativeSrc": "8568:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "8568:48:3"
														},
														{
															"nativeSrc": "8625:172:3",
															"nodeType": "YulAssignment",
															"src": "8625:172:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8783:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8783:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8792:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8792:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8633:149:3",
																	"nodeType": "YulIdentifier",
																	"src": "8633:149:3"
																},
																"nativeSrc": "8633:164:3",
																"nodeType": "YulFunctionCall",
																"src": "8633:164:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8625:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8058:746:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8304:9:3",
														"nodeType": "YulTypedName",
														"src": "8304:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8316:6:3",
														"nodeType": "YulTypedName",
														"src": "8316:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8324:6:3",
														"nodeType": "YulTypedName",
														"src": "8324:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8335:4:3",
														"nodeType": "YulTypedName",
														"src": "8335:4:3",
														"type": ""
													}
												],
												"src": "8058:746:3"
											},
											{
												"body": {
													"nativeSrc": "8893:391:3",
													"nodeType": "YulBlock",
													"src": "8893:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "8939:83:3",
																"nodeType": "YulBlock",
																"src": "8939:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8941:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "8941:77:3"
																			},
																			"nativeSrc": "8941:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8941:79:3"
																		},
																		"nativeSrc": "8941:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8941:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8914:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "8914:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8910:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:3"
																		},
																		"nativeSrc": "8910:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8910:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8935:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8935:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8906:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:3"
																},
																"nativeSrc": "8906:32:3",
																"nodeType": "YulFunctionCall",
																"src": "8906:32:3"
															},
															"nativeSrc": "8903:119:3",
															"nodeType": "YulIf",
															"src": "8903:119:3"
														},
														{
															"nativeSrc": "9032:117:3",
															"nodeType": "YulBlock",
															"src": "9032:117:3",
															"statements": [
																{
																	"nativeSrc": "9047:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9047:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9061:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9061:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9051:6:3",
																			"nodeType": "YulTypedName",
																			"src": "9051:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9076:63:3",
																	"nodeType": "YulAssignment",
																	"src": "9076:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9111:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "9111:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9122:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "9122:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9107:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "9107:3:3"
																				},
																				"nativeSrc": "9107:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "9107:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9131:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "9131:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9086:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "9086:20:3"
																		},
																		"nativeSrc": "9086:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9086:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9076:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "9076:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9159:118:3",
															"nodeType": "YulBlock",
															"src": "9159:118:3",
															"statements": [
																{
																	"nativeSrc": "9174:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9174:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9188:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9188:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9178:6:3",
																			"nodeType": "YulTypedName",
																			"src": "9178:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9204:63:3",
																	"nodeType": "YulAssignment",
																	"src": "9204:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9239:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "9239:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9250:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "9250:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9235:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "9235:3:3"
																				},
																				"nativeSrc": "9235:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "9235:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9259:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "9259:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9214:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "9214:20:3"
																		},
																		"nativeSrc": "9214:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9214:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9204:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "9204:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8810:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8855:9:3",
														"nodeType": "YulTypedName",
														"src": "8855:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8866:7:3",
														"nodeType": "YulTypedName",
														"src": "8866:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8878:6:3",
														"nodeType": "YulTypedName",
														"src": "8878:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8886:6:3",
														"nodeType": "YulTypedName",
														"src": "8886:6:3",
														"type": ""
													}
												],
												"src": "8810:474:3"
											},
											{
												"body": {
													"nativeSrc": "9466:365:3",
													"nodeType": "YulBlock",
													"src": "9466:365:3",
													"statements": [
														{
															"nativeSrc": "9476:27:3",
															"nodeType": "YulAssignment",
															"src": "9476:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9488:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9488:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9499:3:3",
																		"nodeType": "YulLiteral",
																		"src": "9499:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9484:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:3"
																},
																"nativeSrc": "9484:19:3",
																"nodeType": "YulFunctionCall",
																"src": "9484:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9476:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9476:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9557:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9557:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9570:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9581:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9581:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9566:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:3"
																		},
																		"nativeSrc": "9566:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9566:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9513:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "9513:43:3"
																},
																"nativeSrc": "9513:71:3",
																"nodeType": "YulFunctionCall",
																"src": "9513:71:3"
															},
															"nativeSrc": "9513:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "9513:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9638:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9638:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9651:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9651:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9662:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9662:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9647:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9647:3:3"
																		},
																		"nativeSrc": "9647:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9647:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9594:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "9594:43:3"
																},
																"nativeSrc": "9594:72:3",
																"nodeType": "YulFunctionCall",
																"src": "9594:72:3"
															},
															"nativeSrc": "9594:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "9594:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9720:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9720:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9733:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9733:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9744:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9744:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9729:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9729:3:3"
																		},
																		"nativeSrc": "9729:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9729:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9676:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "9676:43:3"
																},
																"nativeSrc": "9676:72:3",
																"nodeType": "YulFunctionCall",
																"src": "9676:72:3"
															},
															"nativeSrc": "9676:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "9676:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9796:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9796:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9809:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9809:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9820:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9820:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9805:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:3"
																		},
																		"nativeSrc": "9805:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9758:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "9758:37:3"
																},
																"nativeSrc": "9758:66:3",
																"nodeType": "YulFunctionCall",
																"src": "9758:66:3"
															},
															"nativeSrc": "9758:66:3",
															"nodeType": "YulExpressionStatement",
															"src": "9758:66:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "9290:541:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9414:9:3",
														"nodeType": "YulTypedName",
														"src": "9414:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9426:6:3",
														"nodeType": "YulTypedName",
														"src": "9426:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9434:6:3",
														"nodeType": "YulTypedName",
														"src": "9434:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9442:6:3",
														"nodeType": "YulTypedName",
														"src": "9442:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9450:6:3",
														"nodeType": "YulTypedName",
														"src": "9450:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9461:4:3",
														"nodeType": "YulTypedName",
														"src": "9461:4:3",
														"type": ""
													}
												],
												"src": "9290:541:3"
											},
											{
												"body": {
													"nativeSrc": "9869:28:3",
													"nodeType": "YulBlock",
													"src": "9869:28:3",
													"statements": [
														{
															"nativeSrc": "9879:12:3",
															"nodeType": "YulAssignment",
															"src": "9879:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "9886:5:3",
																"nodeType": "YulIdentifier",
																"src": "9886:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9879:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9879:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9837:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9855:5:3",
														"nodeType": "YulTypedName",
														"src": "9855:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9865:3:3",
														"nodeType": "YulTypedName",
														"src": "9865:3:3",
														"type": ""
													}
												],
												"src": "9837:60:3"
											},
											{
												"body": {
													"nativeSrc": "9963:82:3",
													"nodeType": "YulBlock",
													"src": "9963:82:3",
													"statements": [
														{
															"nativeSrc": "9973:66:3",
															"nodeType": "YulAssignment",
															"src": "9973:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10031:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "10031:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10013:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "10013:17:3"
																				},
																				"nativeSrc": "10013:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "10013:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10004:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "10004:8:3"
																		},
																		"nativeSrc": "10004:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10004:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9986:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "9986:17:3"
																},
																"nativeSrc": "9986:53:3",
																"nodeType": "YulFunctionCall",
																"src": "9986:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9973:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "9973:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9903:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9943:5:3",
														"nodeType": "YulTypedName",
														"src": "9943:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9953:9:3",
														"nodeType": "YulTypedName",
														"src": "9953:9:3",
														"type": ""
													}
												],
												"src": "9903:142:3"
											},
											{
												"body": {
													"nativeSrc": "10111:66:3",
													"nodeType": "YulBlock",
													"src": "10111:66:3",
													"statements": [
														{
															"nativeSrc": "10121:50:3",
															"nodeType": "YulAssignment",
															"src": "10121:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10165:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "10165:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "10134:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "10134:30:3"
																},
																"nativeSrc": "10134:37:3",
																"nodeType": "YulFunctionCall",
																"src": "10134:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10121:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "10121:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "10051:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10091:5:3",
														"nodeType": "YulTypedName",
														"src": "10091:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10101:9:3",
														"nodeType": "YulTypedName",
														"src": "10101:9:3",
														"type": ""
													}
												],
												"src": "10051:126:3"
											},
											{
												"body": {
													"nativeSrc": "10256:66:3",
													"nodeType": "YulBlock",
													"src": "10256:66:3",
													"statements": [
														{
															"nativeSrc": "10266:50:3",
															"nodeType": "YulAssignment",
															"src": "10266:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10310:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "10310:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10279:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "10279:30:3"
																},
																"nativeSrc": "10279:37:3",
																"nodeType": "YulFunctionCall",
																"src": "10279:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10266:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "10266:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "10183:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10236:5:3",
														"nodeType": "YulTypedName",
														"src": "10236:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10246:9:3",
														"nodeType": "YulTypedName",
														"src": "10246:9:3",
														"type": ""
													}
												],
												"src": "10183:139:3"
											},
											{
												"body": {
													"nativeSrc": "10406:79:3",
													"nodeType": "YulBlock",
													"src": "10406:79:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10423:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10423:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10472:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "10472:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "10428:43:3",
																			"nodeType": "YulIdentifier",
																			"src": "10428:43:3"
																		},
																		"nativeSrc": "10428:50:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10428:50:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10416:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10416:6:3"
																},
																"nativeSrc": "10416:63:3",
																"nodeType": "YulFunctionCall",
																"src": "10416:63:3"
															},
															"nativeSrc": "10416:63:3",
															"nodeType": "YulExpressionStatement",
															"src": "10416:63:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "10328:157:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10394:5:3",
														"nodeType": "YulTypedName",
														"src": "10394:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10401:3:3",
														"nodeType": "YulTypedName",
														"src": "10401:3:3",
														"type": ""
													}
												],
												"src": "10328:157:3"
											},
											{
												"body": {
													"nativeSrc": "10602:137:3",
													"nodeType": "YulBlock",
													"src": "10602:137:3",
													"statements": [
														{
															"nativeSrc": "10612:26:3",
															"nodeType": "YulAssignment",
															"src": "10612:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10624:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "10624:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10635:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10635:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10620:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10620:3:3"
																},
																"nativeSrc": "10620:18:3",
																"nodeType": "YulFunctionCall",
																"src": "10620:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10612:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10612:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10705:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10705:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10718:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10718:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10729:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10729:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10714:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:3"
																		},
																		"nativeSrc": "10714:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10714:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "10648:56:3",
																	"nodeType": "YulIdentifier",
																	"src": "10648:56:3"
																},
																"nativeSrc": "10648:84:3",
																"nodeType": "YulFunctionCall",
																"src": "10648:84:3"
															},
															"nativeSrc": "10648:84:3",
															"nodeType": "YulExpressionStatement",
															"src": "10648:84:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "10491:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10574:9:3",
														"nodeType": "YulTypedName",
														"src": "10574:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10586:6:3",
														"nodeType": "YulTypedName",
														"src": "10586:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10597:4:3",
														"nodeType": "YulTypedName",
														"src": "10597:4:3",
														"type": ""
													}
												],
												"src": "10491:248:3"
											},
											{
												"body": {
													"nativeSrc": "10773:152:3",
													"nodeType": "YulBlock",
													"src": "10773:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10790:1:3",
																		"nodeType": "YulLiteral",
																		"src": "10790:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10793:77:3",
																		"nodeType": "YulLiteral",
																		"src": "10793:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10783:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10783:6:3"
																},
																"nativeSrc": "10783:88:3",
																"nodeType": "YulFunctionCall",
																"src": "10783:88:3"
															},
															"nativeSrc": "10783:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "10783:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10887:1:3",
																		"nodeType": "YulLiteral",
																		"src": "10887:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10890:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10890:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10880:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10880:6:3"
																},
																"nativeSrc": "10880:15:3",
																"nodeType": "YulFunctionCall",
																"src": "10880:15:3"
															},
															"nativeSrc": "10880:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "10880:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10911:1:3",
																		"nodeType": "YulLiteral",
																		"src": "10911:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10914:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10914:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10904:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:3"
																},
																"nativeSrc": "10904:15:3",
																"nodeType": "YulFunctionCall",
																"src": "10904:15:3"
															},
															"nativeSrc": "10904:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "10904:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10745:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "10745:180:3"
											},
											{
												"body": {
													"nativeSrc": "10976:149:3",
													"nodeType": "YulBlock",
													"src": "10976:149:3",
													"statements": [
														{
															"nativeSrc": "10986:25:3",
															"nodeType": "YulAssignment",
															"src": "10986:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11009:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "11009:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10991:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "10991:17:3"
																},
																"nativeSrc": "10991:20:3",
																"nodeType": "YulFunctionCall",
																"src": "10991:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10986:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "10986:1:3"
																}
															]
														},
														{
															"nativeSrc": "11020:25:3",
															"nodeType": "YulAssignment",
															"src": "11020:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11043:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "11043:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11025:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "11025:17:3"
																},
																"nativeSrc": "11025:20:3",
																"nodeType": "YulFunctionCall",
																"src": "11025:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11020:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "11020:1:3"
																}
															]
														},
														{
															"nativeSrc": "11054:17:3",
															"nodeType": "YulAssignment",
															"src": "11054:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11066:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "11066:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11069:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "11069:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11062:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11062:3:3"
																},
																"nativeSrc": "11062:9:3",
																"nodeType": "YulFunctionCall",
																"src": "11062:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11054:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11054:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11096:22:3",
																"nodeType": "YulBlock",
																"src": "11096:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11098:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "11098:16:3"
																			},
																			"nativeSrc": "11098:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "11098:18:3"
																		},
																		"nativeSrc": "11098:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "11098:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11087:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "11087:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11093:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "11093:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11084:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "11084:2:3"
																},
																"nativeSrc": "11084:11:3",
																"nodeType": "YulFunctionCall",
																"src": "11084:11:3"
															},
															"nativeSrc": "11081:37:3",
															"nodeType": "YulIf",
															"src": "11081:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10931:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10962:1:3",
														"nodeType": "YulTypedName",
														"src": "10962:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10965:1:3",
														"nodeType": "YulTypedName",
														"src": "10965:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10971:4:3",
														"nodeType": "YulTypedName",
														"src": "10971:4:3",
														"type": ""
													}
												],
												"src": "10931:194:3"
											},
											{
												"body": {
													"nativeSrc": "11174:190:3",
													"nodeType": "YulBlock",
													"src": "11174:190:3",
													"statements": [
														{
															"nativeSrc": "11184:33:3",
															"nodeType": "YulAssignment",
															"src": "11184:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11211:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "11211:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11193:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "11193:17:3"
																},
																"nativeSrc": "11193:24:3",
																"nodeType": "YulFunctionCall",
																"src": "11193:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11184:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "11184:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11307:22:3",
																"nodeType": "YulBlock",
																"src": "11307:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11309:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "11309:16:3"
																			},
																			"nativeSrc": "11309:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "11309:18:3"
																		},
																		"nativeSrc": "11309:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "11309:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11232:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "11232:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11239:66:3",
																		"nodeType": "YulLiteral",
																		"src": "11239:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11229:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "11229:2:3"
																},
																"nativeSrc": "11229:77:3",
																"nodeType": "YulFunctionCall",
																"src": "11229:77:3"
															},
															"nativeSrc": "11226:103:3",
															"nodeType": "YulIf",
															"src": "11226:103:3"
														},
														{
															"nativeSrc": "11338:20:3",
															"nodeType": "YulAssignment",
															"src": "11338:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11349:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "11349:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11356:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11356:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11345:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11345:3:3"
																},
																"nativeSrc": "11345:13:3",
																"nodeType": "YulFunctionCall",
																"src": "11345:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11338:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11338:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11131:233:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11160:5:3",
														"nodeType": "YulTypedName",
														"src": "11160:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11170:3:3",
														"nodeType": "YulTypedName",
														"src": "11170:3:3",
														"type": ""
													}
												],
												"src": "11131:233:3"
											},
											{
												"body": {
													"nativeSrc": "11398:152:3",
													"nodeType": "YulBlock",
													"src": "11398:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11415:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11415:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11418:77:3",
																		"nodeType": "YulLiteral",
																		"src": "11418:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11408:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11408:6:3"
																},
																"nativeSrc": "11408:88:3",
																"nodeType": "YulFunctionCall",
																"src": "11408:88:3"
															},
															"nativeSrc": "11408:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "11408:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11512:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11512:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11515:4:3",
																		"nodeType": "YulLiteral",
																		"src": "11515:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11505:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11505:6:3"
																},
																"nativeSrc": "11505:15:3",
																"nodeType": "YulFunctionCall",
																"src": "11505:15:3"
															},
															"nativeSrc": "11505:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "11505:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11536:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11536:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11539:4:3",
																		"nodeType": "YulLiteral",
																		"src": "11539:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11529:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11529:6:3"
																},
																"nativeSrc": "11529:15:3",
																"nodeType": "YulFunctionCall",
																"src": "11529:15:3"
															},
															"nativeSrc": "11529:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "11529:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11370:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "11370:180:3"
											},
											{
												"body": {
													"nativeSrc": "11584:152:3",
													"nodeType": "YulBlock",
													"src": "11584:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11601:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11601:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11604:77:3",
																		"nodeType": "YulLiteral",
																		"src": "11604:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11594:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:3"
																},
																"nativeSrc": "11594:88:3",
																"nodeType": "YulFunctionCall",
																"src": "11594:88:3"
															},
															"nativeSrc": "11594:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "11594:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11698:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11698:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11701:4:3",
																		"nodeType": "YulLiteral",
																		"src": "11701:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11691:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11691:6:3"
																},
																"nativeSrc": "11691:15:3",
																"nodeType": "YulFunctionCall",
																"src": "11691:15:3"
															},
															"nativeSrc": "11691:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "11691:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11722:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11722:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11725:4:3",
																		"nodeType": "YulLiteral",
																		"src": "11725:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11715:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11715:6:3"
																},
																"nativeSrc": "11715:15:3",
																"nodeType": "YulFunctionCall",
																"src": "11715:15:3"
															},
															"nativeSrc": "11715:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "11715:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11556:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "11556:180:3"
											},
											{
												"body": {
													"nativeSrc": "11838:73:3",
													"nodeType": "YulBlock",
													"src": "11838:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11855:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11855:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11860:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11848:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11848:6:3"
																},
																"nativeSrc": "11848:19:3",
																"nodeType": "YulFunctionCall",
																"src": "11848:19:3"
															},
															"nativeSrc": "11848:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "11848:19:3"
														},
														{
															"nativeSrc": "11876:29:3",
															"nodeType": "YulAssignment",
															"src": "11876:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11895:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11895:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11900:4:3",
																		"nodeType": "YulLiteral",
																		"src": "11900:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11891:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11891:3:3"
																},
																"nativeSrc": "11891:14:3",
																"nodeType": "YulFunctionCall",
																"src": "11891:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11876:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "11876:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11742:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11810:3:3",
														"nodeType": "YulTypedName",
														"src": "11810:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11815:6:3",
														"nodeType": "YulTypedName",
														"src": "11815:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11826:11:3",
														"nodeType": "YulTypedName",
														"src": "11826:11:3",
														"type": ""
													}
												],
												"src": "11742:169:3"
											},
											{
												"body": {
													"nativeSrc": "12023:60:3",
													"nodeType": "YulBlock",
													"src": "12023:60:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12045:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "12045:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12053:1:3",
																				"nodeType": "YulLiteral",
																				"src": "12053:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12041:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:3"
																		},
																		"nativeSrc": "12041:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12041:14:3"
																	},
																	{
																		"hexValue": "4e6f20616d6f756e74207374616b6564",
																		"kind": "string",
																		"nativeSrc": "12057:18:3",
																		"nodeType": "YulLiteral",
																		"src": "12057:18:3",
																		"type": "",
																		"value": "No amount staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12034:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12034:6:3"
																},
																"nativeSrc": "12034:42:3",
																"nodeType": "YulFunctionCall",
																"src": "12034:42:3"
															},
															"nativeSrc": "12034:42:3",
															"nodeType": "YulExpressionStatement",
															"src": "12034:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49",
												"nativeSrc": "11917:166:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12015:6:3",
														"nodeType": "YulTypedName",
														"src": "12015:6:3",
														"type": ""
													}
												],
												"src": "11917:166:3"
											},
											{
												"body": {
													"nativeSrc": "12235:220:3",
													"nodeType": "YulBlock",
													"src": "12235:220:3",
													"statements": [
														{
															"nativeSrc": "12245:74:3",
															"nodeType": "YulAssignment",
															"src": "12245:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12311:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12311:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12316:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12316:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12252:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "12252:58:3"
																},
																"nativeSrc": "12252:67:3",
																"nodeType": "YulFunctionCall",
																"src": "12252:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12245:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12245:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12417:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12417:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49",
																	"nativeSrc": "12328:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "12328:88:3"
																},
																"nativeSrc": "12328:93:3",
																"nodeType": "YulFunctionCall",
																"src": "12328:93:3"
															},
															"nativeSrc": "12328:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "12328:93:3"
														},
														{
															"nativeSrc": "12430:19:3",
															"nodeType": "YulAssignment",
															"src": "12430:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12441:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12441:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12446:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12446:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12437:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12437:3:3"
																},
																"nativeSrc": "12437:12:3",
																"nodeType": "YulFunctionCall",
																"src": "12437:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12430:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12430:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12089:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12223:3:3",
														"nodeType": "YulTypedName",
														"src": "12223:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12231:3:3",
														"nodeType": "YulTypedName",
														"src": "12231:3:3",
														"type": ""
													}
												],
												"src": "12089:366:3"
											},
											{
												"body": {
													"nativeSrc": "12632:248:3",
													"nodeType": "YulBlock",
													"src": "12632:248:3",
													"statements": [
														{
															"nativeSrc": "12642:26:3",
															"nodeType": "YulAssignment",
															"src": "12642:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12654:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12654:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12665:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12665:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12650:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12650:3:3"
																},
																"nativeSrc": "12650:18:3",
																"nodeType": "YulFunctionCall",
																"src": "12650:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12642:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12642:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12689:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12689:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12700:1:3",
																				"nodeType": "YulLiteral",
																				"src": "12700:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12685:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12685:3:3"
																		},
																		"nativeSrc": "12685:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12685:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12708:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "12708:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12714:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12714:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12704:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12704:3:3"
																		},
																		"nativeSrc": "12704:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12704:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12678:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12678:6:3"
																},
																"nativeSrc": "12678:47:3",
																"nodeType": "YulFunctionCall",
																"src": "12678:47:3"
															},
															"nativeSrc": "12678:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "12678:47:3"
														},
														{
															"nativeSrc": "12734:139:3",
															"nodeType": "YulAssignment",
															"src": "12734:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12868:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "12868:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12742:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "12742:124:3"
																},
																"nativeSrc": "12742:131:3",
																"nodeType": "YulFunctionCall",
																"src": "12742:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12734:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12734:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12461:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12612:9:3",
														"nodeType": "YulTypedName",
														"src": "12612:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12627:4:3",
														"nodeType": "YulTypedName",
														"src": "12627:4:3",
														"type": ""
													}
												],
												"src": "12461:419:3"
											},
											{
												"body": {
													"nativeSrc": "13012:206:3",
													"nodeType": "YulBlock",
													"src": "13012:206:3",
													"statements": [
														{
															"nativeSrc": "13022:26:3",
															"nodeType": "YulAssignment",
															"src": "13022:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13034:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13034:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13045:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13045:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13030:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13030:3:3"
																},
																"nativeSrc": "13030:18:3",
																"nodeType": "YulFunctionCall",
																"src": "13030:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13022:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "13022:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13102:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13102:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13115:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13115:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13126:1:3",
																				"nodeType": "YulLiteral",
																				"src": "13126:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13111:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:3"
																		},
																		"nativeSrc": "13111:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13111:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13058:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "13058:43:3"
																},
																"nativeSrc": "13058:71:3",
																"nodeType": "YulFunctionCall",
																"src": "13058:71:3"
															},
															"nativeSrc": "13058:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "13058:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13183:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13183:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13196:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13196:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13207:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13207:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13192:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:3"
																		},
																		"nativeSrc": "13192:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13192:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13139:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "13139:43:3"
																},
																"nativeSrc": "13139:72:3",
																"nodeType": "YulFunctionCall",
																"src": "13139:72:3"
															},
															"nativeSrc": "13139:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "13139:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12886:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12976:9:3",
														"nodeType": "YulTypedName",
														"src": "12976:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12988:6:3",
														"nodeType": "YulTypedName",
														"src": "12988:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12996:6:3",
														"nodeType": "YulTypedName",
														"src": "12996:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13007:4:3",
														"nodeType": "YulTypedName",
														"src": "13007:4:3",
														"type": ""
													}
												],
												"src": "12886:332:3"
											},
											{
												"body": {
													"nativeSrc": "13264:76:3",
													"nodeType": "YulBlock",
													"src": "13264:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "13318:16:3",
																"nodeType": "YulBlock",
																"src": "13318:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13327:1:3",
																					"nodeType": "YulLiteral",
																					"src": "13327:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13330:1:3",
																					"nodeType": "YulLiteral",
																					"src": "13330:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13320:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "13320:6:3"
																			},
																			"nativeSrc": "13320:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13320:12:3"
																		},
																		"nativeSrc": "13320:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13320:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13287:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "13287:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13309:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "13309:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13294:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "13294:14:3"
																				},
																				"nativeSrc": "13294:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "13294:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13284:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "13284:2:3"
																		},
																		"nativeSrc": "13284:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13284:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13277:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13277:6:3"
																},
																"nativeSrc": "13277:40:3",
																"nodeType": "YulFunctionCall",
																"src": "13277:40:3"
															},
															"nativeSrc": "13274:60:3",
															"nodeType": "YulIf",
															"src": "13274:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13224:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13257:5:3",
														"nodeType": "YulTypedName",
														"src": "13257:5:3",
														"type": ""
													}
												],
												"src": "13224:116:3"
											},
											{
												"body": {
													"nativeSrc": "13406:77:3",
													"nodeType": "YulBlock",
													"src": "13406:77:3",
													"statements": [
														{
															"nativeSrc": "13416:22:3",
															"nodeType": "YulAssignment",
															"src": "13416:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13431:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13431:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13425:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "13425:5:3"
																},
																"nativeSrc": "13425:13:3",
																"nodeType": "YulFunctionCall",
																"src": "13425:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13416:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "13416:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13471:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "13471:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13447:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "13447:23:3"
																},
																"nativeSrc": "13447:30:3",
																"nodeType": "YulFunctionCall",
																"src": "13447:30:3"
															},
															"nativeSrc": "13447:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "13447:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13346:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13384:6:3",
														"nodeType": "YulTypedName",
														"src": "13384:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13392:3:3",
														"nodeType": "YulTypedName",
														"src": "13392:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13400:5:3",
														"nodeType": "YulTypedName",
														"src": "13400:5:3",
														"type": ""
													}
												],
												"src": "13346:137:3"
											},
											{
												"body": {
													"nativeSrc": "13563:271:3",
													"nodeType": "YulBlock",
													"src": "13563:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "13609:83:3",
																"nodeType": "YulBlock",
																"src": "13609:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13611:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "13611:77:3"
																			},
																			"nativeSrc": "13611:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13611:79:3"
																		},
																		"nativeSrc": "13611:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13611:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13584:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "13584:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13593:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13580:3:3"
																		},
																		"nativeSrc": "13580:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13580:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13605:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13605:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13576:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13576:3:3"
																},
																"nativeSrc": "13576:32:3",
																"nodeType": "YulFunctionCall",
																"src": "13576:32:3"
															},
															"nativeSrc": "13573:119:3",
															"nodeType": "YulIf",
															"src": "13573:119:3"
														},
														{
															"nativeSrc": "13702:125:3",
															"nodeType": "YulBlock",
															"src": "13702:125:3",
															"statements": [
																{
																	"nativeSrc": "13717:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13717:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13731:1:3",
																		"nodeType": "YulLiteral",
																		"src": "13731:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13721:6:3",
																			"nodeType": "YulTypedName",
																			"src": "13721:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13746:71:3",
																	"nodeType": "YulAssignment",
																	"src": "13746:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13789:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "13789:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13800:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "13800:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13785:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "13785:3:3"
																				},
																				"nativeSrc": "13785:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "13785:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13809:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "13809:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13756:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "13756:28:3"
																		},
																		"nativeSrc": "13756:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13756:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13746:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "13746:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13489:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13533:9:3",
														"nodeType": "YulTypedName",
														"src": "13533:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13544:7:3",
														"nodeType": "YulTypedName",
														"src": "13544:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13556:6:3",
														"nodeType": "YulTypedName",
														"src": "13556:6:3",
														"type": ""
													}
												],
												"src": "13489:345:3"
											},
											{
												"body": {
													"nativeSrc": "13903:80:3",
													"nodeType": "YulBlock",
													"src": "13903:80:3",
													"statements": [
														{
															"nativeSrc": "13913:22:3",
															"nodeType": "YulAssignment",
															"src": "13913:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13928:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13928:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13922:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "13922:5:3"
																},
																"nativeSrc": "13922:13:3",
																"nodeType": "YulFunctionCall",
																"src": "13922:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13913:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "13913:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13971:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "13971:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13944:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "13944:26:3"
																},
																"nativeSrc": "13944:33:3",
																"nodeType": "YulFunctionCall",
																"src": "13944:33:3"
															},
															"nativeSrc": "13944:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "13944:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13840:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13881:6:3",
														"nodeType": "YulTypedName",
														"src": "13881:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13889:3:3",
														"nodeType": "YulTypedName",
														"src": "13889:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13897:5:3",
														"nodeType": "YulTypedName",
														"src": "13897:5:3",
														"type": ""
													}
												],
												"src": "13840:143:3"
											},
											{
												"body": {
													"nativeSrc": "14066:274:3",
													"nodeType": "YulBlock",
													"src": "14066:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "14112:83:3",
																"nodeType": "YulBlock",
																"src": "14112:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14114:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "14114:77:3"
																			},
																			"nativeSrc": "14114:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14114:79:3"
																		},
																		"nativeSrc": "14114:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14114:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14087:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "14087:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14096:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14096:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14083:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14083:3:3"
																		},
																		"nativeSrc": "14083:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14083:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14108:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14108:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14079:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:3"
																},
																"nativeSrc": "14079:32:3",
																"nodeType": "YulFunctionCall",
																"src": "14079:32:3"
															},
															"nativeSrc": "14076:119:3",
															"nodeType": "YulIf",
															"src": "14076:119:3"
														},
														{
															"nativeSrc": "14205:128:3",
															"nodeType": "YulBlock",
															"src": "14205:128:3",
															"statements": [
																{
																	"nativeSrc": "14220:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14220:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14234:1:3",
																		"nodeType": "YulLiteral",
																		"src": "14234:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14224:6:3",
																			"nodeType": "YulTypedName",
																			"src": "14224:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14249:74:3",
																	"nodeType": "YulAssignment",
																	"src": "14249:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14295:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "14295:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14306:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "14306:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14291:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "14291:3:3"
																				},
																				"nativeSrc": "14291:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "14291:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14315:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "14315:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14259:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "14259:31:3"
																		},
																		"nativeSrc": "14259:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14259:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14249:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "14249:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13989:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14036:9:3",
														"nodeType": "YulTypedName",
														"src": "14036:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14047:7:3",
														"nodeType": "YulTypedName",
														"src": "14047:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14059:6:3",
														"nodeType": "YulTypedName",
														"src": "14059:6:3",
														"type": ""
													}
												],
												"src": "13989:351:3"
											},
											{
												"body": {
													"nativeSrc": "14452:76:3",
													"nodeType": "YulBlock",
													"src": "14452:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14474:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "14474:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14482:1:3",
																				"nodeType": "YulLiteral",
																				"src": "14482:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14470:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14470:3:3"
																		},
																		"nativeSrc": "14470:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14470:14:3"
																	},
																	{
																		"hexValue": "4d757374207374616b65206d6f7265207468616e207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "14486:34:3",
																		"nodeType": "YulLiteral",
																		"src": "14486:34:3",
																		"type": "",
																		"value": "Must stake more than zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14463:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14463:6:3"
																},
																"nativeSrc": "14463:58:3",
																"nodeType": "YulFunctionCall",
																"src": "14463:58:3"
															},
															"nativeSrc": "14463:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "14463:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6",
												"nativeSrc": "14346:182:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14444:6:3",
														"nodeType": "YulTypedName",
														"src": "14444:6:3",
														"type": ""
													}
												],
												"src": "14346:182:3"
											},
											{
												"body": {
													"nativeSrc": "14680:220:3",
													"nodeType": "YulBlock",
													"src": "14680:220:3",
													"statements": [
														{
															"nativeSrc": "14690:74:3",
															"nodeType": "YulAssignment",
															"src": "14690:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14756:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "14756:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14761:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14761:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14697:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "14697:58:3"
																},
																"nativeSrc": "14697:67:3",
																"nodeType": "YulFunctionCall",
																"src": "14697:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14690:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14690:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14862:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "14862:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6",
																	"nativeSrc": "14773:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "14773:88:3"
																},
																"nativeSrc": "14773:93:3",
																"nodeType": "YulFunctionCall",
																"src": "14773:93:3"
															},
															"nativeSrc": "14773:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "14773:93:3"
														},
														{
															"nativeSrc": "14875:19:3",
															"nodeType": "YulAssignment",
															"src": "14875:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14886:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "14886:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14891:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14891:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14882:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14882:3:3"
																},
																"nativeSrc": "14882:12:3",
																"nodeType": "YulFunctionCall",
																"src": "14882:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14875:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14875:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14534:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14668:3:3",
														"nodeType": "YulTypedName",
														"src": "14668:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14676:3:3",
														"nodeType": "YulTypedName",
														"src": "14676:3:3",
														"type": ""
													}
												],
												"src": "14534:366:3"
											},
											{
												"body": {
													"nativeSrc": "15077:248:3",
													"nodeType": "YulBlock",
													"src": "15077:248:3",
													"statements": [
														{
															"nativeSrc": "15087:26:3",
															"nodeType": "YulAssignment",
															"src": "15087:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15099:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "15099:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15110:2:3",
																		"nodeType": "YulLiteral",
																		"src": "15110:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15095:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "15095:3:3"
																},
																"nativeSrc": "15095:18:3",
																"nodeType": "YulFunctionCall",
																"src": "15095:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15087:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "15087:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15134:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "15134:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15145:1:3",
																				"nodeType": "YulLiteral",
																				"src": "15145:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15130:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "15130:3:3"
																		},
																		"nativeSrc": "15130:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "15130:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15153:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "15153:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15159:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15149:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "15149:3:3"
																		},
																		"nativeSrc": "15149:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "15149:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15123:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "15123:6:3"
																},
																"nativeSrc": "15123:47:3",
																"nodeType": "YulFunctionCall",
																"src": "15123:47:3"
															},
															"nativeSrc": "15123:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "15123:47:3"
														},
														{
															"nativeSrc": "15179:139:3",
															"nodeType": "YulAssignment",
															"src": "15179:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15313:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "15313:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15187:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "15187:124:3"
																},
																"nativeSrc": "15187:131:3",
																"nodeType": "YulFunctionCall",
																"src": "15187:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15179:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "15179:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14906:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15057:9:3",
														"nodeType": "YulTypedName",
														"src": "15057:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15072:4:3",
														"nodeType": "YulTypedName",
														"src": "15072:4:3",
														"type": ""
													}
												],
												"src": "14906:419:3"
											},
											{
												"body": {
													"nativeSrc": "15437:115:3",
													"nodeType": "YulBlock",
													"src": "15437:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15459:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15459:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15467:1:3",
																				"nodeType": "YulLiteral",
																				"src": "15467:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15455:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "15455:3:3"
																		},
																		"nativeSrc": "15455:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "15455:14:3"
																	},
																	{
																		"hexValue": "4e6f7420456e6f7567682042616c616e636520546f6b656e7320546f20537461",
																		"kind": "string",
																		"nativeSrc": "15471:34:3",
																		"nodeType": "YulLiteral",
																		"src": "15471:34:3",
																		"type": "",
																		"value": "Not Enough Balance Tokens To Sta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15448:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "15448:6:3"
																},
																"nativeSrc": "15448:58:3",
																"nodeType": "YulFunctionCall",
																"src": "15448:58:3"
															},
															"nativeSrc": "15448:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "15448:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15527:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "15527:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15535:2:3",
																				"nodeType": "YulLiteral",
																				"src": "15535:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15523:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "15523:3:3"
																		},
																		"nativeSrc": "15523:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "15523:15:3"
																	},
																	{
																		"hexValue": "6b65",
																		"kind": "string",
																		"nativeSrc": "15540:4:3",
																		"nodeType": "YulLiteral",
																		"src": "15540:4:3",
																		"type": "",
																		"value": "ke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15516:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:3"
																},
																"nativeSrc": "15516:29:3",
																"nodeType": "YulFunctionCall",
																"src": "15516:29:3"
															},
															"nativeSrc": "15516:29:3",
															"nodeType": "YulExpressionStatement",
															"src": "15516:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224",
												"nativeSrc": "15331:221:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15429:6:3",
														"nodeType": "YulTypedName",
														"src": "15429:6:3",
														"type": ""
													}
												],
												"src": "15331:221:3"
											},
											{
												"body": {
													"nativeSrc": "15704:220:3",
													"nodeType": "YulBlock",
													"src": "15704:220:3",
													"statements": [
														{
															"nativeSrc": "15714:74:3",
															"nodeType": "YulAssignment",
															"src": "15714:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15780:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "15780:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15785:2:3",
																		"nodeType": "YulLiteral",
																		"src": "15785:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15721:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "15721:58:3"
																},
																"nativeSrc": "15721:67:3",
																"nodeType": "YulFunctionCall",
																"src": "15721:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15714:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "15714:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15886:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "15886:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224",
																	"nativeSrc": "15797:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "15797:88:3"
																},
																"nativeSrc": "15797:93:3",
																"nodeType": "YulFunctionCall",
																"src": "15797:93:3"
															},
															"nativeSrc": "15797:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "15797:93:3"
														},
														{
															"nativeSrc": "15899:19:3",
															"nodeType": "YulAssignment",
															"src": "15899:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15910:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "15910:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15915:2:3",
																		"nodeType": "YulLiteral",
																		"src": "15915:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15906:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "15906:3:3"
																},
																"nativeSrc": "15906:12:3",
																"nodeType": "YulFunctionCall",
																"src": "15906:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15899:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "15899:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15558:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15692:3:3",
														"nodeType": "YulTypedName",
														"src": "15692:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15700:3:3",
														"nodeType": "YulTypedName",
														"src": "15700:3:3",
														"type": ""
													}
												],
												"src": "15558:366:3"
											},
											{
												"body": {
													"nativeSrc": "16101:248:3",
													"nodeType": "YulBlock",
													"src": "16101:248:3",
													"statements": [
														{
															"nativeSrc": "16111:26:3",
															"nodeType": "YulAssignment",
															"src": "16111:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16123:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "16123:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16134:2:3",
																		"nodeType": "YulLiteral",
																		"src": "16134:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16119:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "16119:3:3"
																},
																"nativeSrc": "16119:18:3",
																"nodeType": "YulFunctionCall",
																"src": "16119:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16111:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "16111:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16158:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "16158:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16169:1:3",
																				"nodeType": "YulLiteral",
																				"src": "16169:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16154:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "16154:3:3"
																		},
																		"nativeSrc": "16154:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "16154:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16177:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "16177:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16183:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "16183:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16173:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "16173:3:3"
																		},
																		"nativeSrc": "16173:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "16173:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16147:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16147:6:3"
																},
																"nativeSrc": "16147:47:3",
																"nodeType": "YulFunctionCall",
																"src": "16147:47:3"
															},
															"nativeSrc": "16147:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "16147:47:3"
														},
														{
															"nativeSrc": "16203:139:3",
															"nodeType": "YulAssignment",
															"src": "16203:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16337:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "16337:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16211:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "16211:124:3"
																},
																"nativeSrc": "16211:131:3",
																"nodeType": "YulFunctionCall",
																"src": "16211:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16203:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "16203:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15930:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16081:9:3",
														"nodeType": "YulTypedName",
														"src": "16081:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16096:4:3",
														"nodeType": "YulTypedName",
														"src": "16096:4:3",
														"type": ""
													}
												],
												"src": "15930:419:3"
											},
											{
												"body": {
													"nativeSrc": "16461:121:3",
													"nodeType": "YulBlock",
													"src": "16461:121:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16483:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "16483:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16491:1:3",
																				"nodeType": "YulLiteral",
																				"src": "16491:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16479:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "16479:3:3"
																		},
																		"nativeSrc": "16479:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "16479:14:3"
																	},
																	{
																		"hexValue": "5461727269662063616e204f6e6c79206265206f6620322c342c362c382c3130",
																		"kind": "string",
																		"nativeSrc": "16495:34:3",
																		"nodeType": "YulLiteral",
																		"src": "16495:34:3",
																		"type": "",
																		"value": "Tarrif can Only be of 2,4,6,8,10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16472:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16472:6:3"
																},
																"nativeSrc": "16472:58:3",
																"nodeType": "YulFunctionCall",
																"src": "16472:58:3"
															},
															"nativeSrc": "16472:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "16472:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16551:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "16551:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16559:2:3",
																				"nodeType": "YulLiteral",
																				"src": "16559:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16547:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "16547:3:3"
																		},
																		"nativeSrc": "16547:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "16547:15:3"
																	},
																	{
																		"hexValue": "204d696e75746573",
																		"kind": "string",
																		"nativeSrc": "16564:10:3",
																		"nodeType": "YulLiteral",
																		"src": "16564:10:3",
																		"type": "",
																		"value": " Minutes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16540:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "16540:6:3"
																},
																"nativeSrc": "16540:35:3",
																"nodeType": "YulFunctionCall",
																"src": "16540:35:3"
															},
															"nativeSrc": "16540:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "16540:35:3"
														}
													]
												},
												"name": "store_literal_in_memory_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f",
												"nativeSrc": "16355:227:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16453:6:3",
														"nodeType": "YulTypedName",
														"src": "16453:6:3",
														"type": ""
													}
												],
												"src": "16355:227:3"
											},
											{
												"body": {
													"nativeSrc": "16734:220:3",
													"nodeType": "YulBlock",
													"src": "16734:220:3",
													"statements": [
														{
															"nativeSrc": "16744:74:3",
															"nodeType": "YulAssignment",
															"src": "16744:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16810:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "16810:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16815:2:3",
																		"nodeType": "YulLiteral",
																		"src": "16815:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16751:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "16751:58:3"
																},
																"nativeSrc": "16751:67:3",
																"nodeType": "YulFunctionCall",
																"src": "16751:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16744:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "16744:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16916:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "16916:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f",
																	"nativeSrc": "16827:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "16827:88:3"
																},
																"nativeSrc": "16827:93:3",
																"nodeType": "YulFunctionCall",
																"src": "16827:93:3"
															},
															"nativeSrc": "16827:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "16827:93:3"
														},
														{
															"nativeSrc": "16929:19:3",
															"nodeType": "YulAssignment",
															"src": "16929:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16940:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "16940:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16945:2:3",
																		"nodeType": "YulLiteral",
																		"src": "16945:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16936:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "16936:3:3"
																},
																"nativeSrc": "16936:12:3",
																"nodeType": "YulFunctionCall",
																"src": "16936:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16929:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "16929:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16588:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16722:3:3",
														"nodeType": "YulTypedName",
														"src": "16722:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16730:3:3",
														"nodeType": "YulTypedName",
														"src": "16730:3:3",
														"type": ""
													}
												],
												"src": "16588:366:3"
											},
											{
												"body": {
													"nativeSrc": "17131:248:3",
													"nodeType": "YulBlock",
													"src": "17131:248:3",
													"statements": [
														{
															"nativeSrc": "17141:26:3",
															"nodeType": "YulAssignment",
															"src": "17141:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17153:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "17153:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17164:2:3",
																		"nodeType": "YulLiteral",
																		"src": "17164:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17149:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "17149:3:3"
																},
																"nativeSrc": "17149:18:3",
																"nodeType": "YulFunctionCall",
																"src": "17149:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17141:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "17141:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17188:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "17188:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17199:1:3",
																				"nodeType": "YulLiteral",
																				"src": "17199:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17184:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17184:3:3"
																		},
																		"nativeSrc": "17184:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17184:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17207:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "17207:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17213:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "17213:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17203:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17203:3:3"
																		},
																		"nativeSrc": "17203:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17203:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17177:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "17177:6:3"
																},
																"nativeSrc": "17177:47:3",
																"nodeType": "YulFunctionCall",
																"src": "17177:47:3"
															},
															"nativeSrc": "17177:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "17177:47:3"
														},
														{
															"nativeSrc": "17233:139:3",
															"nodeType": "YulAssignment",
															"src": "17233:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17367:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "17367:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17241:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "17241:124:3"
																},
																"nativeSrc": "17241:131:3",
																"nodeType": "YulFunctionCall",
																"src": "17241:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17233:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "17233:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16960:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17111:9:3",
														"nodeType": "YulTypedName",
														"src": "17111:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17126:4:3",
														"nodeType": "YulTypedName",
														"src": "17126:4:3",
														"type": ""
													}
												],
												"src": "16960:419:3"
											},
											{
												"body": {
													"nativeSrc": "17539:288:3",
													"nodeType": "YulBlock",
													"src": "17539:288:3",
													"statements": [
														{
															"nativeSrc": "17549:26:3",
															"nodeType": "YulAssignment",
															"src": "17549:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17561:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "17561:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17572:2:3",
																		"nodeType": "YulLiteral",
																		"src": "17572:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17557:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:3"
																},
																"nativeSrc": "17557:18:3",
																"nodeType": "YulFunctionCall",
																"src": "17557:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17549:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "17549:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17629:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "17629:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17642:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "17642:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17653:1:3",
																				"nodeType": "YulLiteral",
																				"src": "17653:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17638:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17638:3:3"
																		},
																		"nativeSrc": "17638:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17638:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17585:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "17585:43:3"
																},
																"nativeSrc": "17585:71:3",
																"nodeType": "YulFunctionCall",
																"src": "17585:71:3"
															},
															"nativeSrc": "17585:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "17585:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17710:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "17710:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17723:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "17723:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17734:2:3",
																				"nodeType": "YulLiteral",
																				"src": "17734:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17719:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17719:3:3"
																		},
																		"nativeSrc": "17719:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17719:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17666:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "17666:43:3"
																},
																"nativeSrc": "17666:72:3",
																"nodeType": "YulFunctionCall",
																"src": "17666:72:3"
															},
															"nativeSrc": "17666:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "17666:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17792:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "17792:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17805:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "17805:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17816:2:3",
																				"nodeType": "YulLiteral",
																				"src": "17816:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17801:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17801:3:3"
																		},
																		"nativeSrc": "17801:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17801:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17748:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "17748:43:3"
																},
																"nativeSrc": "17748:72:3",
																"nodeType": "YulFunctionCall",
																"src": "17748:72:3"
															},
															"nativeSrc": "17748:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "17748:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17385:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17495:9:3",
														"nodeType": "YulTypedName",
														"src": "17495:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17507:6:3",
														"nodeType": "YulTypedName",
														"src": "17507:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17515:6:3",
														"nodeType": "YulTypedName",
														"src": "17515:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17523:6:3",
														"nodeType": "YulTypedName",
														"src": "17523:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17534:4:3",
														"nodeType": "YulTypedName",
														"src": "17534:4:3",
														"type": ""
													}
												],
												"src": "17385:442:3"
											},
											{
												"body": {
													"nativeSrc": "17939:116:3",
													"nodeType": "YulBlock",
													"src": "17939:116:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17961:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "17961:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17969:1:3",
																				"nodeType": "YulLiteral",
																				"src": "17969:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17957:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "17957:3:3"
																		},
																		"nativeSrc": "17957:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "17957:14:3"
																	},
																	{
																		"hexValue": "4769766520617070726f76616c2066726f6d20696e697469616c20746f207374",
																		"kind": "string",
																		"nativeSrc": "17973:34:3",
																		"nodeType": "YulLiteral",
																		"src": "17973:34:3",
																		"type": "",
																		"value": "Give approval from initial to st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17950:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "17950:6:3"
																},
																"nativeSrc": "17950:58:3",
																"nodeType": "YulFunctionCall",
																"src": "17950:58:3"
															},
															"nativeSrc": "17950:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "17950:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18029:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "18029:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18037:2:3",
																				"nodeType": "YulLiteral",
																				"src": "18037:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18025:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "18025:3:3"
																		},
																		"nativeSrc": "18025:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "18025:15:3"
																	},
																	{
																		"hexValue": "616b65",
																		"kind": "string",
																		"nativeSrc": "18042:5:3",
																		"nodeType": "YulLiteral",
																		"src": "18042:5:3",
																		"type": "",
																		"value": "ake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18018:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "18018:6:3"
																},
																"nativeSrc": "18018:30:3",
																"nodeType": "YulFunctionCall",
																"src": "18018:30:3"
															},
															"nativeSrc": "18018:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "18018:30:3"
														}
													]
												},
												"name": "store_literal_in_memory_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc",
												"nativeSrc": "17833:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17931:6:3",
														"nodeType": "YulTypedName",
														"src": "17931:6:3",
														"type": ""
													}
												],
												"src": "17833:222:3"
											},
											{
												"body": {
													"nativeSrc": "18207:220:3",
													"nodeType": "YulBlock",
													"src": "18207:220:3",
													"statements": [
														{
															"nativeSrc": "18217:74:3",
															"nodeType": "YulAssignment",
															"src": "18217:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18283:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "18283:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18288:2:3",
																		"nodeType": "YulLiteral",
																		"src": "18288:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18224:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "18224:58:3"
																},
																"nativeSrc": "18224:67:3",
																"nodeType": "YulFunctionCall",
																"src": "18224:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18217:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18217:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18389:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "18389:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc",
																	"nativeSrc": "18300:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "18300:88:3"
																},
																"nativeSrc": "18300:93:3",
																"nodeType": "YulFunctionCall",
																"src": "18300:93:3"
															},
															"nativeSrc": "18300:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "18300:93:3"
														},
														{
															"nativeSrc": "18402:19:3",
															"nodeType": "YulAssignment",
															"src": "18402:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18413:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "18413:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18418:2:3",
																		"nodeType": "YulLiteral",
																		"src": "18418:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18409:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18409:3:3"
																},
																"nativeSrc": "18409:12:3",
																"nodeType": "YulFunctionCall",
																"src": "18409:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18402:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18402:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18061:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18195:3:3",
														"nodeType": "YulTypedName",
														"src": "18195:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18203:3:3",
														"nodeType": "YulTypedName",
														"src": "18203:3:3",
														"type": ""
													}
												],
												"src": "18061:366:3"
											},
											{
												"body": {
													"nativeSrc": "18604:248:3",
													"nodeType": "YulBlock",
													"src": "18604:248:3",
													"statements": [
														{
															"nativeSrc": "18614:26:3",
															"nodeType": "YulAssignment",
															"src": "18614:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18626:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "18626:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18637:2:3",
																		"nodeType": "YulLiteral",
																		"src": "18637:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18622:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18622:3:3"
																},
																"nativeSrc": "18622:18:3",
																"nodeType": "YulFunctionCall",
																"src": "18622:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18614:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "18614:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18661:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "18661:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18672:1:3",
																				"nodeType": "YulLiteral",
																				"src": "18672:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18657:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "18657:3:3"
																		},
																		"nativeSrc": "18657:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "18657:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18680:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "18680:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18686:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "18686:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18676:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "18676:3:3"
																		},
																		"nativeSrc": "18676:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "18676:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18650:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "18650:6:3"
																},
																"nativeSrc": "18650:47:3",
																"nodeType": "YulFunctionCall",
																"src": "18650:47:3"
															},
															"nativeSrc": "18650:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "18650:47:3"
														},
														{
															"nativeSrc": "18706:139:3",
															"nodeType": "YulAssignment",
															"src": "18706:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18840:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "18840:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18714:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "18714:124:3"
																},
																"nativeSrc": "18714:131:3",
																"nodeType": "YulFunctionCall",
																"src": "18714:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18706:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "18706:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18433:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18584:9:3",
														"nodeType": "YulTypedName",
														"src": "18584:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18599:4:3",
														"nodeType": "YulTypedName",
														"src": "18599:4:3",
														"type": ""
													}
												],
												"src": "18433:419:3"
											},
											{
												"body": {
													"nativeSrc": "18902:147:3",
													"nodeType": "YulBlock",
													"src": "18902:147:3",
													"statements": [
														{
															"nativeSrc": "18912:25:3",
															"nodeType": "YulAssignment",
															"src": "18912:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18935:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "18935:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18917:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "18917:17:3"
																},
																"nativeSrc": "18917:20:3",
																"nodeType": "YulFunctionCall",
																"src": "18917:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18912:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "18912:1:3"
																}
															]
														},
														{
															"nativeSrc": "18946:25:3",
															"nodeType": "YulAssignment",
															"src": "18946:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18969:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "18969:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18951:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "18951:17:3"
																},
																"nativeSrc": "18951:20:3",
																"nodeType": "YulFunctionCall",
																"src": "18951:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18946:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "18946:1:3"
																}
															]
														},
														{
															"nativeSrc": "18980:16:3",
															"nodeType": "YulAssignment",
															"src": "18980:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18991:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "18991:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18994:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "18994:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18987:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18987:3:3"
																},
																"nativeSrc": "18987:9:3",
																"nodeType": "YulFunctionCall",
																"src": "18987:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18980:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "18980:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19020:22:3",
																"nodeType": "YulBlock",
																"src": "19020:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19022:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "19022:16:3"
																			},
																			"nativeSrc": "19022:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "19022:18:3"
																		},
																		"nativeSrc": "19022:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "19022:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19012:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19012:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19015:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "19015:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19009:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "19009:2:3"
																},
																"nativeSrc": "19009:10:3",
																"nodeType": "YulFunctionCall",
																"src": "19009:10:3"
															},
															"nativeSrc": "19006:36:3",
															"nodeType": "YulIf",
															"src": "19006:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18858:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18889:1:3",
														"nodeType": "YulTypedName",
														"src": "18889:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18892:1:3",
														"nodeType": "YulTypedName",
														"src": "18892:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18898:3:3",
														"nodeType": "YulTypedName",
														"src": "18898:3:3",
														"type": ""
													}
												],
												"src": "18858:191:3"
											},
											{
												"body": {
													"nativeSrc": "19103:362:3",
													"nodeType": "YulBlock",
													"src": "19103:362:3",
													"statements": [
														{
															"nativeSrc": "19113:25:3",
															"nodeType": "YulAssignment",
															"src": "19113:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19136:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19136:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19118:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "19118:17:3"
																},
																"nativeSrc": "19118:20:3",
																"nodeType": "YulFunctionCall",
																"src": "19118:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19113:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "19113:1:3"
																}
															]
														},
														{
															"nativeSrc": "19147:25:3",
															"nodeType": "YulAssignment",
															"src": "19147:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19170:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19170:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19152:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "19152:17:3"
																},
																"nativeSrc": "19152:20:3",
																"nodeType": "YulFunctionCall",
																"src": "19152:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19147:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "19147:1:3"
																}
															]
														},
														{
															"nativeSrc": "19181:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "19181:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19204:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19204:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19207:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "19207:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19200:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "19200:3:3"
																},
																"nativeSrc": "19200:9:3",
																"nodeType": "YulFunctionCall",
																"src": "19200:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "19185:11:3",
																	"nodeType": "YulTypedName",
																	"src": "19185:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19218:41:3",
															"nodeType": "YulAssignment",
															"src": "19218:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "19247:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "19247:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19229:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "19229:17:3"
																},
																"nativeSrc": "19229:30:3",
																"nodeType": "YulFunctionCall",
																"src": "19229:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "19218:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "19218:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19436:22:3",
																"nodeType": "YulBlock",
																"src": "19436:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19438:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "19438:16:3"
																			},
																			"nativeSrc": "19438:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "19438:18:3"
																		},
																		"nativeSrc": "19438:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "19438:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "19369:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "19369:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "19362:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "19362:6:3"
																				},
																				"nativeSrc": "19362:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "19362:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "19392:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "19392:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "19399:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "19399:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "19408:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "19408:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "19395:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "19395:3:3"
																						},
																						"nativeSrc": "19395:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "19395:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "19389:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "19389:2:3"
																				},
																				"nativeSrc": "19389:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "19389:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "19342:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "19342:2:3"
																		},
																		"nativeSrc": "19342:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19342:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19322:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19322:6:3"
																},
																"nativeSrc": "19322:113:3",
																"nodeType": "YulFunctionCall",
																"src": "19322:113:3"
															},
															"nativeSrc": "19319:139:3",
															"nodeType": "YulIf",
															"src": "19319:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "19055:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19086:1:3",
														"nodeType": "YulTypedName",
														"src": "19086:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19089:1:3",
														"nodeType": "YulTypedName",
														"src": "19089:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "19095:7:3",
														"nodeType": "YulTypedName",
														"src": "19095:7:3",
														"type": ""
													}
												],
												"src": "19055:410:3"
											},
											{
												"body": {
													"nativeSrc": "19577:57:3",
													"nodeType": "YulBlock",
													"src": "19577:57:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19599:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "19599:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19607:1:3",
																				"nodeType": "YulLiteral",
																				"src": "19607:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19595:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "19595:3:3"
																		},
																		"nativeSrc": "19595:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "19595:14:3"
																	},
																	{
																		"hexValue": "436f6f6c646f776e2054696d65",
																		"kind": "string",
																		"nativeSrc": "19611:15:3",
																		"nodeType": "YulLiteral",
																		"src": "19611:15:3",
																		"type": "",
																		"value": "Cooldown Time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19588:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "19588:6:3"
																},
																"nativeSrc": "19588:39:3",
																"nodeType": "YulFunctionCall",
																"src": "19588:39:3"
															},
															"nativeSrc": "19588:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "19588:39:3"
														}
													]
												},
												"name": "store_literal_in_memory_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f",
												"nativeSrc": "19471:163:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19569:6:3",
														"nodeType": "YulTypedName",
														"src": "19569:6:3",
														"type": ""
													}
												],
												"src": "19471:163:3"
											},
											{
												"body": {
													"nativeSrc": "19786:220:3",
													"nodeType": "YulBlock",
													"src": "19786:220:3",
													"statements": [
														{
															"nativeSrc": "19796:74:3",
															"nodeType": "YulAssignment",
															"src": "19796:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19862:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "19862:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19867:2:3",
																		"nodeType": "YulLiteral",
																		"src": "19867:2:3",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19803:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "19803:58:3"
																},
																"nativeSrc": "19803:67:3",
																"nodeType": "YulFunctionCall",
																"src": "19803:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19796:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "19796:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19968:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "19968:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f",
																	"nativeSrc": "19879:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "19879:88:3"
																},
																"nativeSrc": "19879:93:3",
																"nodeType": "YulFunctionCall",
																"src": "19879:93:3"
															},
															"nativeSrc": "19879:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "19879:93:3"
														},
														{
															"nativeSrc": "19981:19:3",
															"nodeType": "YulAssignment",
															"src": "19981:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19992:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "19992:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19997:2:3",
																		"nodeType": "YulLiteral",
																		"src": "19997:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19988:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "19988:3:3"
																},
																"nativeSrc": "19988:12:3",
																"nodeType": "YulFunctionCall",
																"src": "19988:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19981:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "19981:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19640:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19774:3:3",
														"nodeType": "YulTypedName",
														"src": "19774:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19782:3:3",
														"nodeType": "YulTypedName",
														"src": "19782:3:3",
														"type": ""
													}
												],
												"src": "19640:366:3"
											},
											{
												"body": {
													"nativeSrc": "20183:248:3",
													"nodeType": "YulBlock",
													"src": "20183:248:3",
													"statements": [
														{
															"nativeSrc": "20193:26:3",
															"nodeType": "YulAssignment",
															"src": "20193:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20205:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "20205:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20216:2:3",
																		"nodeType": "YulLiteral",
																		"src": "20216:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20201:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "20201:3:3"
																},
																"nativeSrc": "20201:18:3",
																"nodeType": "YulFunctionCall",
																"src": "20201:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20193:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "20193:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20240:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "20240:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20251:1:3",
																				"nodeType": "YulLiteral",
																				"src": "20251:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20236:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20236:3:3"
																		},
																		"nativeSrc": "20236:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20236:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20259:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "20259:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20265:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "20265:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20255:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20255:3:3"
																		},
																		"nativeSrc": "20255:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20255:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20229:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20229:6:3"
																},
																"nativeSrc": "20229:47:3",
																"nodeType": "YulFunctionCall",
																"src": "20229:47:3"
															},
															"nativeSrc": "20229:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "20229:47:3"
														},
														{
															"nativeSrc": "20285:139:3",
															"nodeType": "YulAssignment",
															"src": "20285:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20419:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "20419:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20293:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "20293:124:3"
																},
																"nativeSrc": "20293:131:3",
																"nodeType": "YulFunctionCall",
																"src": "20293:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20285:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "20285:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20012:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20163:9:3",
														"nodeType": "YulTypedName",
														"src": "20163:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20178:4:3",
														"nodeType": "YulTypedName",
														"src": "20178:4:3",
														"type": ""
													}
												],
												"src": "20012:419:3"
											},
											{
												"body": {
													"nativeSrc": "20543:73:3",
													"nodeType": "YulBlock",
													"src": "20543:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20565:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "20565:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20573:1:3",
																				"nodeType": "YulLiteral",
																				"src": "20573:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20561:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "20561:3:3"
																		},
																		"nativeSrc": "20561:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "20561:14:3"
																	},
																	{
																		"hexValue": "596f7520686176656e2774207374616b656420616e7920616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "20577:31:3",
																		"nodeType": "YulLiteral",
																		"src": "20577:31:3",
																		"type": "",
																		"value": "You haven't staked any amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20554:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "20554:6:3"
																},
																"nativeSrc": "20554:55:3",
																"nodeType": "YulFunctionCall",
																"src": "20554:55:3"
															},
															"nativeSrc": "20554:55:3",
															"nodeType": "YulExpressionStatement",
															"src": "20554:55:3"
														}
													]
												},
												"name": "store_literal_in_memory_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2",
												"nativeSrc": "20437:179:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20535:6:3",
														"nodeType": "YulTypedName",
														"src": "20535:6:3",
														"type": ""
													}
												],
												"src": "20437:179:3"
											},
											{
												"body": {
													"nativeSrc": "20768:220:3",
													"nodeType": "YulBlock",
													"src": "20768:220:3",
													"statements": [
														{
															"nativeSrc": "20778:74:3",
															"nodeType": "YulAssignment",
															"src": "20778:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20844:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "20844:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20849:2:3",
																		"nodeType": "YulLiteral",
																		"src": "20849:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20785:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "20785:58:3"
																},
																"nativeSrc": "20785:67:3",
																"nodeType": "YulFunctionCall",
																"src": "20785:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20778:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "20778:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20950:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "20950:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2",
																	"nativeSrc": "20861:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "20861:88:3"
																},
																"nativeSrc": "20861:93:3",
																"nodeType": "YulFunctionCall",
																"src": "20861:93:3"
															},
															"nativeSrc": "20861:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "20861:93:3"
														},
														{
															"nativeSrc": "20963:19:3",
															"nodeType": "YulAssignment",
															"src": "20963:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20974:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "20974:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20979:2:3",
																		"nodeType": "YulLiteral",
																		"src": "20979:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20970:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "20970:3:3"
																},
																"nativeSrc": "20970:12:3",
																"nodeType": "YulFunctionCall",
																"src": "20970:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20963:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "20963:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20622:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20756:3:3",
														"nodeType": "YulTypedName",
														"src": "20756:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20764:3:3",
														"nodeType": "YulTypedName",
														"src": "20764:3:3",
														"type": ""
													}
												],
												"src": "20622:366:3"
											},
											{
												"body": {
													"nativeSrc": "21165:248:3",
													"nodeType": "YulBlock",
													"src": "21165:248:3",
													"statements": [
														{
															"nativeSrc": "21175:26:3",
															"nodeType": "YulAssignment",
															"src": "21175:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21187:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "21187:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21198:2:3",
																		"nodeType": "YulLiteral",
																		"src": "21198:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21183:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "21183:3:3"
																},
																"nativeSrc": "21183:18:3",
																"nodeType": "YulFunctionCall",
																"src": "21183:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21175:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "21175:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21222:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "21222:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21233:1:3",
																				"nodeType": "YulLiteral",
																				"src": "21233:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21218:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "21218:3:3"
																		},
																		"nativeSrc": "21218:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21218:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21241:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "21241:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21247:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "21247:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21237:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "21237:3:3"
																		},
																		"nativeSrc": "21237:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21237:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21211:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21211:6:3"
																},
																"nativeSrc": "21211:47:3",
																"nodeType": "YulFunctionCall",
																"src": "21211:47:3"
															},
															"nativeSrc": "21211:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "21211:47:3"
														},
														{
															"nativeSrc": "21267:139:3",
															"nodeType": "YulAssignment",
															"src": "21267:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21401:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "21401:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21275:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "21275:124:3"
																},
																"nativeSrc": "21275:131:3",
																"nodeType": "YulFunctionCall",
																"src": "21275:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21267:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "21267:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20994:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21145:9:3",
														"nodeType": "YulTypedName",
														"src": "21145:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21160:4:3",
														"nodeType": "YulTypedName",
														"src": "21160:4:3",
														"type": ""
													}
												],
												"src": "20994:419:3"
											},
											{
												"body": {
													"nativeSrc": "21525:62:3",
													"nodeType": "YulBlock",
													"src": "21525:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21547:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "21547:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21555:1:3",
																				"nodeType": "YulLiteral",
																				"src": "21555:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21543:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "21543:3:3"
																		},
																		"nativeSrc": "21543:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "21543:14:3"
																	},
																	{
																		"hexValue": "4e6f2072657761726420746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "21559:20:3",
																		"nodeType": "YulLiteral",
																		"src": "21559:20:3",
																		"type": "",
																		"value": "No reward to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21536:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "21536:6:3"
																},
																"nativeSrc": "21536:44:3",
																"nodeType": "YulFunctionCall",
																"src": "21536:44:3"
															},
															"nativeSrc": "21536:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "21536:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
												"nativeSrc": "21419:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21517:6:3",
														"nodeType": "YulTypedName",
														"src": "21517:6:3",
														"type": ""
													}
												],
												"src": "21419:168:3"
											},
											{
												"body": {
													"nativeSrc": "21739:220:3",
													"nodeType": "YulBlock",
													"src": "21739:220:3",
													"statements": [
														{
															"nativeSrc": "21749:74:3",
															"nodeType": "YulAssignment",
															"src": "21749:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21815:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "21815:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21820:2:3",
																		"nodeType": "YulLiteral",
																		"src": "21820:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21756:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "21756:58:3"
																},
																"nativeSrc": "21756:67:3",
																"nodeType": "YulFunctionCall",
																"src": "21756:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21749:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "21749:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21921:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "21921:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																	"nativeSrc": "21832:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "21832:88:3"
																},
																"nativeSrc": "21832:93:3",
																"nodeType": "YulFunctionCall",
																"src": "21832:93:3"
															},
															"nativeSrc": "21832:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "21832:93:3"
														},
														{
															"nativeSrc": "21934:19:3",
															"nodeType": "YulAssignment",
															"src": "21934:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21945:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "21945:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21950:2:3",
																		"nodeType": "YulLiteral",
																		"src": "21950:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21941:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "21941:3:3"
																},
																"nativeSrc": "21941:12:3",
																"nodeType": "YulFunctionCall",
																"src": "21941:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21934:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "21934:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21593:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21727:3:3",
														"nodeType": "YulTypedName",
														"src": "21727:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21735:3:3",
														"nodeType": "YulTypedName",
														"src": "21735:3:3",
														"type": ""
													}
												],
												"src": "21593:366:3"
											},
											{
												"body": {
													"nativeSrc": "22136:248:3",
													"nodeType": "YulBlock",
													"src": "22136:248:3",
													"statements": [
														{
															"nativeSrc": "22146:26:3",
															"nodeType": "YulAssignment",
															"src": "22146:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22158:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "22158:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22169:2:3",
																		"nodeType": "YulLiteral",
																		"src": "22169:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22154:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "22154:3:3"
																},
																"nativeSrc": "22154:18:3",
																"nodeType": "YulFunctionCall",
																"src": "22154:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22146:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "22146:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22193:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "22193:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22204:1:3",
																				"nodeType": "YulLiteral",
																				"src": "22204:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22189:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "22189:3:3"
																		},
																		"nativeSrc": "22189:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22189:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22212:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "22212:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22218:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "22218:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22208:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "22208:3:3"
																		},
																		"nativeSrc": "22208:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "22208:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22182:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22182:6:3"
																},
																"nativeSrc": "22182:47:3",
																"nodeType": "YulFunctionCall",
																"src": "22182:47:3"
															},
															"nativeSrc": "22182:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "22182:47:3"
														},
														{
															"nativeSrc": "22238:139:3",
															"nodeType": "YulAssignment",
															"src": "22238:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22372:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "22372:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22246:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "22246:124:3"
																},
																"nativeSrc": "22246:131:3",
																"nodeType": "YulFunctionCall",
																"src": "22246:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22238:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "22238:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21965:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22116:9:3",
														"nodeType": "YulTypedName",
														"src": "22116:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22131:4:3",
														"nodeType": "YulTypedName",
														"src": "22131:4:3",
														"type": ""
													}
												],
												"src": "21965:419:3"
											},
											{
												"body": {
													"nativeSrc": "22418:152:3",
													"nodeType": "YulBlock",
													"src": "22418:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22435:1:3",
																		"nodeType": "YulLiteral",
																		"src": "22435:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22438:77:3",
																		"nodeType": "YulLiteral",
																		"src": "22438:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22428:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22428:6:3"
																},
																"nativeSrc": "22428:88:3",
																"nodeType": "YulFunctionCall",
																"src": "22428:88:3"
															},
															"nativeSrc": "22428:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "22428:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22532:1:3",
																		"nodeType": "YulLiteral",
																		"src": "22532:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22535:4:3",
																		"nodeType": "YulLiteral",
																		"src": "22535:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22525:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22525:6:3"
																},
																"nativeSrc": "22525:15:3",
																"nodeType": "YulFunctionCall",
																"src": "22525:15:3"
															},
															"nativeSrc": "22525:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "22525:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22556:1:3",
																		"nodeType": "YulLiteral",
																		"src": "22556:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22559:4:3",
																		"nodeType": "YulLiteral",
																		"src": "22559:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22549:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22549:6:3"
																},
																"nativeSrc": "22549:15:3",
																"nodeType": "YulFunctionCall",
																"src": "22549:15:3"
															},
															"nativeSrc": "22549:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "22549:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22390:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "22390:180:3"
											},
											{
												"body": {
													"nativeSrc": "22618:143:3",
													"nodeType": "YulBlock",
													"src": "22618:143:3",
													"statements": [
														{
															"nativeSrc": "22628:25:3",
															"nodeType": "YulAssignment",
															"src": "22628:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22651:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22651:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22633:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "22633:17:3"
																},
																"nativeSrc": "22633:20:3",
																"nodeType": "YulFunctionCall",
																"src": "22633:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22628:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "22628:1:3"
																}
															]
														},
														{
															"nativeSrc": "22662:25:3",
															"nodeType": "YulAssignment",
															"src": "22662:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22685:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22685:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22667:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "22667:17:3"
																},
																"nativeSrc": "22667:20:3",
																"nodeType": "YulFunctionCall",
																"src": "22667:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22662:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "22662:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22709:22:3",
																"nodeType": "YulBlock",
																"src": "22709:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "22711:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "22711:16:3"
																			},
																			"nativeSrc": "22711:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "22711:18:3"
																		},
																		"nativeSrc": "22711:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "22711:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22706:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22706:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22699:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "22699:6:3"
																},
																"nativeSrc": "22699:9:3",
																"nodeType": "YulFunctionCall",
																"src": "22699:9:3"
															},
															"nativeSrc": "22696:35:3",
															"nodeType": "YulIf",
															"src": "22696:35:3"
														},
														{
															"nativeSrc": "22741:14:3",
															"nodeType": "YulAssignment",
															"src": "22741:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22750:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22750:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22753:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "22753:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22746:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "22746:3:3"
																},
																"nativeSrc": "22746:9:3",
																"nodeType": "YulFunctionCall",
																"src": "22746:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "22741:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "22741:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "22576:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22607:1:3",
														"nodeType": "YulTypedName",
														"src": "22607:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22610:1:3",
														"nodeType": "YulTypedName",
														"src": "22610:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "22616:1:3",
														"nodeType": "YulTypedName",
														"src": "22616:1:3",
														"type": ""
													}
												],
												"src": "22576:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct staking.StakingInfo -> struct staking.StakingInfo\n    function abi_encode_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // StakedAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // StakedTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // duration\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // expired\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct staking.StakingInfo[] -> struct staking.StakingInfo[]\n    function abi_encode_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_StakingInfo_$179_memory_ptr_to_t_struct$_StakingInfo_$179_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49(memPtr) {\n\n        mstore(add(memPtr, 0), \"No amount staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must stake more than zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Balance Tokens To Sta\")\n\n        mstore(add(memPtr, 32), \"ke\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tarrif can Only be of 2,4,6,8,10\")\n\n        mstore(add(memPtr, 32), \" Minutes\")\n\n    }\n\n    function abi_encode_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Give approval from initial to st\")\n\n        mstore(add(memPtr, 32), \"ake\")\n\n    }\n\n    function abi_encode_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown Time\")\n\n    }\n\n    function abi_encode_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"You haven't staked any amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reward to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063c392f76611610095578063d5a44f8611610064578063d5a44f86146102e4578063d80e870014610317578063f3a93e8014610335578063fc0c546a14610351576100fd565b8063c392f76614610249578063c935297114610267578063c9ec05ea14610298578063d279c191146102c8576100fd565b806378317be7116100d157806378317be7146101c15780638b7afe2e146101dd5780638da5cb5b146101fb57806390eb298114610219576100fd565b806264f50c146101015780630700037d146101315780630a42f049146101615780632671b0d814610191575b5f80fd5b61011b6004803603810190610116919061144f565b61036f565b6040516101289190611494565b60405180910390f35b61014b6004803603810190610146919061144f565b6103d0565b60405161015891906114c5565b60405180910390f35b61017b60048036038101906101769190611508565b6103e5565b60405161018891906114c5565b60405180910390f35b6101ab60048036038101906101a6919061144f565b610402565b6040516101b891906115ea565b60405180910390f35b6101db60048036038101906101d6919061144f565b6105ab565b005b6101e561079f565b6040516101f291906114c5565b60405180910390f35b61020361083e565b6040516102109190611619565b60405180910390f35b610233600480360381019061022e9190611508565b610863565b6040516102409190611619565b60405180910390f35b610251610893565b60405161025e91906114c5565b60405180910390f35b610281600480360381019061027c919061144f565b610899565b60405161028f92919061173c565b60405180910390f35b6102b260048036038101906102ad9190611771565b610b16565b6040516102bf91906114c5565b60405180910390f35b6102e260048036038101906102dd919061144f565b610ea8565b005b6102fe60048036038101906102f99190611508565b61116f565b60405161030e94939291906117af565b60405180910390f35b61031f6111a7565b60405161032c91906114c5565b60405180910390f35b61034f600480360381019061034a9190611508565b6111ae565b005b61035961136e565b604051610366919061184d565b60405180910390f35b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541180156103c957506078426004546103c79190611893565b115b9050919050565b6007602052805f5260405f205f915090505481565b5f60065f8381526020019081526020015f20600101549050919050565b60605f805b6104105f611393565b811161049b578373ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610488578180610484906118c6565b9250505b8080610493906118c6565b915050610407565b505f8167ffffffffffffffff8111156104b7576104b661190d565b5b6040519080825280602002602001820160405280156104e55781602001602082028036833780820191505090505b5090505f805b6104f45f611393565b811161059f578573ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361058c57808383815181106105715761057061193a565b5b6020026020010181815250508180610588906118c6565b9250505b8080610597906118c6565b9150506104eb565b50819350505050919050565b5f6105b582610402565b90505f8151116105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f1906119c1565b60405180910390fd5b5f5b815181101561079a5760065f83838151811061061b5761061a61193a565b5b602002602001015181526020019081526020015f206003015f9054906101000a900460ff166107875760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360065f8686815181106106985761069761193a565b5b602002602001015181526020019081526020015f205f01546040518363ffffffff1660e01b81526004016106cd9291906119df565b6020604051808303815f875af11580156106e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070d9190611a30565b505f60065f8484815181106107255761072461193a565b5b602002602001015181526020019081526020015f205f0181905550600160065f8484815181106107585761075761193a565b5b602002602001015181526020019081526020015f206003015f6101000a81548160ff0219169083151502179055505b8080610792906118c6565b9150506105fc565b505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fa9190611619565b602060405180830381865afa158015610815573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108399190611a6f565b905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6060805f805b6108a85f611393565b8111610933578473ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361092057818061091c906118c6565b9250505b808061092b906118c6565b91505061089f565b505f8167ffffffffffffffff81111561094f5761094e61190d565b5b60405190808252806020026020018201604052801561098857816020015b6109756113cb565b81526020019060019003908161096d5790505b5090505f8267ffffffffffffffff8111156109a6576109a561190d565b5b6040519080825280602002602001820160405280156109d45781602001602082028036833780820191505090505b5090505f805b6109e35f611393565b8111610b06578773ffffffffffffffffffffffffffffffffffffffff1660055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610aec5760065f8281526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050848381518110610ab257610ab161193a565b5b602002602001018190525080838381518110610ad157610ad061193a565b5b6020026020010181815250508180610ae8906118c6565b9250505b848211610b06578080610afe906118c6565b9150506109da565b5081839550955050505050915091565b5f610b205f61139f565b5f8311610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611ae4565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610bbd9190611619565b602060405180830381865afa158015610bd8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611a6f565b1015610c3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3490611b72565b60405180910390fd5b6002821480610c4c5750600482145b80610c575750600682145b80610c625750600882145b80610c6d5750600a82145b610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca390611c00565b60405180910390fd5b5f4290503360055f610cbd5f611393565b81526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610d6593929190611c1e565b6020604051808303815f875af1158015610d81573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da59190611a30565b610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90611cc3565b60405180910390fd5b8360065f610df15f611393565b81526020019081526020015f205f015f828254610e0e9190611ce1565b925050819055508060065f610e225f611393565b81526020019081526020015f2060010181905550603c83610e439190611d14565b60065f610e4f5f611393565b81526020019081526020015f20600201819055505f60065f610e705f611393565b81526020019081526020015f206003015f6101000a81548160ff021916908315150217905550610e9f5f611393565b91505092915050565b607842600454610eb89190611893565b11610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611d9f565b60405180910390fd5b426004819055505f610f0982610402565b90505f815111610f4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4590611e07565b60405180910390fd5b5f5b8151811015610fcf5760065f838381518110610f6f57610f6e61193a565b5b602002602001015181526020019081526020015f206003015f9054906101000a900460ff16610fbc57610fbb828281518110610fae57610fad61193a565b5b60200260200101516111ae565b5b8080610fc7906118c6565b915050610f50565b505f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161104f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104690611e6f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040518363ffffffff1660e01b81526004016110e89291906119df565b6020604051808303815f875af1158015611104573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111289190611a30565b505f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6006602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900460ff16905084565b5f42905090565b5f4290505f60065f8481526020019081526020015f2060010154826111d39190611893565b90505f6111f48260065f8781526020019081526020015f20600201546113b3565b905060648160035460065f8881526020019081526020015f205f015461121a9190611d14565b6112249190611d14565b61122e9190611eba565b60075f60055f8881526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546112a69190611ce1565b60075f60055f8881526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508260065f8681526020019081526020015f20600101819055508060065f8681526020019081526020015f20600201546113509190611893565b60065f8681526020019081526020015f206002018190555050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f815f01549050919050565b6001815f015f828254019250508190555050565b5f8183106113c157816113c3565b825b905092915050565b60405180608001604052805f81526020015f81526020015f81526020015f151581525090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61141e826113f5565b9050919050565b61142e81611414565b8114611438575f80fd5b50565b5f8135905061144981611425565b92915050565b5f60208284031215611464576114636113f1565b5b5f6114718482850161143b565b91505092915050565b5f8115159050919050565b61148e8161147a565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f819050919050565b6114bf816114ad565b82525050565b5f6020820190506114d85f8301846114b6565b92915050565b6114e7816114ad565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f6020828403121561151d5761151c6113f1565b5b5f61152a848285016114f4565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611565816114ad565b82525050565b5f611576838361155c565b60208301905092915050565b5f602082019050919050565b5f61159882611533565b6115a2818561153d565b93506115ad8361154d565b805f5b838110156115dd5781516115c4888261156b565b97506115cf83611582565b9250506001810190506115b0565b5085935050505092915050565b5f6020820190508181035f830152611602818461158e565b905092915050565b61161381611414565b82525050565b5f60208201905061162c5f83018461160a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116648161147a565b82525050565b608082015f82015161167e5f85018261155c565b506020820151611691602085018261155c565b5060408201516116a4604085018261155c565b5060608201516116b7606085018261165b565b50505050565b5f6116c8838361166a565b60808301905092915050565b5f602082019050919050565b5f6116ea82611632565b6116f4818561163c565b93506116ff8361164c565b805f5b8381101561172f57815161171688826116bd565b9750611721836116d4565b925050600181019050611702565b5085935050505092915050565b5f6040820190508181035f830152611754818561158e565b9050818103602083015261176881846116e0565b90509392505050565b5f8060408385031215611787576117866113f1565b5b5f611794858286016114f4565b92505060206117a5858286016114f4565b9150509250929050565b5f6080820190506117c25f8301876114b6565b6117cf60208301866114b6565b6117dc60408301856114b6565b6117e96060830184611485565b95945050505050565b5f819050919050565b5f61181561181061180b846113f5565b6117f2565b6113f5565b9050919050565b5f611826826117fb565b9050919050565b5f6118378261181c565b9050919050565b6118478161182d565b82525050565b5f6020820190506118605f83018461183e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61189d826114ad565b91506118a8836114ad565b92508282039050818111156118c0576118bf611866565b5b92915050565b5f6118d0826114ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361190257611901611866565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4e6f20616d6f756e74207374616b6564000000000000000000000000000000005f82015250565b5f6119ab601083611967565b91506119b682611977565b602082019050919050565b5f6020820190508181035f8301526119d88161199f565b9050919050565b5f6040820190506119f25f83018561160a565b6119ff60208301846114b6565b9392505050565b611a0f8161147a565b8114611a19575f80fd5b50565b5f81519050611a2a81611a06565b92915050565b5f60208284031215611a4557611a446113f1565b5b5f611a5284828501611a1c565b91505092915050565b5f81519050611a69816114de565b92915050565b5f60208284031215611a8457611a836113f1565b5b5f611a9184828501611a5b565b91505092915050565b7f4d757374207374616b65206d6f7265207468616e207a65726f20746f6b656e735f82015250565b5f611ace602083611967565b9150611ad982611a9a565b602082019050919050565b5f6020820190508181035f830152611afb81611ac2565b9050919050565b7f4e6f7420456e6f7567682042616c616e636520546f6b656e7320546f205374615f8201527f6b65000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b5c602283611967565b9150611b6782611b02565b604082019050919050565b5f6020820190508181035f830152611b8981611b50565b9050919050565b7f5461727269662063616e204f6e6c79206265206f6620322c342c362c382c31305f8201527f204d696e75746573000000000000000000000000000000000000000000000000602082015250565b5f611bea602883611967565b9150611bf582611b90565b604082019050919050565b5f6020820190508181035f830152611c1781611bde565b9050919050565b5f606082019050611c315f83018661160a565b611c3e602083018561160a565b611c4b60408301846114b6565b949350505050565b7f4769766520617070726f76616c2066726f6d20696e697469616c20746f2073745f8201527f616b650000000000000000000000000000000000000000000000000000000000602082015250565b5f611cad602383611967565b9150611cb882611c53565b604082019050919050565b5f6020820190508181035f830152611cda81611ca1565b9050919050565b5f611ceb826114ad565b9150611cf6836114ad565b9250828201905080821115611d0e57611d0d611866565b5b92915050565b5f611d1e826114ad565b9150611d29836114ad565b9250828202611d37816114ad565b91508282048414831517611d4e57611d4d611866565b5b5092915050565b7f436f6f6c646f776e2054696d65000000000000000000000000000000000000005f82015250565b5f611d89600d83611967565b9150611d9482611d55565b602082019050919050565b5f6020820190508181035f830152611db681611d7d565b9050919050565b7f596f7520686176656e2774207374616b656420616e7920616d6f756e740000005f82015250565b5f611df1601d83611967565b9150611dfc82611dbd565b602082019050919050565b5f6020820190508181035f830152611e1e81611de5565b9050919050565b7f4e6f2072657761726420746f20636c61696d00000000000000000000000000005f82015250565b5f611e59601283611967565b9150611e6482611e25565b602082019050919050565b5f6020820190508181035f830152611e8681611e4d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ec4826114ad565b9150611ecf836114ad565b925082611edf57611ede611e8d565b5b82820490509291505056fea26469706673582212206b7577b14fa31c322171130a717455efa4668fb726e1d6f114b12d2d5f93678d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC392F766 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD5A44F86 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xD80E8700 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF3A93E80 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x351 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0xC392F766 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xC9352971 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xC9EC05EA EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xD279C191 EQ PUSH2 0x2C8 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x78317BE7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x78317BE7 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8B7AFE2E EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x90EB2981 EQ PUSH2 0x219 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x64F50C EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA42F049 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x2671B0D8 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP3 SWAP2 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH2 0xEA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT DUP1 ISZERO PUSH2 0x3C9 JUMPI POP PUSH1 0x78 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 JUMPDEST PUSH2 0x410 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x49B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x488 JUMPI DUP2 DUP1 PUSH2 0x484 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x493 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x407 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x4F4 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x59F JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58C JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x588 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x597 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4EB JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B5 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x6 PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x787 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH0 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x698 JUMPI PUSH2 0x697 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x725 JUMPI PUSH2 0x724 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x792 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x815 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 JUMPDEST PUSH2 0x8A8 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0x933 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x920 JUMPI DUP2 DUP1 PUSH2 0x91C SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x92B SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x89F JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x988 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x975 PUSH2 0x13CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x96D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x9E3 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 GT PUSH2 0xB06 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEC JUMPI PUSH1 0x6 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAB2 JUMPI PUSH2 0xAB1 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD0 PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0xAE8 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP5 DUP3 GT PUSH2 0xB06 JUMPI DUP1 DUP1 PUSH2 0xAFE SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DA JUMP JUMPDEST POP DUP2 DUP4 SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH0 PUSH2 0x139F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB59 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST LT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 EQ DUP1 PUSH2 0xC4C JUMPI POP PUSH1 0x4 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC57 JUMPI POP PUSH1 0x6 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC62 JUMPI POP PUSH1 0x8 DUP3 EQ JUMPDEST DUP1 PUSH2 0xC6D JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA3 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP CALLER PUSH1 0x5 PUSH0 PUSH2 0xCBD PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDB SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 PUSH2 0xDF1 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0xE22 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3C DUP4 PUSH2 0xE43 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x6 PUSH0 PUSH2 0xE4F PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0xE70 PUSH0 PUSH2 0x1393 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE9F PUSH0 PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x78 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xEB8 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST GT PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEF SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0xF09 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF45 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x6 PUSH0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFBC JUMPI PUSH2 0xFBB DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAD PUSH2 0x193A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x11AE JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xFC7 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF50 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1046 SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11F4 DUP3 PUSH1 0x6 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0x3 SLOAD PUSH1 0x6 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x5 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1350 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x13C1 JUMPI DUP2 PUSH2 0x13C3 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141E DUP3 PUSH2 0x13F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142E DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP2 EQ PUSH2 0x1438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1449 DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1471 DUP5 DUP3 DUP6 ADD PUSH2 0x143B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x147A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BF DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152A DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x14AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1576 DUP4 DUP4 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1598 DUP3 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x15A2 DUP2 DUP6 PUSH2 0x153D JUMP JUMPDEST SWAP4 POP PUSH2 0x15AD DUP4 PUSH2 0x154D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DD JUMPI DUP2 MLOAD PUSH2 0x15C4 DUP9 DUP3 PUSH2 0x156B JUMP JUMPDEST SWAP8 POP PUSH2 0x15CF DUP4 PUSH2 0x1582 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15B0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1602 DUP2 DUP5 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1613 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162C PUSH0 DUP4 ADD DUP5 PUSH2 0x160A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1664 DUP2 PUSH2 0x147A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x167E PUSH0 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1691 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16A4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x155C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x16B7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x165B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C8 DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x163C JUMP JUMPDEST SWAP4 POP PUSH2 0x16FF DUP4 PUSH2 0x164C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x172F JUMPI DUP2 MLOAD PUSH2 0x1716 DUP9 DUP3 PUSH2 0x16BD JUMP JUMPDEST SWAP8 POP PUSH2 0x1721 DUP4 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1702 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1754 DUP2 DUP6 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1768 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17C2 PUSH0 DUP4 ADD DUP8 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17CF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17E9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1815 PUSH2 0x1810 PUSH2 0x180B DUP5 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1826 DUP3 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1837 DUP3 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1847 DUP2 PUSH2 0x182D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1860 PUSH0 DUP4 ADD DUP5 PUSH2 0x183E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x189D DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x18A8 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D0 DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1902 JUMPI PUSH2 0x1901 PUSH2 0x1866 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616D6F756E74207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19AB PUSH1 0x10 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B6 DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19D8 DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x19FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x147A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A2A DUP2 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A69 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A83 PUSH2 0x13F1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A91 DUP5 DUP3 DUP6 ADD PUSH2 0x1A5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374207374616B65206D6F7265207468616E207A65726F20746F6B656E73 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACE PUSH1 0x20 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD9 DUP3 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFB DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682042616C616E636520546F6B656E7320546F20537461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5C PUSH1 0x22 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B67 DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B89 DUP2 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461727269662063616E204F6E6C79206265206F6620322C342C362C382C3130 PUSH0 DUP3 ADD MSTORE PUSH32 0x204D696E75746573000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA PUSH1 0x28 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF5 DUP3 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C17 DUP2 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C31 PUSH0 DUP4 ADD DUP7 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C3E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C4B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4769766520617070726F76616C2066726F6D20696E697469616C20746F207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAD PUSH1 0x23 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB8 DUP3 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CDA DUP2 PUSH2 0x1CA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEB DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF6 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1E DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D29 DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D37 DUP2 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E2054696D6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D89 PUSH1 0xD DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520686176656E2774207374616B656420616E7920616D6F756E74000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF1 PUSH1 0x1D DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFC DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1E DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420746F20636C61696D0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E59 PUSH1 0x12 DUP4 PUSH2 0x1967 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E86 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EC4 DUP3 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP4 PUSH2 0x14AD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x7577B14FA31C322171130A71 PUSH21 0x55EFA4668FB726E1D6F114B12D2D5F93678D64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "759:8037:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6954:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1437:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5482:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4758:653;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8123:671;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5647:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;894:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1152:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;921:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3760:925;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2107:1560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7257:808;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1228:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5842:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6366:543;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;869:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6954:156;7015:4;7055:1;7039:7;:13;7047:4;7039:13;;;;;;;;;;;;;;;;:17;7038:64;;;;;7099:3;7082:15;7062:19;;:35;;;;:::i;:::-;7061:41;7038:64;7030:73;;6954:156;;;:::o;1437:42::-;;;;;;;;;;;;;;;;;:::o;5482:106::-;5534:7;5560:6;:10;5567:2;5560:10;;;;;;;;;;;:21;;;5553:28;;5482:106;;;:::o;4758:653::-;4807:16;4899:13;4931:9;4926:147;4951:24;:14;:22;:24::i;:::-;4946:1;:29;4926:147;;5019:2;5000:21;;:12;:15;5013:1;5000:15;;;;;;;;;;;;;;;;;;;;;:21;;;4996:67;;5041:7;;;;;:::i;:::-;;;;4996:67;4977:3;;;;;:::i;:::-;;;;4926:147;;;;5114:24;5155:5;5141:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:47;;5171:13;5203:9;5198:183;5223:24;:14;:22;:24::i;:::-;5218:1;:29;5198:183;;5291:2;5272:21;;:12;:15;5285:1;5272:15;;;;;;;;;;;;;;;;;;;;;:21;;;5268:103;;5330:1;5313:7;5321:5;5313:14;;;;;;;;:::i;:::-;;;;;;;:18;;;;;5349:7;;;;;:::i;:::-;;;;5268:103;5249:3;;;;;:::i;:::-;;;;5198:183;;;;5397:7;5390:14;;;;;4758:653;;;:::o;8123:671::-;8232:24;8259:12;8266:4;8259:6;:12::i;:::-;8232:39;;8306:1;8289:7;:14;:18;8281:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;8429:9;8424:364;8448:7;:14;8444:1;:18;8424:364;;;8488:6;:18;8495:7;8503:1;8495:10;;;;;;;;:::i;:::-;;;;;;;;8488:18;;;;;;;;;;;:26;;;;;;;;;;;;8483:295;;8534:5;;;;;;;;;;;:14;;;8549:10;8561:6;:18;8568:7;8576:1;8568:10;;;;;;;;:::i;:::-;;;;;;;;8561:18;;;;;;;;;;;:31;;;8534:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8645:1;8611:6;:18;8618:7;8626:1;8618:10;;;;;;;;:::i;:::-;;;;;;;;8611:18;;;;;;;;;;;:31;;:35;;;;8693:4;8664:6;:18;8671:7;8679:1;8671:10;;;;;;;;:::i;:::-;;;;;;;;8664:18;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;8483:295;8464:3;;;;;:::i;:::-;;;;8424:364;;;;8165:629;8123:671;:::o;5647:111::-;5695:7;5721:5;;;;;;;;;;;:15;;;5745:4;5721:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5714:37;;5647:111;:::o;894:20::-;;;;;;;;;;;;;:::o;1152:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;921:27::-;;;;:::o;3760:925::-;3816:16;3834:20;3930:13;3962:9;3957:147;3982:24;:14;:22;:24::i;:::-;3977:1;:29;3957:147;;4050:2;4031:21;;:12;:15;4044:1;4031:15;;;;;;;;;;;;;;;;;;;;;:21;;;4027:67;;4072:7;;;;;:::i;:::-;;;;4027:67;4008:3;;;;;:::i;:::-;;;;3957:147;;;;4183:33;4237:5;4219:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4183:60;;4253:24;4294:5;4280:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4253:47;;4310:13;4342:9;4337:302;4362:24;:14;:22;:24::i;:::-;4357:1;:29;4337:302;;4430:2;4411:21;;:12;:15;4424:1;4411:15;;;;;;;;;;;;;;;;;;;;;:21;;;4407:152;;4474:6;:9;4481:1;4474:9;;;;;;;;;;;4452:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;4465:5;4452:19;;;;;;;;:::i;:::-;;;;;;;:31;;;;4518:1;4501:7;4509:5;4501:14;;;;;;;;:::i;:::-;;;;;;;:18;;;;;4537:7;;;;;:::i;:::-;;;;4407:152;4584:5;4576;:13;4609:5;4572:57;4388:3;;;;;:::i;:::-;;;;4337:302;;;;4656:7;4665:12;4648:30;;;;;;;;3760:925;;;:::o;2107:1560::-;2176:7;2375:26;:14;:24;:26::i;:::-;2497:1;2484:10;:14;2476:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:10;2553:5;;;;;;;;;;;:15;;;2569:10;2553:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2545:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2661:1;2651:6;:11;:42;;;;2692:1;2682:6;:11;2651:42;:74;;;;2724:1;2714:6;:11;2651:74;:106;;;;2756:1;2746:6;:11;2651:106;:139;;;;2788:2;2778:6;:12;2651:139;2643:204;;;;;;;;;;;;:::i;:::-;;;;;;;;;2910:22;2935:15;2910:40;;3001:10;2960:12;:38;2973:24;:14;:22;:24::i;:::-;2960:38;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;3029:5;;;;;;;;;;;:18;;;3048:10;3068:4;3075:10;3029:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3021:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;3185:10;3136:6;:32;3143:24;:14;:22;:24::i;:::-;3136:32;;;;;;;;;;;:45;;;:59;;;;;;;:::i;:::-;;;;;;;;3251:14;3205:6;:32;3212:24;:14;:22;:24::i;:::-;3205:32;;;;;;;;;;;:43;;:60;;;;3449:2;3440:6;:11;;;;:::i;:::-;3396:6;:32;3403:24;:14;:22;:24::i;:::-;3396:32;;;;;;;;;;;:41;;:55;;;;3613:5;3570:6;:32;3577:24;:14;:22;:24::i;:::-;3570:32;;;;;;;;;;;:40;;;:48;;;;;;;;;;;;;;;;;;3636:24;:14;:22;:24::i;:::-;3629:31;;;2107:1560;;;;:::o;7257:808::-;7411:3;7394:15;7374:19;;:35;;;;:::i;:::-;7373:41;7365:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7461:15;7441:19;:35;;;;7486:24;7513:12;7520:4;7513:6;:12::i;:::-;7486:39;;7560:1;7543:7;:14;:18;7535:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7687:9;7682:160;7706:7;:14;7702:1;:18;7682:160;;;7746:6;:18;7753:7;7761:1;7753:10;;;;;;;;:::i;:::-;;;;;;;;7746:18;;;;;;;;;;;:26;;;;;;;;;;;;7741:91;;7792:25;7806:7;7814:1;7806:10;;;;;;;;:::i;:::-;;;;;;;;7792:13;:25::i;:::-;7741:91;7722:3;;;;;:::i;:::-;;;;7682:160;;;;7956:1;7940:7;:13;7948:4;7940:13;;;;;;;;;;;;;;;;:17;7932:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7990:5;;;;;;;;;;;:14;;;8005:10;8017:7;:13;8025:4;8017:13;;;;;;;;;;;;;;;;7990:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8057:1;8041:7;:13;8049:4;8041:13;;;;;;;;;;;;;;;:17;;;;7299:766;7257:808;:::o;1228:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5842:92::-;5886:7;5912:15;5905:22;;5842:92;:::o;6366:543::-;6418:20;6441:15;6418:38;;6466:23;6507:6;:10;6514:2;6507:10;;;;;;;;;;;:21;;;6492:12;:36;;;;:::i;:::-;6466:62;;6538:12;6553:41;6557:15;6574:6;:10;6581:2;6574:10;;;;;;;;;;;:19;;;6553:3;:41::i;:::-;6538:56;;6795:3;6787:4;6776:8;;6750:6;:10;6757:2;6750:10;;;;;;;;;;;:23;;;:34;;;;:::i;:::-;:41;;;;:::i;:::-;6749:49;;;;:::i;:::-;6721:7;:25;6729:12;:16;6742:2;6729:16;;;;;;;;;;;;;;;;;;;;;6721:25;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;6693:7;:25;6701:12;:16;6714:2;6701:16;;;;;;;;;;;;;;;;;;;;;6693:25;;;;;;;;;;;;;;;:105;;;;6832:12;6808:6;:10;6815:2;6808:10;;;;;;;;;;;:21;;:36;;;;6898:4;6876:6;:10;6883:2;6876:10;;;;;;;;;;;:19;;;:26;;;;:::i;:::-;6854:6;:10;6861:2;6854:10;;;;;;;;;;;:19;;:48;;;;6408:501;;;6366:543;:::o;869:19::-;;;;;;;;;;;;;:::o;827:112:1:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;6030:104:2:-;6088:7;6118:1;6114;:5;:13;;6126:1;6114:13;;;6122:1;6114:13;6107:20;;6030:104;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:122::-;2111:24;2129:5;2111:24;:::i;:::-;2104:5;2101:35;2091:63;;2150:1;2147;2140:12;2091:63;2038:122;:::o;2166:139::-;2212:5;2250:6;2237:20;2228:29;;2266:33;2293:5;2266:33;:::i;:::-;2166:139;;;;:::o;2311:329::-;2370:6;2419:2;2407:9;2398:7;2394:23;2390:32;2387:119;;;2425:79;;:::i;:::-;2387:119;2545:1;2570:53;2615:7;2606:6;2595:9;2591:22;2570:53;:::i;:::-;2560:63;;2516:117;2311:329;;;;:::o;2646:114::-;2713:6;2747:5;2741:12;2731:22;;2646:114;;;:::o;2766:184::-;2865:11;2899:6;2894:3;2887:19;2939:4;2934:3;2930:14;2915:29;;2766:184;;;;:::o;2956:132::-;3023:4;3046:3;3038:11;;3076:4;3071:3;3067:14;3059:22;;2956:132;;;:::o;3094:108::-;3171:24;3189:5;3171:24;:::i;:::-;3166:3;3159:37;3094:108;;:::o;3208:179::-;3277:10;3298:46;3340:3;3332:6;3298:46;:::i;:::-;3376:4;3371:3;3367:14;3353:28;;3208:179;;;;:::o;3393:113::-;3463:4;3495;3490:3;3486:14;3478:22;;3393:113;;;:::o;3542:732::-;3661:3;3690:54;3738:5;3690:54;:::i;:::-;3760:86;3839:6;3834:3;3760:86;:::i;:::-;3753:93;;3870:56;3920:5;3870:56;:::i;:::-;3949:7;3980:1;3965:284;3990:6;3987:1;3984:13;3965:284;;;4066:6;4060:13;4093:63;4152:3;4137:13;4093:63;:::i;:::-;4086:70;;4179:60;4232:6;4179:60;:::i;:::-;4169:70;;4025:224;4012:1;4009;4005:9;4000:14;;3965:284;;;3969:14;4265:3;4258:10;;3666:608;;;3542:732;;;;:::o;4280:373::-;4423:4;4461:2;4450:9;4446:18;4438:26;;4510:9;4504:4;4500:20;4496:1;4485:9;4481:17;4474:47;4538:108;4641:4;4632:6;4538:108;:::i;:::-;4530:116;;4280:373;;;;:::o;4659:118::-;4746:24;4764:5;4746:24;:::i;:::-;4741:3;4734:37;4659:118;;:::o;4783:222::-;4876:4;4914:2;4903:9;4899:18;4891:26;;4927:71;4995:1;4984:9;4980:17;4971:6;4927:71;:::i;:::-;4783:222;;;;:::o;5011:142::-;5106:6;5140:5;5134:12;5124:22;;5011:142;;;:::o;5159:212::-;5286:11;5320:6;5315:3;5308:19;5360:4;5355:3;5351:14;5336:29;;5159:212;;;;:::o;5377:160::-;5472:4;5495:3;5487:11;;5525:4;5520:3;5516:14;5508:22;;5377:160;;;:::o;5543:99::-;5614:21;5629:5;5614:21;:::i;:::-;5609:3;5602:34;5543:99;;:::o;5712:866::-;5855:4;5850:3;5846:14;5950:4;5943:5;5939:16;5933:23;5969:63;6026:4;6021:3;6017:14;6003:12;5969:63;:::i;:::-;5870:172;6130:4;6123:5;6119:16;6113:23;6149:63;6206:4;6201:3;6197:14;6183:12;6149:63;:::i;:::-;6052:170;6308:4;6301:5;6297:16;6291:23;6327:63;6384:4;6379:3;6375:14;6361:12;6327:63;:::i;:::-;6232:168;6485:4;6478:5;6474:16;6468:23;6504:57;6555:4;6550:3;6546:14;6532:12;6504:57;:::i;:::-;6410:161;5824:754;5712:866;;:::o;6584:291::-;6709:10;6730:102;6828:3;6820:6;6730:102;:::i;:::-;6864:4;6859:3;6855:14;6841:28;;6584:291;;;;:::o;6881:141::-;6979:4;7011;7006:3;7002:14;6994:22;;6881:141;;;:::o;7096:956::-;7271:3;7300:82;7376:5;7300:82;:::i;:::-;7398:114;7505:6;7500:3;7398:114;:::i;:::-;7391:121;;7536:84;7614:5;7536:84;:::i;:::-;7643:7;7674:1;7659:368;7684:6;7681:1;7678:13;7659:368;;;7760:6;7754:13;7787:119;7902:3;7887:13;7787:119;:::i;:::-;7780:126;;7929:88;8010:6;7929:88;:::i;:::-;7919:98;;7719:308;7706:1;7703;7699:9;7694:14;;7659:368;;;7663:14;8043:3;8036:10;;7276:776;;;7096:956;;;;:::o;8058:746::-;8335:4;8373:2;8362:9;8358:18;8350:26;;8422:9;8416:4;8412:20;8408:1;8397:9;8393:17;8386:47;8450:108;8553:4;8544:6;8450:108;:::i;:::-;8442:116;;8605:9;8599:4;8595:20;8590:2;8579:9;8575:18;8568:48;8633:164;8792:4;8783:6;8633:164;:::i;:::-;8625:172;;8058:746;;;;;:::o;8810:474::-;8878:6;8886;8935:2;8923:9;8914:7;8910:23;8906:32;8903:119;;;8941:79;;:::i;:::-;8903:119;9061:1;9086:53;9131:7;9122:6;9111:9;9107:22;9086:53;:::i;:::-;9076:63;;9032:117;9188:2;9214:53;9259:7;9250:6;9239:9;9235:22;9214:53;:::i;:::-;9204:63;;9159:118;8810:474;;;;;:::o;9290:541::-;9461:4;9499:3;9488:9;9484:19;9476:27;;9513:71;9581:1;9570:9;9566:17;9557:6;9513:71;:::i;:::-;9594:72;9662:2;9651:9;9647:18;9638:6;9594:72;:::i;:::-;9676;9744:2;9733:9;9729:18;9720:6;9676:72;:::i;:::-;9758:66;9820:2;9809:9;9805:18;9796:6;9758:66;:::i;:::-;9290:541;;;;;;;:::o;9837:60::-;9865:3;9886:5;9879:12;;9837:60;;;:::o;9903:142::-;9953:9;9986:53;10004:34;10013:24;10031:5;10013:24;:::i;:::-;10004:34;:::i;:::-;9986:53;:::i;:::-;9973:66;;9903:142;;;:::o;10051:126::-;10101:9;10134:37;10165:5;10134:37;:::i;:::-;10121:50;;10051:126;;;:::o;10183:139::-;10246:9;10279:37;10310:5;10279:37;:::i;:::-;10266:50;;10183:139;;;:::o;10328:157::-;10428:50;10472:5;10428:50;:::i;:::-;10423:3;10416:63;10328:157;;:::o;10491:248::-;10597:4;10635:2;10624:9;10620:18;10612:26;;10648:84;10729:1;10718:9;10714:17;10705:6;10648:84;:::i;:::-;10491:248;;;;:::o;10745:180::-;10793:77;10790:1;10783:88;10890:4;10887:1;10880:15;10914:4;10911:1;10904:15;10931:194;10971:4;10991:20;11009:1;10991:20;:::i;:::-;10986:25;;11025:20;11043:1;11025:20;:::i;:::-;11020:25;;11069:1;11066;11062:9;11054:17;;11093:1;11087:4;11084:11;11081:37;;;11098:18;;:::i;:::-;11081:37;10931:194;;;;:::o;11131:233::-;11170:3;11193:24;11211:5;11193:24;:::i;:::-;11184:33;;11239:66;11232:5;11229:77;11226:103;;11309:18;;:::i;:::-;11226:103;11356:1;11349:5;11345:13;11338:20;;11131:233;;;:::o;11370:180::-;11418:77;11415:1;11408:88;11515:4;11512:1;11505:15;11539:4;11536:1;11529:15;11556:180;11604:77;11601:1;11594:88;11701:4;11698:1;11691:15;11725:4;11722:1;11715:15;11742:169;11826:11;11860:6;11855:3;11848:19;11900:4;11895:3;11891:14;11876:29;;11742:169;;;;:::o;11917:166::-;12057:18;12053:1;12045:6;12041:14;12034:42;11917:166;:::o;12089:366::-;12231:3;12252:67;12316:2;12311:3;12252:67;:::i;:::-;12245:74;;12328:93;12417:3;12328:93;:::i;:::-;12446:2;12441:3;12437:12;12430:19;;12089:366;;;:::o;12461:419::-;12627:4;12665:2;12654:9;12650:18;12642:26;;12714:9;12708:4;12704:20;12700:1;12689:9;12685:17;12678:47;12742:131;12868:4;12742:131;:::i;:::-;12734:139;;12461:419;;;:::o;12886:332::-;13007:4;13045:2;13034:9;13030:18;13022:26;;13058:71;13126:1;13115:9;13111:17;13102:6;13058:71;:::i;:::-;13139:72;13207:2;13196:9;13192:18;13183:6;13139:72;:::i;:::-;12886:332;;;;;:::o;13224:116::-;13294:21;13309:5;13294:21;:::i;:::-;13287:5;13284:32;13274:60;;13330:1;13327;13320:12;13274:60;13224:116;:::o;13346:137::-;13400:5;13431:6;13425:13;13416:22;;13447:30;13471:5;13447:30;:::i;:::-;13346:137;;;;:::o;13489:345::-;13556:6;13605:2;13593:9;13584:7;13580:23;13576:32;13573:119;;;13611:79;;:::i;:::-;13573:119;13731:1;13756:61;13809:7;13800:6;13789:9;13785:22;13756:61;:::i;:::-;13746:71;;13702:125;13489:345;;;;:::o;13840:143::-;13897:5;13928:6;13922:13;13913:22;;13944:33;13971:5;13944:33;:::i;:::-;13840:143;;;;:::o;13989:351::-;14059:6;14108:2;14096:9;14087:7;14083:23;14079:32;14076:119;;;14114:79;;:::i;:::-;14076:119;14234:1;14259:64;14315:7;14306:6;14295:9;14291:22;14259:64;:::i;:::-;14249:74;;14205:128;13989:351;;;;:::o;14346:182::-;14486:34;14482:1;14474:6;14470:14;14463:58;14346:182;:::o;14534:366::-;14676:3;14697:67;14761:2;14756:3;14697:67;:::i;:::-;14690:74;;14773:93;14862:3;14773:93;:::i;:::-;14891:2;14886:3;14882:12;14875:19;;14534:366;;;:::o;14906:419::-;15072:4;15110:2;15099:9;15095:18;15087:26;;15159:9;15153:4;15149:20;15145:1;15134:9;15130:17;15123:47;15187:131;15313:4;15187:131;:::i;:::-;15179:139;;14906:419;;;:::o;15331:221::-;15471:34;15467:1;15459:6;15455:14;15448:58;15540:4;15535:2;15527:6;15523:15;15516:29;15331:221;:::o;15558:366::-;15700:3;15721:67;15785:2;15780:3;15721:67;:::i;:::-;15714:74;;15797:93;15886:3;15797:93;:::i;:::-;15915:2;15910:3;15906:12;15899:19;;15558:366;;;:::o;15930:419::-;16096:4;16134:2;16123:9;16119:18;16111:26;;16183:9;16177:4;16173:20;16169:1;16158:9;16154:17;16147:47;16211:131;16337:4;16211:131;:::i;:::-;16203:139;;15930:419;;;:::o;16355:227::-;16495:34;16491:1;16483:6;16479:14;16472:58;16564:10;16559:2;16551:6;16547:15;16540:35;16355:227;:::o;16588:366::-;16730:3;16751:67;16815:2;16810:3;16751:67;:::i;:::-;16744:74;;16827:93;16916:3;16827:93;:::i;:::-;16945:2;16940:3;16936:12;16929:19;;16588:366;;;:::o;16960:419::-;17126:4;17164:2;17153:9;17149:18;17141:26;;17213:9;17207:4;17203:20;17199:1;17188:9;17184:17;17177:47;17241:131;17367:4;17241:131;:::i;:::-;17233:139;;16960:419;;;:::o;17385:442::-;17534:4;17572:2;17561:9;17557:18;17549:26;;17585:71;17653:1;17642:9;17638:17;17629:6;17585:71;:::i;:::-;17666:72;17734:2;17723:9;17719:18;17710:6;17666:72;:::i;:::-;17748;17816:2;17805:9;17801:18;17792:6;17748:72;:::i;:::-;17385:442;;;;;;:::o;17833:222::-;17973:34;17969:1;17961:6;17957:14;17950:58;18042:5;18037:2;18029:6;18025:15;18018:30;17833:222;:::o;18061:366::-;18203:3;18224:67;18288:2;18283:3;18224:67;:::i;:::-;18217:74;;18300:93;18389:3;18300:93;:::i;:::-;18418:2;18413:3;18409:12;18402:19;;18061:366;;;:::o;18433:419::-;18599:4;18637:2;18626:9;18622:18;18614:26;;18686:9;18680:4;18676:20;18672:1;18661:9;18657:17;18650:47;18714:131;18840:4;18714:131;:::i;:::-;18706:139;;18433:419;;;:::o;18858:191::-;18898:3;18917:20;18935:1;18917:20;:::i;:::-;18912:25;;18951:20;18969:1;18951:20;:::i;:::-;18946:25;;18994:1;18991;18987:9;18980:16;;19015:3;19012:1;19009:10;19006:36;;;19022:18;;:::i;:::-;19006:36;18858:191;;;;:::o;19055:410::-;19095:7;19118:20;19136:1;19118:20;:::i;:::-;19113:25;;19152:20;19170:1;19152:20;:::i;:::-;19147:25;;19207:1;19204;19200:9;19229:30;19247:11;19229:30;:::i;:::-;19218:41;;19408:1;19399:7;19395:15;19392:1;19389:22;19369:1;19362:9;19342:83;19319:139;;19438:18;;:::i;:::-;19319:139;19103:362;19055:410;;;;:::o;19471:163::-;19611:15;19607:1;19599:6;19595:14;19588:39;19471:163;:::o;19640:366::-;19782:3;19803:67;19867:2;19862:3;19803:67;:::i;:::-;19796:74;;19879:93;19968:3;19879:93;:::i;:::-;19997:2;19992:3;19988:12;19981:19;;19640:366;;;:::o;20012:419::-;20178:4;20216:2;20205:9;20201:18;20193:26;;20265:9;20259:4;20255:20;20251:1;20240:9;20236:17;20229:47;20293:131;20419:4;20293:131;:::i;:::-;20285:139;;20012:419;;;:::o;20437:179::-;20577:31;20573:1;20565:6;20561:14;20554:55;20437:179;:::o;20622:366::-;20764:3;20785:67;20849:2;20844:3;20785:67;:::i;:::-;20778:74;;20861:93;20950:3;20861:93;:::i;:::-;20979:2;20974:3;20970:12;20963:19;;20622:366;;;:::o;20994:419::-;21160:4;21198:2;21187:9;21183:18;21175:26;;21247:9;21241:4;21237:20;21233:1;21222:9;21218:17;21211:47;21275:131;21401:4;21275:131;:::i;:::-;21267:139;;20994:419;;;:::o;21419:168::-;21559:20;21555:1;21547:6;21543:14;21536:44;21419:168;:::o;21593:366::-;21735:3;21756:67;21820:2;21815:3;21756:67;:::i;:::-;21749:74;;21832:93;21921:3;21832:93;:::i;:::-;21950:2;21945:3;21941:12;21934:19;;21593:366;;;:::o;21965:419::-;22131:4;22169:2;22158:9;22154:18;22146:26;;22218:9;22212:4;22208:20;22204:1;22193:9;22189:17;22182:47;22246:131;22372:4;22246:131;:::i;:::-;22238:139;;21965:419;;;:::o;22390:180::-;22438:77;22435:1;22428:88;22535:4;22532:1;22525:15;22559:4;22556:1;22549:15;22576:185;22616:1;22633:20;22651:1;22633:20;:::i;:::-;22628:25;;22667:20;22685:1;22667:20;:::i;:::-;22662:25;;22706:1;22696:35;;22711:18;;:::i;:::-;22696:35;22753:1;22750;22746:9;22741:14;;22576:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1593600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CurrentTime()": "375",
								"IdsAndDetails(address)": "infinite",
								"Stake(uint256,uint256)": "infinite",
								"claimAmount(address)": "infinite",
								"claimReward(address)": "infinite",
								"contractBalance()": "infinite",
								"genrateReward(uint256)": "infinite",
								"getIds(address)": "infinite",
								"interest()": "2448",
								"isRewardAvailable(address)": "infinite",
								"owner()": "2575",
								"rewards(address)": "2848",
								"stakeTime(uint256)": "infinite",
								"stakes(uint256)": "infinite",
								"stakingOwner(uint256)": "2916",
								"token()": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 947,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 921,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 921,
									"end": 948,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1486,
									"end": 1655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1613,
									"end": 1619,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1598,
									"end": 1620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1638,
									"end": 1648,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1635,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1630,
									"end": 1635,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1648,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1655,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 8796,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b7577b14fa31c322171130a717455efa4668fb726e1d6f114b12d2d5f93678d64736f6c63430008150033",
									".code": [
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "C392F766"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "D5A44F86"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "D5A44F86"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "D80E8700"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "F3A93E80"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "FC0C546A"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "C392F766"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "C9352971"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "C9EC05EA"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "D279C191"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "78317BE7"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "78317BE7"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "8B7AFE2E"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "90EB2981"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "64F50C"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "700037D"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "A42F049"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "2671B0D8"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 8796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6954,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6954,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6954,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1437,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1437,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5482,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5482,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5482,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4758,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4758,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8123,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8123,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5647,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5647,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 894,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 894,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1152,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1152,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 921,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 921,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3760,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3760,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2107,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2107,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2107,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7257,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1228,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1228,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1228,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5842,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5842,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6366,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6366,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 869,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 869,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7046,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7056,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7062,
											"end": 7081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7062,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7062,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7061,
											"end": 7102,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7038,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7030,
											"end": 7103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7030,
											"end": 7103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5570,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5560,
											"end": 5581,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5581,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4823,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4899,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4951,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4951,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5012,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5000,
											"end": 5015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4996,
											"end": 5063,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5041,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5063,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4996,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4977,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4926,
											"end": 5073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5141,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5223,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5223,
											"end": 5237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5223,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5223,
											"end": 5247,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5223,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5247,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5284,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5268,
											"end": 5371,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5313,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5349,
											"end": 5356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5371,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5268,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5249,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5404,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4758,
											"end": 5411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8232,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8232,
											"end": 8271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8232,
											"end": 8271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8289,
											"end": 8303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8281,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8281,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8448,
											"end": 8455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8494,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8495,
											"end": 8505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8488,
											"end": 8514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8483,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8483,
											"end": 8778,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8548,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8534,
											"end": 8548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8548,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 8549,
											"end": 8559,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8575,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8576,
											"end": 8577,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8568,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8568,
											"end": 8578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8561,
											"end": 8592,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 8534,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8534,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8625,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8626,
											"end": 8627,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8618,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8629,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8646,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8670,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8678,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8679,
											"end": 8680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8671,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8690,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8664,
											"end": 8690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8483,
											"end": 8778,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8483,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8464,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 8788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5721,
											"end": 5726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5721,
											"end": 5736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5745,
											"end": 5749,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5721,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5721,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5721,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 894,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 921,
											"end": 948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 921,
											"end": 948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3816,
											"end": 3832,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3834,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3982,
											"end": 3996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3982,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 4006,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3982,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 4006,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4052,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4052,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4027,
											"end": 4094,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4072,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4027,
											"end": 4094,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4027,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4008,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4219,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4219,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4183,
											"end": 4243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4280,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4310,
											"end": 4323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4362,
											"end": 4376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4362,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4386,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4362,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4357,
											"end": 4386,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4425,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4432,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4407,
											"end": 4559,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4452,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4452,
											"end": 4483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4509,
											"end": 4514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4501,
											"end": 4515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4537,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4559,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4407,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4584,
											"end": 4589,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4589,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4572,
											"end": 4629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4388,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 4685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2375,
											"end": 2389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2375,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2401,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2375,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2498,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2476,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2476,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2569,
											"end": 2579,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2553,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2553,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2553,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2594,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2594,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2545,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2545,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2662,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2693,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2651,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2651,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2651,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2790,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2651,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2643,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2643,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2973,
											"end": 2987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2973,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2973,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 3048,
											"end": 3058,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3029,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3029,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3029,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3021,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3021,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3143,
											"end": 3157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3143,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3168,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3136,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3212,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3212,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3236,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3212,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3237,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3248,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3205,
											"end": 3248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 3440,
											"end": 3446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3440,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3403,
											"end": 3417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3403,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3403,
											"end": 3427,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3403,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3577,
											"end": 3591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3577,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3577,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3570,
											"end": 3610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3636,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 3660,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3636,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3660,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 3667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "PUSH",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7394,
											"end": 7409,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7393,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7374,
											"end": 7409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7374,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7414,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7365,
											"end": 7431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7365,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7461,
											"end": 7476,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7476,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7486,
											"end": 7510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7486,
											"end": 7525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7486,
											"end": 7525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7535,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7535,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7760,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7753,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7741,
											"end": 7832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7792,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7806,
											"end": 7813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7806,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7792,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7792,
											"end": 7817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7792,
											"end": 7817,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7792,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7832,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7741,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7722,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7940,
											"end": 7947,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7952,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7953,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7940,
											"end": 7957,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7932,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7932,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7990,
											"end": 7995,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8017,
											"end": 8030,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7990,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7990,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7990,
											"end": 8031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8054,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8058,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8041,
											"end": 8058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 8065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5886,
											"end": 5893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5927,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6441,
											"end": 6456,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6466,
											"end": 6489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6516,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6492,
											"end": 6504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6492,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6492,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6466,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6466,
											"end": 6528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6557,
											"end": 6572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6593,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6574,
											"end": 6593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6593,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6553,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6594,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6553,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6776,
											"end": 6784,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6776,
											"end": 6784,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6759,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6750,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6750,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6750,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6750,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6749,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6749,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6721,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6721,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6700,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6718,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6798,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6832,
											"end": 6844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6817,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6818,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6808,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6844,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6808,
											"end": 6844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6886,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6876,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6876,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6860,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6854,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6902,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6408,
											"end": 6909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6408,
											"end": 6909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6408,
											"end": 6909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 869,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6088,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6119,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6122,
											"end": 6123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6114,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1954,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2111,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2266,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2422,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2425,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2615,
											"end": 2622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2570,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2760,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2646,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2753,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2906,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 2944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2956,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3038,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3038,
											"end": 3049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3202,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3094,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 3189,
											"end": 3194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3171,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 3171,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3340,
											"end": 3343,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3298,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3344,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 3298,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3374,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3381,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3506,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 3393,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 3738,
											"end": 3743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3690,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3744,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 3690,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3760,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3846,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 3760,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3846,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3870,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3926,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 3870,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 3997,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4152,
											"end": 4155,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4093,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 4093,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4086,
											"end": 4156,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4086,
											"end": 4156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4179,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4239,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 4179,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4239,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4009,
											"end": 4010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 3965,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 3983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 4274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4497,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4474,
											"end": 4521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4538,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4646,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 4538,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4777,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4659,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4746,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4770,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 4746,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4771,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4927,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4998,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 4927,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5153,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5011,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5315,
											"end": 5318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5327,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5355,
											"end": 5358,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5336,
											"end": 5365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5336,
											"end": 5365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5537,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 5377,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5520,
											"end": 5523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 5543,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5629,
											"end": 5634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5614,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5614,
											"end": 5635,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5614,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5636,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6578,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5712,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5855,
											"end": 5859,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5850,
											"end": 5853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5846,
											"end": 5860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5950,
											"end": 5954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5956,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6024,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6003,
											"end": 6015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 5969,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6032,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5969,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6136,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6206,
											"end": 6210,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6201,
											"end": 6204,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6149,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6212,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6149,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6308,
											"end": 6312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6379,
											"end": 6382,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6375,
											"end": 6389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6361,
											"end": 6373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6327,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6390,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6327,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6478,
											"end": 6483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6491,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6555,
											"end": 6559,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6550,
											"end": 6553,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6532,
											"end": 6544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6504,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6504,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 6571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6709,
											"end": 6719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6730,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6832,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6730,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6868,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6859,
											"end": 6862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 7022,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6881,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 7022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 7022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 7022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 7022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7271,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7300,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7300,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7300,
											"end": 7382,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 7300,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7398,
											"end": 7512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7512,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7398,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7512,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 7614,
											"end": 7619,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7536,
											"end": 7620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7620,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 7536,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7643,
											"end": 7650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7681,
											"end": 7682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7678,
											"end": 7691,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7754,
											"end": 7767,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7902,
											"end": 7905,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7787,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7780,
											"end": 7906,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 7780,
											"end": 7906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7929,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7929,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7929,
											"end": 8017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7929,
											"end": 8017,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7929,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7919,
											"end": 8017,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7919,
											"end": 8017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 8027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 7707,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7703,
											"end": 7704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7659,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 8052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8422,
											"end": 8431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8397,
											"end": 8406,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8544,
											"end": 8550,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8450,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8558,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8450,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8615,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8579,
											"end": 8588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8568,
											"end": 8616,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8792,
											"end": 8796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8633,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8797,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8633,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 8884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 8921,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8910,
											"end": 8933,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8906,
											"end": 8938,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 8941,
											"end": 9020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8941,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 8903,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 9131,
											"end": 9138,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9122,
											"end": 9128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9111,
											"end": 9120,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9107,
											"end": 9129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9086,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9086,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9086,
											"end": 9139,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 9086,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9139,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9190,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 9259,
											"end": 9266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9250,
											"end": 9256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9235,
											"end": 9257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9214,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9214,
											"end": 9267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9214,
											"end": 9267,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 9214,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9204,
											"end": 9267,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9204,
											"end": 9267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9159,
											"end": 9277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 9284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9502,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9484,
											"end": 9503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9513,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9566,
											"end": 9583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9557,
											"end": 9563,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9513,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 9513,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9513,
											"end": 9584,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9513,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9662,
											"end": 9664,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9651,
											"end": 9660,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9638,
											"end": 9644,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 9594,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9594,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 9744,
											"end": 9746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9729,
											"end": 9747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 9676,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 9676,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9758,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9758,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 9758,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9758,
											"end": 9824,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9758,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9897,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9837,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9891,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9837,
											"end": 9897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9903,
											"end": 10045,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9903,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9953,
											"end": 9962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 10004,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10013,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10004,
											"end": 10038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10038,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 10004,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9986,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 9986,
											"end": 10039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9986,
											"end": 10039,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 9986,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9973,
											"end": 10039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9973,
											"end": 10039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9903,
											"end": 10045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9903,
											"end": 10045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9903,
											"end": 10045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9903,
											"end": 10045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10177,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10051,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10165,
											"end": 10170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10134,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10134,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10134,
											"end": 10171,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10134,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10121,
											"end": 10171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10121,
											"end": 10171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 10310,
											"end": 10315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10279,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10279,
											"end": 10316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10279,
											"end": 10316,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 10279,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10266,
											"end": 10316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10266,
											"end": 10316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10485,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10328,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 10472,
											"end": 10477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10428,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10478,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 10428,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10416,
											"end": 10479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10612,
											"end": 10638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10729,
											"end": 10730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10731,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10648,
											"end": 10732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10732,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10648,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10491,
											"end": 10739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10745,
											"end": 10925,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10745,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10793,
											"end": 10870,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10790,
											"end": 10791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10894,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10914,
											"end": 10918,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10911,
											"end": 10912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10991,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 10991,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 11043,
											"end": 11044,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11025,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11020,
											"end": 11045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11066,
											"end": 11067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11071,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11087,
											"end": 11091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11095,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 11081,
											"end": 11118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11098,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11118,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 11081,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 11125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11364,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 11131,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11170,
											"end": 11173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11211,
											"end": 11216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11193,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11193,
											"end": 11217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11193,
											"end": 11217,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11193,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11184,
											"end": 11217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11184,
											"end": 11217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11305,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11232,
											"end": 11237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11229,
											"end": 11306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11226,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 11226,
											"end": 11329,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11309,
											"end": 11327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11226,
											"end": 11329,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 11226,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11356,
											"end": 11357,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11349,
											"end": 11354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11345,
											"end": 11358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11338,
											"end": 11358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11338,
											"end": 11358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11370,
											"end": 11550,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 11370,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11495,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11408,
											"end": 11496,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11515,
											"end": 11519,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 11512,
											"end": 11513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11505,
											"end": 11520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11529,
											"end": 11544,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11556,
											"end": 11736,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 11556,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11604,
											"end": 11681,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11601,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11594,
											"end": 11682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11701,
											"end": 11705,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11691,
											"end": 11706,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11715,
											"end": 11730,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11826,
											"end": 11837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11855,
											"end": 11858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11848,
											"end": 11867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11900,
											"end": 11904,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11895,
											"end": 11898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11891,
											"end": 11905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11876,
											"end": 11905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11876,
											"end": 11905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11917,
											"end": 12083,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 11917,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12057,
											"end": 12075,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F20616D6F756E74207374616B656400000000000000000000000000000000"
										},
										{
											"begin": 12053,
											"end": 12054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12045,
											"end": 12051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12034,
											"end": 12076,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11917,
											"end": 12083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11917,
											"end": 12083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12455,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12089,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12231,
											"end": 12234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 12316,
											"end": 12318,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 12311,
											"end": 12314,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12252,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12252,
											"end": 12319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12252,
											"end": 12319,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 12252,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12245,
											"end": 12319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12245,
											"end": 12319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12328,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 12417,
											"end": 12420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12328,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12328,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12328,
											"end": 12421,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 12328,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12446,
											"end": 12448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12441,
											"end": 12444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12430,
											"end": 12449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12430,
											"end": 12449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12880,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 12461,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12667,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12654,
											"end": 12663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12650,
											"end": 12668,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12642,
											"end": 12668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12642,
											"end": 12668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12708,
											"end": 12712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12704,
											"end": 12724,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12689,
											"end": 12698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12685,
											"end": 12702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12678,
											"end": 12725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12742,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 12868,
											"end": 12872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12742,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12742,
											"end": 12873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12742,
											"end": 12873,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 12742,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12734,
											"end": 12873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12734,
											"end": 12873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12461,
											"end": 12880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13007,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13047,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13034,
											"end": 13043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13022,
											"end": 13048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13022,
											"end": 13048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 13126,
											"end": 13127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13111,
											"end": 13128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 13058,
											"end": 13129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13129,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 13058,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13139,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 13207,
											"end": 13209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13196,
											"end": 13205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13189,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13139,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 13139,
											"end": 13211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13139,
											"end": 13211,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 13139,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12886,
											"end": 13218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 13309,
											"end": 13314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 13294,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13315,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 13294,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13287,
											"end": 13292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13284,
											"end": 13316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13274,
											"end": 13334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 13274,
											"end": 13334,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13330,
											"end": 13331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13320,
											"end": 13332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13274,
											"end": 13334,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 13274,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13224,
											"end": 13340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13400,
											"end": 13405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13431,
											"end": 13437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13425,
											"end": 13438,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13416,
											"end": 13438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13416,
											"end": 13438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13447,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13471,
											"end": 13476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13447,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 13447,
											"end": 13477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13447,
											"end": 13477,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13447,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13346,
											"end": 13483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13556,
											"end": 13562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13605,
											"end": 13607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13584,
											"end": 13591,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13580,
											"end": 13603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 13608,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13573,
											"end": 13692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13573,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 13573,
											"end": 13692,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13611,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 13611,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 13611,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13611,
											"end": 13690,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 13611,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13573,
											"end": 13692,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 13573,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13756,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13809,
											"end": 13816,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13800,
											"end": 13806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13789,
											"end": 13798,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13785,
											"end": 13807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13756,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13756,
											"end": 13817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13756,
											"end": 13817,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13756,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13746,
											"end": 13817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13746,
											"end": 13817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13702,
											"end": 13827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13489,
											"end": 13834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13897,
											"end": 13902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13928,
											"end": 13934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13922,
											"end": 13935,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13913,
											"end": 13935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13913,
											"end": 13935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13944,
											"end": 13977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13971,
											"end": 13976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13944,
											"end": 13977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 13944,
											"end": 13977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13944,
											"end": 13977,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13944,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14059,
											"end": 14065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14110,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14083,
											"end": 14106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14079,
											"end": 14111,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14114,
											"end": 14193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "tag",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 14114,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "tag",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 14076,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 14315,
											"end": 14322,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14306,
											"end": 14312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14295,
											"end": 14304,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14291,
											"end": 14313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14259,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 14259,
											"end": 14323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14259,
											"end": 14323,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 14259,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14249,
											"end": 14323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14249,
											"end": 14323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14205,
											"end": 14333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14346,
											"end": 14528,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 14346,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14486,
											"end": 14520,
											"name": "PUSH",
											"source": 3,
											"value": "4D757374207374616B65206D6F7265207468616E207A65726F20746F6B656E73"
										},
										{
											"begin": 14482,
											"end": 14483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14470,
											"end": 14484,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14463,
											"end": 14521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14346,
											"end": 14528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14346,
											"end": 14528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14900,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 14534,
											"end": 14900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14676,
											"end": 14679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14697,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 14761,
											"end": 14763,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14756,
											"end": 14759,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14697,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 14697,
											"end": 14764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14697,
											"end": 14764,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 14697,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14690,
											"end": 14764,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14690,
											"end": 14764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14773,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 14862,
											"end": 14865,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14773,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 14773,
											"end": 14866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14773,
											"end": 14866,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 14773,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14891,
											"end": 14893,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14886,
											"end": 14889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14882,
											"end": 14894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14906,
											"end": 15325,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 14906,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15072,
											"end": 15076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15087,
											"end": 15113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15087,
											"end": 15113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15153,
											"end": 15157,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15169,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15145,
											"end": 15146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15134,
											"end": 15143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15130,
											"end": 15147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15123,
											"end": 15170,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15187,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 15313,
											"end": 15317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15187,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 15187,
											"end": 15318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15187,
											"end": 15318,
											"name": "tag",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 15187,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15179,
											"end": 15318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15179,
											"end": 15318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14906,
											"end": 15325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14906,
											"end": 15325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14906,
											"end": 15325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14906,
											"end": 15325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15331,
											"end": 15552,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 15331,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15471,
											"end": 15505,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420456E6F7567682042616C616E636520546F6B656E7320546F20537461"
										},
										{
											"begin": 15467,
											"end": 15468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15459,
											"end": 15465,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15455,
											"end": 15469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15448,
											"end": 15506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15540,
											"end": 15544,
											"name": "PUSH",
											"source": 3,
											"value": "6B65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15535,
											"end": 15537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15527,
											"end": 15533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15523,
											"end": 15538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15516,
											"end": 15545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15331,
											"end": 15552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15331,
											"end": 15552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15558,
											"end": 15924,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 15558,
											"end": 15924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15700,
											"end": 15703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15721,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 15785,
											"end": 15787,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 15780,
											"end": 15783,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15721,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15721,
											"end": 15788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15721,
											"end": 15788,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 15721,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15714,
											"end": 15788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15714,
											"end": 15788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15797,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 15886,
											"end": 15889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15797,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 15797,
											"end": 15890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15797,
											"end": 15890,
											"name": "tag",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 15797,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15915,
											"end": 15917,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15906,
											"end": 15918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15899,
											"end": 15918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15899,
											"end": 15918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15558,
											"end": 15924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15558,
											"end": 15924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15558,
											"end": 15924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15558,
											"end": 15924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15930,
											"end": 16349,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 15930,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16096,
											"end": 16100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16136,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16123,
											"end": 16132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16111,
											"end": 16137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16111,
											"end": 16137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16183,
											"end": 16192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16177,
											"end": 16181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16173,
											"end": 16193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16169,
											"end": 16170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16158,
											"end": 16167,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16154,
											"end": 16171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16147,
											"end": 16194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16211,
											"end": 16342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 16337,
											"end": 16341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16211,
											"end": 16342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 16211,
											"end": 16342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16211,
											"end": 16342,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 16211,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16203,
											"end": 16342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16203,
											"end": 16342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15930,
											"end": 16349,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15930,
											"end": 16349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15930,
											"end": 16349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15930,
											"end": 16349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16355,
											"end": 16582,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 16355,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16495,
											"end": 16529,
											"name": "PUSH",
											"source": 3,
											"value": "5461727269662063616E204F6E6C79206265206F6620322C342C362C382C3130"
										},
										{
											"begin": 16491,
											"end": 16492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16483,
											"end": 16489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16479,
											"end": 16493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16472,
											"end": 16530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16564,
											"end": 16574,
											"name": "PUSH",
											"source": 3,
											"value": "204D696E75746573000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16559,
											"end": 16561,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16551,
											"end": 16557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16547,
											"end": 16562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16540,
											"end": 16575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16355,
											"end": 16582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16355,
											"end": 16582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16588,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 16588,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16751,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 16815,
											"end": 16817,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 16810,
											"end": 16813,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16751,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 16751,
											"end": 16818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16751,
											"end": 16818,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 16751,
											"end": 16818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16744,
											"end": 16818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16744,
											"end": 16818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16827,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 16916,
											"end": 16919,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16827,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 16827,
											"end": 16920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16827,
											"end": 16920,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 16827,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16945,
											"end": 16947,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16936,
											"end": 16948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16929,
											"end": 16948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16929,
											"end": 16948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16588,
											"end": 16954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16588,
											"end": 16954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16588,
											"end": 16954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16588,
											"end": 16954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16960,
											"end": 17379,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 16960,
											"end": 17379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17126,
											"end": 17130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17164,
											"end": 17166,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17153,
											"end": 17162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17149,
											"end": 17167,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17141,
											"end": 17167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17141,
											"end": 17167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17213,
											"end": 17222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17207,
											"end": 17211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17203,
											"end": 17223,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17197,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17184,
											"end": 17201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17177,
											"end": 17224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17241,
											"end": 17372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 17367,
											"end": 17371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17241,
											"end": 17372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 17241,
											"end": 17372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17241,
											"end": 17372,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 17241,
											"end": 17372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17233,
											"end": 17372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17233,
											"end": 17372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16960,
											"end": 17379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16960,
											"end": 17379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16960,
											"end": 17379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16960,
											"end": 17379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17534,
											"end": 17538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17572,
											"end": 17574,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17561,
											"end": 17570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17549,
											"end": 17575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17549,
											"end": 17575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 17653,
											"end": 17654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17642,
											"end": 17651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17638,
											"end": 17655,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17629,
											"end": 17635,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 17585,
											"end": 17656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 17734,
											"end": 17736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17723,
											"end": 17732,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17719,
											"end": 17737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 17716,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 17666,
											"end": 17738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17748,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 17816,
											"end": 17818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17805,
											"end": 17814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17801,
											"end": 17819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17792,
											"end": 17798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17748,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 17748,
											"end": 17820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17748,
											"end": 17820,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 17748,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17833,
											"end": 18055,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 17833,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17973,
											"end": 18007,
											"name": "PUSH",
											"source": 3,
											"value": "4769766520617070726F76616C2066726F6D20696E697469616C20746F207374"
										},
										{
											"begin": 17969,
											"end": 17970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17961,
											"end": 17967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17957,
											"end": 17971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17950,
											"end": 18008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18042,
											"end": 18047,
											"name": "PUSH",
											"source": 3,
											"value": "616B650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18037,
											"end": 18039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18029,
											"end": 18035,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18025,
											"end": 18040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18018,
											"end": 18048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17833,
											"end": 18055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17833,
											"end": 18055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18061,
											"end": 18427,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 18061,
											"end": 18427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18203,
											"end": 18206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 18288,
											"end": 18290,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 18283,
											"end": 18286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 18224,
											"end": 18291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18291,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 18224,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18217,
											"end": 18291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18217,
											"end": 18291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18300,
											"end": 18393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 18389,
											"end": 18392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18300,
											"end": 18393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 18300,
											"end": 18393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18300,
											"end": 18393,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 18300,
											"end": 18393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18418,
											"end": 18420,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18413,
											"end": 18416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18409,
											"end": 18421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18402,
											"end": 18421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18402,
											"end": 18421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18061,
											"end": 18427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18061,
											"end": 18427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18061,
											"end": 18427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18061,
											"end": 18427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18433,
											"end": 18852,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 18433,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18599,
											"end": 18603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18637,
											"end": 18639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18626,
											"end": 18635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18622,
											"end": 18640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18614,
											"end": 18640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18614,
											"end": 18640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18686,
											"end": 18695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18680,
											"end": 18684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18676,
											"end": 18696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18672,
											"end": 18673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18657,
											"end": 18674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18650,
											"end": 18697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18714,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 18840,
											"end": 18844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18714,
											"end": 18845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 18714,
											"end": 18845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18714,
											"end": 18845,
											"name": "tag",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 18714,
											"end": 18845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18706,
											"end": 18845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18706,
											"end": 18845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18433,
											"end": 18852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18433,
											"end": 18852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18433,
											"end": 18852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18433,
											"end": 18852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18898,
											"end": 18901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 18935,
											"end": 18936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 18917,
											"end": 18937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18912,
											"end": 18937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18912,
											"end": 18937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18951,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 18969,
											"end": 18970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18951,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 18951,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18951,
											"end": 18971,
											"name": "tag",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 18951,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18946,
											"end": 18971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18994,
											"end": 18995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18991,
											"end": 18992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18987,
											"end": 18996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18980,
											"end": 18996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18980,
											"end": 18996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19015,
											"end": 19018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19012,
											"end": 19013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19009,
											"end": 19019,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19022,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 19022,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 19022,
											"end": 19040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19022,
											"end": 19040,
											"name": "tag",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 19022,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18858,
											"end": 19049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19095,
											"end": 19102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 19136,
											"end": 19137,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19118,
											"end": 19138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 19118,
											"end": 19138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19118,
											"end": 19138,
											"name": "tag",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 19118,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19113,
											"end": 19138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19113,
											"end": 19138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19152,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 19170,
											"end": 19171,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19152,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 19152,
											"end": 19172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19152,
											"end": 19172,
											"name": "tag",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 19152,
											"end": 19172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19147,
											"end": 19172,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19147,
											"end": 19172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19207,
											"end": 19208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19200,
											"end": 19209,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 19229,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 19247,
											"end": 19258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19229,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 19229,
											"end": 19259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19229,
											"end": 19259,
											"name": "tag",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 19229,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19218,
											"end": 19259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19408,
											"end": 19409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19399,
											"end": 19406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19395,
											"end": 19410,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 19392,
											"end": 19393,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19389,
											"end": 19411,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19369,
											"end": 19370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19362,
											"end": 19371,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 19342,
											"end": 19425,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19319,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 19319,
											"end": 19458,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 19438,
											"end": 19456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "tag",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 19438,
											"end": 19456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19319,
											"end": 19458,
											"name": "tag",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 19319,
											"end": 19458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19103,
											"end": 19465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19055,
											"end": 19465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19634,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 19471,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19611,
											"end": 19626,
											"name": "PUSH",
											"source": 3,
											"value": "436F6F6C646F776E2054696D6500000000000000000000000000000000000000"
										},
										{
											"begin": 19607,
											"end": 19608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19599,
											"end": 19605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19595,
											"end": 19609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19588,
											"end": 19627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 20006,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 19640,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19782,
											"end": 19785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19803,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 19867,
											"end": 19869,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 19862,
											"end": 19865,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19803,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 19803,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19803,
											"end": 19870,
											"name": "tag",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 19803,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19796,
											"end": 19870,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19796,
											"end": 19870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19879,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 19968,
											"end": 19971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19879,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 19879,
											"end": 19972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19879,
											"end": 19972,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 19879,
											"end": 19972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19997,
											"end": 19999,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19992,
											"end": 19995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19988,
											"end": 20000,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19981,
											"end": 20000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19981,
											"end": 20000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 20006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 20006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 20006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 20006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20012,
											"end": 20431,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 20012,
											"end": 20431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20178,
											"end": 20182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20216,
											"end": 20218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20205,
											"end": 20214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20201,
											"end": 20219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20193,
											"end": 20219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20193,
											"end": 20219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20265,
											"end": 20274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20259,
											"end": 20263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20255,
											"end": 20275,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20251,
											"end": 20252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20240,
											"end": 20249,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20236,
											"end": 20253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20229,
											"end": 20276,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20293,
											"end": 20424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 20419,
											"end": 20423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20293,
											"end": 20424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 20293,
											"end": 20424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20293,
											"end": 20424,
											"name": "tag",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 20293,
											"end": 20424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20285,
											"end": 20424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20285,
											"end": 20424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20012,
											"end": 20431,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20012,
											"end": 20431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20012,
											"end": 20431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20012,
											"end": 20431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20437,
											"end": 20616,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 20437,
											"end": 20616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20608,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520686176656E2774207374616B656420616E7920616D6F756E74000000"
										},
										{
											"begin": 20573,
											"end": 20574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20565,
											"end": 20571,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20561,
											"end": 20575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20554,
											"end": 20609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20437,
											"end": 20616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20437,
											"end": 20616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20622,
											"end": 20988,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 20622,
											"end": 20988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20764,
											"end": 20767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 20849,
											"end": 20851,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 20844,
											"end": 20847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20785,
											"end": 20852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 20785,
											"end": 20852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20785,
											"end": 20852,
											"name": "tag",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 20785,
											"end": 20852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20778,
											"end": 20852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20778,
											"end": 20852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20861,
											"end": 20954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 20950,
											"end": 20953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20861,
											"end": 20954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 20861,
											"end": 20954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20861,
											"end": 20954,
											"name": "tag",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 20861,
											"end": 20954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20979,
											"end": 20981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20974,
											"end": 20977,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20970,
											"end": 20982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20963,
											"end": 20982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20963,
											"end": 20982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20622,
											"end": 20988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20622,
											"end": 20988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20622,
											"end": 20988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20622,
											"end": 20988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20994,
											"end": 21413,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 20994,
											"end": 21413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21160,
											"end": 21164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21198,
											"end": 21200,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21187,
											"end": 21196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21183,
											"end": 21201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21175,
											"end": 21201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21175,
											"end": 21201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21247,
											"end": 21256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21241,
											"end": 21245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21237,
											"end": 21257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21233,
											"end": 21234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21222,
											"end": 21231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 21218,
											"end": 21235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21211,
											"end": 21258,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21275,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 21401,
											"end": 21405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21275,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 21275,
											"end": 21406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21275,
											"end": 21406,
											"name": "tag",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 21275,
											"end": 21406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21267,
											"end": 21406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21267,
											"end": 21406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20994,
											"end": 21413,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20994,
											"end": 21413,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20994,
											"end": 21413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20994,
											"end": 21413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21419,
											"end": 21587,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 21419,
											"end": 21587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21559,
											"end": 21579,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F2072657761726420746F20636C61696D0000000000000000000000000000"
										},
										{
											"begin": 21555,
											"end": 21556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21547,
											"end": 21553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21543,
											"end": 21557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21536,
											"end": 21580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21419,
											"end": 21587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21419,
											"end": 21587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21593,
											"end": 21959,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 21593,
											"end": 21959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21735,
											"end": 21738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21756,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 21820,
											"end": 21822,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 21815,
											"end": 21818,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 21756,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 21756,
											"end": 21823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21756,
											"end": 21823,
											"name": "tag",
											"source": 3,
											"value": "508"
										},
										{
											"begin": 21756,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21749,
											"end": 21823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21749,
											"end": 21823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21832,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 21921,
											"end": 21924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21832,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 21832,
											"end": 21925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21832,
											"end": 21925,
											"name": "tag",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 21832,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21950,
											"end": 21952,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21945,
											"end": 21948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21941,
											"end": 21953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21934,
											"end": 21953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21934,
											"end": 21953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21593,
											"end": 21959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21593,
											"end": 21959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21593,
											"end": 21959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21593,
											"end": 21959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 21965,
											"end": 22384,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 21965,
											"end": 22384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22131,
											"end": 22135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22169,
											"end": 22171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22154,
											"end": 22172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22146,
											"end": 22172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22146,
											"end": 22172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22218,
											"end": 22227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22212,
											"end": 22216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22208,
											"end": 22228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22193,
											"end": 22202,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22189,
											"end": 22206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22182,
											"end": 22229,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22246,
											"end": 22377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 22372,
											"end": 22376,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22246,
											"end": 22377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 22246,
											"end": 22377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22246,
											"end": 22377,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 22246,
											"end": 22377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22238,
											"end": 22377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22238,
											"end": 22377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21965,
											"end": 22384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21965,
											"end": 22384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21965,
											"end": 22384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21965,
											"end": 22384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22390,
											"end": 22570,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 22390,
											"end": 22570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22438,
											"end": 22515,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22435,
											"end": 22436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22428,
											"end": 22516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22535,
											"end": 22539,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 22532,
											"end": 22533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22525,
											"end": 22540,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22559,
											"end": 22563,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 22556,
											"end": 22557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22549,
											"end": 22564,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22616,
											"end": 22617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22633,
											"end": 22653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 22651,
											"end": 22652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22633,
											"end": 22653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 22633,
											"end": 22653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22633,
											"end": 22653,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 22633,
											"end": 22653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22628,
											"end": 22653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22628,
											"end": 22653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22667,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 22685,
											"end": 22686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22667,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 22667,
											"end": 22687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22667,
											"end": 22687,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 22667,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22662,
											"end": 22687,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22662,
											"end": 22687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22706,
											"end": 22707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22696,
											"end": 22731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 22696,
											"end": 22731,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22711,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 22711,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 22711,
											"end": 22729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22711,
											"end": 22729,
											"name": "tag",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 22711,
											"end": 22729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22696,
											"end": 22731,
											"name": "tag",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 22696,
											"end": 22731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22753,
											"end": 22754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22750,
											"end": 22751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22746,
											"end": 22755,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 22741,
											"end": 22755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22741,
											"end": 22755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22576,
											"end": 22761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"Staking/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CurrentTime()": "d80e8700",
							"IdsAndDetails(address)": "c9352971",
							"Stake(uint256,uint256)": "c9ec05ea",
							"claimAmount(address)": "78317be7",
							"claimReward(address)": "d279c191",
							"contractBalance()": "8b7afe2e",
							"genrateReward(uint256)": "f3a93e80",
							"getIds(address)": "2671b0d8",
							"interest()": "c392f766",
							"isRewardAvailable(address)": "0064f50c",
							"owner()": "8da5cb5b",
							"rewards(address)": "0700037d",
							"stakeTime(uint256)": "0a42f049",
							"stakes(uint256)": "d5a44f86",
							"stakingOwner(uint256)": "90eb2981",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"IdsAndDetails\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"StakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"expired\",\"type\":\"bool\"}],\"internalType\":\"struct staking.StakingInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tarrif\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"genrateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"getIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isRewardAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"StakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"expired\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking/staking.sol\":\"staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"Staking/staking.sol\":{\"keccak256\":\"0xafed629bc86c16b0d94b32aa33967745abb4bc1278954013f41d1f5ad4dc2738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cfe62918ae25be82a3d3f617cf329aa278e7b77ca4dc06932d37df88f7d1b45\",\"dweb:/ipfs/QmTSQ8a3ru7TdKTptgM6evTb7Dg9jZRkuw5RkZkFrJzXRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 162,
								"contract": "Staking/staking.sol:staking",
								"label": "StakeIdCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Counter)83_storage"
							},
							{
								"astId": 165,
								"contract": "Staking/staking.sol:staking",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 167,
								"contract": "Staking/staking.sol:staking",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 170,
								"contract": "Staking/staking.sol:staking",
								"label": "interest",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Staking/staking.sol:staking",
								"label": "lastRewardClaimTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 185,
								"contract": "Staking/staking.sol:staking",
								"label": "stakingOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 190,
								"contract": "Staking/staking.sol:staking",
								"label": "stakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(StakingInfo)179_storage)"
							},
							{
								"astId": 194,
								"contract": "Staking/staking.sol:staking",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(StakingInfo)179_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct staking.StakingInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingInfo)179_storage"
							},
							"t_struct(Counter)83_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 82,
										"contract": "Staking/staking.sol:staking",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(StakingInfo)179_storage": {
								"encoding": "inplace",
								"label": "struct staking.StakingInfo",
								"members": [
									{
										"astId": 172,
										"contract": "Staking/staking.sol:staking",
										"label": "StakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 174,
										"contract": "Staking/staking.sol:staking",
										"label": "StakedTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 176,
										"contract": "Staking/staking.sol:staking",
										"label": "duration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 178,
										"contract": "Staking/staking.sol:staking",
										"label": "expired",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							151
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:1",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "Counters",
							"nameLocation": "432:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 83,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 83,
											"src": "786:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 81,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:1",
									"nodeType": "StructDefinition",
									"scope": 151,
									"src": "447:374:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "901:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 91,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "918:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:1",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 82,
													"src": "918:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 93,
												"nodeType": "Return",
												"src": "911:21:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "844:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "Counter",
														"nameLocations": [
															"844:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "844:7:1"
													},
													"referencedDeclaration": 83,
													"src": "844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 151,
									"src": "827:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "998:70:1",
										"statements": [
											{
												"id": 107,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:1",
												"statements": [
													{
														"expression": {
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 101,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1032:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:1",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 82,
																"src": "1032:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 106,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:1"
													}
												]
											}
										]
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "964:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 97,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 96,
														"name": "Counter",
														"nameLocations": [
															"964:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "964:7:1"
													},
													"referencedDeclaration": 83,
													"src": "964:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:1"
									},
									"scope": 151,
									"src": "945:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1127:176:1",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "1137:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"expression": {
														"id": 117,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:1",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 82,
													"src": "1153:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1185:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:1"
											},
											{
												"id": 135,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:1",
												"statements": [
													{
														"expression": {
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 127,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "1260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:1",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 82,
																"src": "1260:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 130,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1277:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 134,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:1"
													}
												]
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1093:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 110,
														"name": "Counter",
														"nameLocations": [
															"1093:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "1093:7:1"
													},
													"referencedDeclaration": 83,
													"src": "1093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:1"
									},
									"scope": 151,
									"src": "1074:229:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1358:35:1",
										"statements": [
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:1",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "1368:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:1"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1324:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Counter",
														"nameLocations": [
															"1324:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 83,
														"src": "1324:7:1"
													},
													"referencedDeclaration": 83,
													"src": "1324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:1"
									},
									"scope": 151,
									"src": "1309:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 152,
							"src": "424:971:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:1"
				},
				"id": 1
			},
			"Staking/staking.sol": {
				"ast": {
					"absolutePath": "Staking/staking.sol",
					"exportedSymbols": {
						"Counters": [
							151
						],
						"IERC20": [
							77
						],
						"staking": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 857,
							"sourceUnit": 78,
							"src": "620:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 857,
							"sourceUnit": 152,
							"src": "705:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "staking",
							"nameLocation": "768:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 159,
									"libraryName": {
										"id": 156,
										"name": "Counters",
										"nameLocations": [
											"788:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 151,
										"src": "788:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "782:36:2",
									"typeName": {
										"id": 158,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 157,
											"name": "Counters.Counter",
											"nameLocations": [
												"801:8:2",
												"810:7:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 83,
											"src": "801:16:2"
										},
										"referencedDeclaration": 83,
										"src": "801:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 162,
									"mutability": "mutable",
									"name": "StakeIdCounter",
									"nameLocation": "848:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "823:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$83_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 161,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 160,
											"name": "Counters.Counter",
											"nameLocations": [
												"823:8:2",
												"832:7:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 83,
											"src": "823:16:2"
										},
										"referencedDeclaration": 83,
										"src": "823:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$83_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 165,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "883:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "869:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "IERC20",
											"nameLocations": [
												"869:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "869:6:2"
										},
										"referencedDeclaration": 77,
										"src": "869:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 167,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "909:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "894:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "894:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c392f766",
									"id": 170,
									"mutability": "mutable",
									"name": "interest",
									"nameLocation": "936:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "921:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 168,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "921:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "947:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "staking.StakingInfo",
									"id": 179,
									"members": [
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "StakedAmount",
											"nameLocation": "1007:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "999:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "999:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "StakedTime",
											"nameLocation": "1037:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "1029:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1029:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1065:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "1057:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1057:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "expired",
											"nameLocation": "1100:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "1095:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 177,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1095:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingInfo",
									"nameLocation": "977:11:2",
									"nodeType": "StructDefinition",
									"scope": 856,
									"src": "970:144:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "lastRewardClaimTime",
									"nameLocation": "1127:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "1119:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1119:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "90eb2981",
									"id": 185,
									"mutability": "mutable",
									"name": "stakingOwner",
									"nameLocation": "1187:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "1152:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 184,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1160:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1152:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1171:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5a44f86",
									"id": 190,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1267:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "1228:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
										"typeString": "mapping(uint256 => struct staking.StakingInfo)"
									},
									"typeName": {
										"id": 189,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1236:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1228:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
											"typeString": "mapping(uint256 => struct staking.StakingInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 187,
												"name": "StakingInfo",
												"nameLocations": [
													"1247:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 179,
												"src": "1247:11:2"
											},
											"referencedDeclaration": 179,
											"src": "1247:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingInfo_$179_storage_ptr",
												"typeString": "struct staking.StakingInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 194,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "1472:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "1437:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 193,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 191,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1445:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1437:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1514:141:2",
										"statements": [
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1598:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 201,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1613:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 200,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1606:14:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1598:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1598:22:2"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1630:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 206,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1638:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1642:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1638:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1630:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1630:18:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1506:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1498:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:16:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:0:2"
									},
									"scope": 856,
									"src": "1486:169:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2185:1482:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 220,
															"name": "StakeIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2375:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$83_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2390:9:2",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "2375:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$83_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2375:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 226,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2484:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2497:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2484:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374207374616b65206d6f7265207468616e207a65726f20746f6b656e73",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2500:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6",
																"typeString": "literal_string \"Must stake more than zero tokens\""
															},
															"value": "Must stake more than zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6790bcbe71dfaa2cfcb26fbe9801ccdc66b9d379cab9ded341aaab32886433c6",
																"typeString": "literal_string \"Must stake more than zero tokens\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2476:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2476:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 235,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2569:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2573:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2569:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 233,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "2553:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2559:9:2",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "2553:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2553:27:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 238,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2584:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2553:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f7567682042616c616e636520546f6b656e7320546f205374616b65",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2596:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224",
																"typeString": "literal_string \"Not Enough Balance Tokens To Stake\""
															},
															"value": "Not Enough Balance Tokens To Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce7c2065af19f03c021aa43e9e22a22e2be25d8ffaf2285fd879d0f64de27224",
																"typeString": "literal_string \"Not Enough Balance Tokens To Stake\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2545:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2545:88:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2545:88:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 244,
																				"name": "tarrif",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "2651:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2661:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "2651:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 247,
																				"name": "tarrif",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "2682:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2692:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "2682:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2651:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 251,
																			"name": "tarrif",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "2714:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2724:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "2714:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2651:74:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 255,
																		"name": "tarrif",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2746:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2756:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "2746:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2651:106:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 259,
																	"name": "tarrif",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2778:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2788:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2778:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2651:139:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461727269662063616e204f6e6c79206265206f6620322c342c362c382c3130204d696e75746573",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f",
																"typeString": "literal_string \"Tarrif can Only be of 2,4,6,8,10 Minutes\""
															},
															"value": "Tarrif can Only be of 2,4,6,8,10 Minutes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80c7d66479a086aebf1fe9453565af42c27db0acf6559cb2669434b77731d91f",
																"typeString": "literal_string \"Tarrif can Only be of 2,4,6,8,10 Minutes\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:204:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2643:204:2"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "current_tarrif",
														"nameLocation": "2918:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "2910:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2910:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"expression": {
														"id": 268,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2935:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2941:9:2",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2935:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2910:40:2"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 271,
															"name": "stakingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2960:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 275,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 272,
																	"name": "StakeIdCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "2973:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$83_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2988:7:2",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 95,
																"src": "2973:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2973:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2960:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 276,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3001:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3005:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3001:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2960:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2960:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 283,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3048:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3052:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3048:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3068:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_staking_$856",
																				"typeString": "contract staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_staking_$856",
																				"typeString": "contract staking"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3060:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3060:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3060:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 289,
																	"name": "_numTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "3075:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 281,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "3029:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3035:12:2",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "3029:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3029:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4769766520617070726f76616c2066726f6d20696e697469616c20746f207374616b65",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3088:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc",
																"typeString": "literal_string \"Give approval from initial to stake\""
															},
															"value": "Give approval from initial to stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32c6dbeaadb0e6efcf09a35acd8e831a1b61c920574045bb7a5cf99e8787d6bc",
																"typeString": "literal_string \"Give approval from initial to stake\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3021:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "3021:105:2"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 294,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 298,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 295,
																		"name": "StakeIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3143:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$83_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3158:7:2",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "3143:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3143:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3136:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3169:12:2",
														"memberName": "StakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 172,
														"src": "3136:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 300,
														"name": "_numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3185:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3136:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3136:59:2"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 303,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3205:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 307,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 304,
																		"name": "StakeIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3212:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$83_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3227:7:2",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "3212:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3212:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3205:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3238:10:2",
														"memberName": "StakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "3205:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "current_tarrif",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "3251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3205:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3205:60:2"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 312,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3396:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 316,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 313,
																		"name": "StakeIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3403:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$83_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3418:7:2",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "3403:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3403:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3396:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3429:8:2",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "3396:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 318,
															"name": "tarrif",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3630",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "3440:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3396:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "3396:55:2"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 323,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3570:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 327,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "StakeIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3577:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$83_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3592:7:2",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "3577:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3570:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3603:7:2",
														"memberName": "expired",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "3570:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3613:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3570:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "3570:48:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 332,
															"name": "StakeIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "3636:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$83_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3651:7:2",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "3636:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 335,
												"nodeType": "Return",
												"src": "3629:31:2"
											}
										]
									},
									"functionSelector": "c9ec05ea",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "2116:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "2130:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2122:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "tarrif",
												"nameLocation": "2150:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2142:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:36:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:9:2"
									},
									"scope": 856,
									"src": "2107:1560:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "3856:829:2",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "3938:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "3930:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 352,
												"initialValue": {
													"hexValue": "30",
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3946:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3930:17:2"
											},
											{
												"body": {
													"id": 375,
													"nodeType": "Block",
													"src": "4013:91:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 365,
																		"name": "stakingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "4031:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 367,
																	"indexExpression": {
																		"id": 366,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "4044:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4031:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 368,
																	"name": "ad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "4050:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4031:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 374,
															"nodeType": "IfStatement",
															"src": "4027:67:2",
															"trueBody": {
																"id": 373,
																"nodeType": "Block",
																"src": "4054:40:2",
																"statements": [
																	{
																		"expression": {
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4072:7:2",
																			"subExpression": {
																				"id": 370,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 350,
																				"src": "4072:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 372,
																		"nodeType": "ExpressionStatement",
																		"src": "4072:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "3977:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 358,
																"name": "StakeIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "3982:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$83_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3997:7:2",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3982:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3982:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3977:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"initializationExpression": {
													"assignments": [
														354
													],
													"declarations": [
														{
															"constant": false,
															"id": 354,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3970:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 376,
															"src": "3962:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 353,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3962:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 356,
													"initialValue": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3974:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3962:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4008:3:2",
														"subExpression": {
															"id": 362,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4008:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"nodeType": "ExpressionStatement",
													"src": "4008:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3957:147:2"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "stakingInfos",
														"nameLocation": "4204:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4183:33:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct staking.StakingInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 379,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 378,
																	"name": "StakingInfo",
																	"nameLocations": [
																		"4183:11:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 179,
																	"src": "4183:11:2"
																},
																"referencedDeclaration": 179,
																"src": "4183:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingInfo_$179_storage_ptr",
																	"typeString": "struct staking.StakingInfo"
																}
															},
															"id": 380,
															"nodeType": "ArrayTypeName",
															"src": "4183:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_storage_$dyn_storage_ptr",
																"typeString": "struct staking.StakingInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"id": 386,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4237:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4219:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct staking.StakingInfo memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 383,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 382,
																	"name": "StakingInfo",
																	"nameLocations": [
																		"4223:11:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 179,
																	"src": "4223:11:2"
																},
																"referencedDeclaration": 179,
																"src": "4223:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingInfo_$179_storage_ptr",
																	"typeString": "struct staking.StakingInfo"
																}
															},
															"id": 384,
															"nodeType": "ArrayTypeName",
															"src": "4223:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_storage_$dyn_storage_ptr",
																"typeString": "struct staking.StakingInfo[]"
															}
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4219:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct staking.StakingInfo memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4183:60:2"
											},
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "userids",
														"nameLocation": "4270:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4253:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 391,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4253:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 392,
															"nodeType": "ArrayTypeName",
															"src": "4253:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [
														{
															"id": 397,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4294:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4280:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 394,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4284:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"nodeType": "ArrayTypeName",
															"src": "4284:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4280:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4253:47:2"
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4318:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4310:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4310:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"hexValue": "30",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4310:17:2"
											},
											{
												"body": {
													"id": 446,
													"nodeType": "Block",
													"src": "4393:246:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 416,
																		"name": "stakingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "4411:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 418,
																	"indexExpression": {
																		"id": 417,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4424:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4411:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 419,
																	"name": "ad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "4430:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4411:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 439,
															"nodeType": "IfStatement",
															"src": "4407:152:2",
															"trueBody": {
																"id": 438,
																"nodeType": "Block",
																"src": "4434:125:2",
																"statements": [
																	{
																		"expression": {
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 421,
																					"name": "stakingInfos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 381,
																					"src": "4452:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct staking.StakingInfo memory[] memory"
																					}
																				},
																				"id": 423,
																				"indexExpression": {
																					"id": 422,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "4465:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4452:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingInfo_$179_memory_ptr",
																					"typeString": "struct staking.StakingInfo memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 424,
																					"name": "stakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 190,
																					"src": "4474:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																						"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																					}
																				},
																				"id": 426,
																				"indexExpression": {
																					"id": 425,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 405,
																					"src": "4481:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4474:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																					"typeString": "struct staking.StakingInfo storage ref"
																				}
																			},
																			"src": "4452:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingInfo_$179_memory_ptr",
																				"typeString": "struct staking.StakingInfo memory"
																			}
																		},
																		"id": 428,
																		"nodeType": "ExpressionStatement",
																		"src": "4452:31:2"
																	},
																	{
																		"expression": {
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 429,
																					"name": "userids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "4501:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 431,
																				"indexExpression": {
																					"id": 430,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "4509:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4501:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 432,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "4518:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4501:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 434,
																		"nodeType": "ExpressionStatement",
																		"src": "4501:18:2"
																	},
																	{
																		"expression": {
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4537:7:2",
																			"subExpression": {
																				"id": 435,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "4537:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 437,
																		"nodeType": "ExpressionStatement",
																		"src": "4537:7:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 440,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4576:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 441,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "4584:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4576:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 445,
															"nodeType": "IfStatement",
															"src": "4572:57:2",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "4591:38:2",
																"statements": [
																	{
																		"id": 443,
																		"nodeType": "Break",
																		"src": "4609:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 408,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4357:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 409,
																"name": "StakeIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4362:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$83_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4377:7:2",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "4362:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4362:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4357:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 447,
												"initializationExpression": {
													"assignments": [
														405
													],
													"declarations": [
														{
															"constant": false,
															"id": 405,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4350:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 447,
															"src": "4342:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 404,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4342:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 407,
													"initialValue": {
														"hexValue": "30",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4354:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4342:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4388:3:2",
														"subExpression": {
															"id": 413,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4388:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 415,
													"nodeType": "ExpressionStatement",
													"src": "4388:3:2"
												},
												"nodeType": "ForStatement",
												"src": "4337:302:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 448,
															"name": "userids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4656:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 449,
															"name": "stakingInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4665:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct staking.StakingInfo memory[] memory"
															}
														}
													],
													"id": 450,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4655:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,struct staking.StakingInfo memory[] memory)"
													}
												},
												"functionReturnParameters": 348,
												"id": 451,
												"nodeType": "Return",
												"src": "4648:30:2"
											}
										]
									},
									"functionSelector": "c9352971",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "IdsAndDetails",
									"nameLocation": "3769:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "ad",
												"nameLocation": "3791:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "3783:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3783:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3782:12:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "3816:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 341,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3816:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 342,
													"nodeType": "ArrayTypeName",
													"src": "3816:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "3834:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct staking.StakingInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 345,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 344,
															"name": "StakingInfo",
															"nameLocations": [
																"3834:11:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 179,
															"src": "3834:11:2"
														},
														"referencedDeclaration": 179,
														"src": "3834:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingInfo_$179_storage_ptr",
															"typeString": "struct staking.StakingInfo"
														}
													},
													"id": 346,
													"nodeType": "ArrayTypeName",
													"src": "3834:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakingInfo_$179_storage_$dyn_storage_ptr",
														"typeString": "struct staking.StakingInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3815:40:2"
									},
									"scope": 856,
									"src": "3760:925:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "4825:586:2",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "4907:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "4899:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4899:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"hexValue": "30",
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4915:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:17:2"
											},
											{
												"body": {
													"id": 487,
													"nodeType": "Block",
													"src": "4982:91:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 477,
																		"name": "stakingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "5000:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 479,
																	"indexExpression": {
																		"id": 478,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5000:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 480,
																	"name": "ad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "5019:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5000:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 486,
															"nodeType": "IfStatement",
															"src": "4996:67:2",
															"trueBody": {
																"id": 485,
																"nodeType": "Block",
																"src": "5023:40:2",
																"statements": [
																	{
																		"expression": {
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5041:7:2",
																			"subExpression": {
																				"id": 482,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "5041:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 484,
																		"nodeType": "ExpressionStatement",
																		"src": "5041:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 469,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "4946:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 470,
																"name": "StakeIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4951:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$83_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4966:7:2",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "4951:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4951:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4946:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"initializationExpression": {
													"assignments": [
														466
													],
													"declarations": [
														{
															"constant": false,
															"id": 466,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4939:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 488,
															"src": "4931:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 465,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4931:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 468,
													"initialValue": {
														"hexValue": "30",
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4943:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4931:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4977:3:2",
														"subExpression": {
															"id": 474,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4977:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 476,
													"nodeType": "ExpressionStatement",
													"src": "4977:3:2"
												},
												"nodeType": "ForStatement",
												"src": "4926:147:2"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "userids",
														"nameLocation": "5131:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "5114:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 491,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5114:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 492,
															"nodeType": "ArrayTypeName",
															"src": "5114:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [
														{
															"id": 497,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "5155:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5141:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 494,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5145:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 495,
															"nodeType": "ArrayTypeName",
															"src": "5145:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5141:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5114:47:2"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5179:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 536,
														"src": "5171:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"hexValue": "30",
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5187:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:17:2"
											},
											{
												"body": {
													"id": 532,
													"nodeType": "Block",
													"src": "5254:127:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 516,
																		"name": "stakingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "5272:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"id": 517,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5285:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5272:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 519,
																	"name": "ad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "5291:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5272:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 531,
															"nodeType": "IfStatement",
															"src": "5268:103:2",
															"trueBody": {
																"id": 530,
																"nodeType": "Block",
																"src": "5295:76:2",
																"statements": [
																	{
																		"expression": {
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 521,
																					"name": "userids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 493,
																					"src": "5313:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 523,
																				"indexExpression": {
																					"id": 522,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "5321:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5313:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 524,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "5330:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5313:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 526,
																		"nodeType": "ExpressionStatement",
																		"src": "5313:18:2"
																	},
																	{
																		"expression": {
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5349:7:2",
																			"subExpression": {
																				"id": 527,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5349:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 529,
																		"nodeType": "ExpressionStatement",
																		"src": "5349:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "5218:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 509,
																"name": "StakeIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "5223:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$83_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5238:7:2",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "5223:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$83_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$83_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5223:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5218:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"initializationExpression": {
													"assignments": [
														505
													],
													"declarations": [
														{
															"constant": false,
															"id": 505,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5211:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 533,
															"src": "5203:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 504,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5203:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 507,
													"initialValue": {
														"hexValue": "30",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5215:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5203:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5249:3:2",
														"subExpression": {
															"id": 513,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "5249:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 515,
													"nodeType": "ExpressionStatement",
													"src": "5249:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5198:183:2"
											},
											{
												"expression": {
													"id": 534,
													"name": "userids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "5397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 460,
												"id": 535,
												"nodeType": "Return",
												"src": "5390:14:2"
											}
										]
									},
									"functionSelector": "2671b0d8",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIds",
									"nameLocation": "4767:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "ad",
												"nameLocation": "4782:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4774:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:12:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4807:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 457,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ArrayTypeName",
													"src": "4807:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4806:18:2"
									},
									"scope": 856,
									"src": "4758:653:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5543:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 544,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "5560:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
															}
														},
														"id": 546,
														"indexExpression": {
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5567:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5560:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
															"typeString": "struct staking.StakingInfo storage ref"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5571:10:2",
													"memberName": "StakedTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 174,
													"src": "5560:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 543,
												"id": 548,
												"nodeType": "Return",
												"src": "5553:28:2"
											}
										]
									},
									"functionSelector": "0a42f049",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTime",
									"nameLocation": "5491:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5509:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5501:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5500:12:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5534:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5534:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5533:9:2"
									},
									"scope": 856,
									"src": "5482:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "5704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 559,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5745:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_staking_$856",
																		"typeString": "contract staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_staking_$856",
																		"typeString": "contract staking"
																	}
																],
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5737:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 557,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5737:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5737:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 555,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5721:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5727:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "5721:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5721:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 562,
												"nodeType": "Return",
												"src": "5714:37:2"
											}
										]
									},
									"functionSelector": "8b7afe2e",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractBalance",
									"nameLocation": "5656:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5671:2:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "5695:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:9:2"
									},
									"scope": 856,
									"src": "5647:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "5895:39:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 569,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5912:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5918:9:2",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5912:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 568,
												"id": 571,
												"nodeType": "Return",
												"src": "5905:22:2"
											}
										]
									},
									"functionSelector": "d80e8700",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CurrentTime",
									"nameLocation": "5851:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5862:2:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "5886:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:9:2"
									},
									"scope": 856,
									"src": "5842:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "6097:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 582,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "6114:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 583,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6118:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6114:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 586,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "6126:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6114:13:2",
													"trueExpression": {
														"id": 585,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "6122:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 581,
												"id": 588,
												"nodeType": "Return",
												"src": "6107:20:2"
											}
										]
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6039:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6051:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "6043:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6062:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "6054:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:22:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "6088:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:9:2"
									},
									"scope": 856,
									"src": "6030:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "6408:501:2",
										"statements": [
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "current_time",
														"nameLocation": "6426:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "6418:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"expression": {
														"id": 597,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "6441:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6447:9:2",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "6441:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6418:38:2"
											},
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "6474:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "6466:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 600,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6466:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 602,
														"name": "current_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "6492:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 603,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6507:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 605,
															"indexExpression": {
																"id": 604,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "6514:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6507:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6518:10:2",
														"memberName": "StakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "6507:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6492:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6466:62:2"
											},
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "6546:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "6538:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 612,
															"name": "stakingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "6557:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 613,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "6574:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																		"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																	}
																},
																"id": 615,
																"indexExpression": {
																	"id": 614,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "6581:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6574:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																	"typeString": "struct staking.StakingInfo storage ref"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6585:8:2",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 176,
															"src": "6574:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "6553:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6553:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6538:56:2"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 619,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6693:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 623,
														"indexExpression": {
															"baseExpression": {
																"id": 620,
																"name": "stakingOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6701:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 622,
															"indexExpression": {
																"id": 621,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "6714:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6701:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6693:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 624,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "6721:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 628,
															"indexExpression": {
																"baseExpression": {
																	"id": 625,
																	"name": "stakingOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "6729:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 627,
																"indexExpression": {
																	"id": 626,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "6742:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6729:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6721:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 629,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 190,
																						"src": "6750:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																							"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																						}
																					},
																					"id": 631,
																					"indexExpression": {
																						"id": 630,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 592,
																						"src": "6757:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6750:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																						"typeString": "struct staking.StakingInfo storage ref"
																					}
																				},
																				"id": 632,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6761:12:2",
																				"memberName": "StakedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 172,
																				"src": "6750:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 633,
																				"name": "interest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "6776:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6750:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 635,
																			"name": "time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "6787:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6750:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6749:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6795:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "6749:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6721:77:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6693:105:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "6693:105:2"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 643,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6808:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 645,
															"indexExpression": {
																"id": 644,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "6815:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6808:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6819:10:2",
														"memberName": "StakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "6808:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "current_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "6832:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6808:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "6808:36:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 650,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6854:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																	"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																}
															},
															"id": 652,
															"indexExpression": {
																"id": 651,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "6861:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6854:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																"typeString": "struct staking.StakingInfo storage ref"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6865:8:2",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "6854:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 654,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "6876:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																		"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																	}
																},
																"id": 656,
																"indexExpression": {
																	"id": 655,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "6883:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6876:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																	"typeString": "struct staking.StakingInfo storage ref"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6887:8:2",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 176,
															"src": "6876:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 658,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6898:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6876:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6854:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "6854:48:2"
											}
										]
									},
									"functionSelector": "f3a93e80",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "genrateReward",
									"nameLocation": "6375:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6397:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6389:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6388:12:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:0:2"
									},
									"scope": 856,
									"src": "6366:543:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "7020:90:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 670,
																				"name": "rewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 194,
																				"src": "7039:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 672,
																			"indexExpression": {
																				"id": 671,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7047:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7039:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7055:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7039:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7038:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 676,
																				"name": "lastRewardClaimTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "7062:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 677,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "7082:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7088:9:2",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "7082:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7062:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7061:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "313230",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7099:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_120_by_1",
																		"typeString": "int_const 120"
																	},
																	"value": "120"
																},
																"src": "7061:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7038:64:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 684,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7037:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 669,
												"id": 685,
												"nodeType": "Return",
												"src": "7030:73:2"
											}
										]
									},
									"functionSelector": "0064f50c",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRewardAvailable",
									"nameLocation": "6963:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6989:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "6981:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6981:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:14:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "7015:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7015:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7014:6:2"
									},
									"scope": 856,
									"src": "6954:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "7299:766:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 693,
																			"name": "lastRewardClaimTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "7374:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 694,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "7394:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7400:9:2",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "7394:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7374:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7373:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "313230",
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7411:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_120_by_1",
																	"typeString": "int_const 120"
																},
																"value": "120"
															},
															"src": "7373:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e2054696d65",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7415:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f",
																"typeString": "literal_string \"Cooldown Time\""
															},
															"value": "Cooldown Time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_287f8b4a31a2613e95fb069a0ed384028b20a104eabb5b496822df50297b9b6f",
																"typeString": "literal_string \"Cooldown Time\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7365:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7365:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7365:66:2"
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 703,
														"name": "lastRewardClaimTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7441:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 704,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7461:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7467:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7461:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7441:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "7441:35:2"
											},
											{
												"assignments": [
													712
												],
												"declarations": [
													{
														"constant": false,
														"id": 712,
														"mutability": "mutable",
														"name": "userids",
														"nameLocation": "7503:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "7486:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 710,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 711,
															"nodeType": "ArrayTypeName",
															"src": "7486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"id": 714,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "7520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 713,
														"name": "getIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "7513:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (uint256[] memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7513:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7486:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 718,
																	"name": "userids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "7543:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7551:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7543:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7560:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7543:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520686176656e2774207374616b656420616e7920616d6f756e74",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7563:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2",
																"typeString": "literal_string \"You haven't staked any amount\""
															},
															"value": "You haven't staked any amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d3a35aa78cb74bffc9d98f1dde03d3870690386e1f9bfcab4eecbbdbfb1bdd2",
																"typeString": "literal_string \"You haven't staked any amount\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7535:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7535:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "7535:60:2"
											},
											{
												"body": {
													"id": 751,
													"nodeType": "Block",
													"src": "7727:115:2",
													"statements": [
														{
															"condition": {
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7745:27:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 736,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "7746:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																				"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																			}
																		},
																		"id": 740,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 737,
																				"name": "userids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "7753:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 739,
																			"indexExpression": {
																				"id": 738,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "7761:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7753:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7746:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																			"typeString": "struct staking.StakingInfo storage ref"
																		}
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7765:7:2",
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "7746:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 750,
															"nodeType": "IfStatement",
															"src": "7741:91:2",
															"trueBody": {
																"id": 749,
																"nodeType": "Block",
																"src": "7774:58:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 744,
																						"name": "userids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 712,
																						"src": "7806:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 746,
																					"indexExpression": {
																						"id": 745,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 726,
																						"src": "7814:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7806:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 743,
																				"name": "genrateReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 663,
																				"src": "7792:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7792:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 748,
																		"nodeType": "ExpressionStatement",
																		"src": "7792:25:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "7702:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 730,
															"name": "userids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "7706:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7714:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7706:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7702:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"initializationExpression": {
													"assignments": [
														726
													],
													"declarations": [
														{
															"constant": false,
															"id": 726,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7695:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 752,
															"src": "7687:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 725,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7687:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 728,
													"initialValue": {
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7699:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7687:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7722:3:2",
														"subExpression": {
															"id": 733,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "7722:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 735,
													"nodeType": "ExpressionStatement",
													"src": "7722:3:2"
												},
												"nodeType": "ForStatement",
												"src": "7682:160:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 754,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "7940:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 756,
																"indexExpression": {
																	"id": 755,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "7948:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7940:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7956:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7940:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7959:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7932:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7932:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "7932:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 765,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8005:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8009:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8005:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 767,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "8017:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 769,
															"indexExpression": {
																"id": 768,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "8025:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8017:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 762,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "7990:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7996:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "7990:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7990:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "7990:41:2"
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 772,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "8041:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 774,
														"indexExpression": {
															"id": 773,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8049:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8041:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8057:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8041:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "8041:17:2"
											}
										]
									},
									"functionSelector": "d279c191",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "7266:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7286:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "7278:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7277:14:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7299:0:2"
									},
									"scope": 856,
									"src": "7257:808:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "8165:629:2",
										"statements": [
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "userids",
														"nameLocation": "8249:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "8232:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 786,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8232:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ArrayTypeName",
															"src": "8232:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8266:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 789,
														"name": "getIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "8259:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (uint256[] memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8259:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8232:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 794,
																	"name": "userids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "8289:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8297:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8289:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8306:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8289:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616d6f756e74207374616b6564",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8309:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49",
																"typeString": "literal_string \"No amount staked\""
															},
															"value": "No amount staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9ae1ccf93589d406ba897ee3369d4524385fc4e3afed55826b3cc4b0448fa49",
																"typeString": "literal_string \"No amount staked\""
															}
														],
														"id": 793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8281:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8281:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "8281:47:2"
											},
											{
												"body": {
													"id": 852,
													"nodeType": "Block",
													"src": "8469:319:2",
													"statements": [
														{
															"condition": {
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8487:27:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 812,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "8488:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																				"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																			}
																		},
																		"id": 816,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 813,
																				"name": "userids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "8495:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 815,
																			"indexExpression": {
																				"id": 814,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "8503:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8495:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8488:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																			"typeString": "struct staking.StakingInfo storage ref"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8507:7:2",
																	"memberName": "expired",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "8488:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 851,
															"nodeType": "IfStatement",
															"src": "8483:295:2",
															"trueBody": {
																"id": 850,
																"nodeType": "Block",
																"src": "8516:262:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 822,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8549:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8553:6:2",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8549:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 824,
																							"name": "stakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 190,
																							"src": "8561:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																								"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																							}
																						},
																						"id": 828,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 825,
																								"name": "userids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 788,
																								"src": "8568:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 827,
																							"indexExpression": {
																								"id": 826,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "8576:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8568:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8561:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																							"typeString": "struct staking.StakingInfo storage ref"
																						}
																					},
																					"id": 829,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8580:12:2",
																					"memberName": "StakedAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 172,
																					"src": "8561:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 819,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 165,
																					"src": "8534:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8540:8:2",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "8534:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8534:59:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 831,
																		"nodeType": "ExpressionStatement",
																		"src": "8534:59:2"
																	},
																	{
																		"expression": {
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 832,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 190,
																						"src": "8611:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																							"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																						}
																					},
																					"id": 836,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 833,
																							"name": "userids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 788,
																							"src": "8618:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 835,
																						"indexExpression": {
																							"id": 834,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 802,
																							"src": "8626:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8618:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8611:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																						"typeString": "struct staking.StakingInfo storage ref"
																					}
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "8630:12:2",
																				"memberName": "StakedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 172,
																				"src": "8611:31:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8645:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8611:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 840,
																		"nodeType": "ExpressionStatement",
																		"src": "8611:35:2"
																	},
																	{
																		"expression": {
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 841,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 190,
																						"src": "8664:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$179_storage_$",
																							"typeString": "mapping(uint256 => struct staking.StakingInfo storage ref)"
																						}
																					},
																					"id": 845,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 842,
																							"name": "userids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 788,
																							"src": "8671:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 844,
																						"indexExpression": {
																							"id": 843,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 802,
																							"src": "8679:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8671:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8664:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingInfo_$179_storage",
																						"typeString": "struct staking.StakingInfo storage ref"
																					}
																				},
																				"id": 846,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "8683:7:2",
																				"memberName": "expired",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 178,
																				"src": "8664:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8693:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "8664:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 849,
																		"nodeType": "ExpressionStatement",
																		"src": "8664:33:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 805,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "8444:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 806,
															"name": "userids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "8448:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8456:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8448:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8444:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 853,
												"initializationExpression": {
													"assignments": [
														802
													],
													"declarations": [
														{
															"constant": false,
															"id": 802,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8437:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 853,
															"src": "8429:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 801,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8429:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 804,
													"initialValue": {
														"hexValue": "30",
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8441:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8429:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8464:3:2",
														"subExpression": {
															"id": 809,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "8464:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"nodeType": "ExpressionStatement",
													"src": "8464:3:2"
												},
												"nodeType": "ForStatement",
												"src": "8424:364:2"
											}
										]
									},
									"functionSelector": "78317be7",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimAmount",
									"nameLocation": "8132:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8152:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "8144:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8143:14:2"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8165:0:2"
									},
									"scope": 856,
									"src": "8123:671:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 857,
							"src": "759:8037:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:8765:2"
				},
				"id": 2
			}
		}
	}
}